{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\nimport { FetchRequests } from \"../redisApi/GetSetData\";\n\nasync function FetchPendingState(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"User DataBase\"), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Listening On\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.states.map(user => {\n    return React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: () => {\n        const min = 1000;\n        const max = 100000000;\n        const rand = Math.floor(min + Math.random() * (max - min));\n        console.log(rand);\n        props.createNewChannel(rand, user.address).then(() => {\n          // Add Channel Id in List\n          // set default state as an last state\n          // set listening socket from UserList \n          toast.success(\"Channel Created with id \" + rand);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"CreateChannel\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, user.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, user.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, user.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, user.listen));\n  }))));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nclass PendingState extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channelId: \"\",\n      channelIdError: \"\",\n      amount: '',\n      amountError: \"\",\n      pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\")\n    };\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault(); // this.setState({ 'channelIdError': \"\" })\n      // this.setState({ 'amountError': \"\" })\n      // if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n      //     this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n      // }\n      // else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n      //     this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n      // }\n      // else {\n\n      let response = await FetchRequests(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1);\n      console.log(response);\n      localStorage.setItem('pendingState', JSON.stringify(response)); // }\n      // this.setState({ 'channelId': \"\" })\n      // this.setState({ 'amount': \"\" })\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Pending States\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Hello React with Local Storage!\"), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Deposit Amount\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(FetchPendingState, {\n      states: this.state.pendingStates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","toast","FetchRequests","FetchPendingState","props","states","map","user","id","min","max","rand","Math","floor","random","console","log","createNewChannel","address","then","success","name","category","listen","PendingState","Component","state","channelId","channelIdError","amount","amountError","pendingStates","JSON","parse","localStorage","getItem","handleConfirmChannel","event","preventDefault","response","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests } from \"../redisApi/GetSetData\";\nasync function FetchPendingState(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.states.map(user => {\n                        return (\n                            <tr key={user.id}>\n                                <td>\n                                    <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 1000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            props.createNewChannel(rand, user.address).then(() => {\n                                                // Add Channel Id in List\n                                                // set default state as an last state\n                                                // set listening socket from UserList \n                                                toast.success(\"Channel Created with id \" + rand);\n                                            });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button>\n                                </td>\n                                <td>{user.name}</td>\n                                <td>{user.address}</td>\n                                <td>{user.category}</td>\n                                <td>{user.listen}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\n\nclass PendingState extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n        pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n    };\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        // this.setState({ 'channelIdError': \"\" })\n        // this.setState({ 'amountError': \"\" })\n        // if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n        //     this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n        // }\n        // else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n        //     this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n        // }\n        // else {\n        let response = await FetchRequests(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1)\n        console.log(response)\n        localStorage.setItem('pendingState', JSON.stringify(response));\n        // }\n        // this.setState({ 'channelId': \"\" })\n        // this.setState({ 'amount': \"\" })\n    }\n    render() {\n        return (\n            <>\n                <h2>Pending States</h2>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <form id=\"form\" onSubmit={this.handleConfirmChannel}>\n                        <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                    </form>\n                    <FetchPendingState states={this.state.pendingStates} />\n                </div>\n            </>\n        )\n    }\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}