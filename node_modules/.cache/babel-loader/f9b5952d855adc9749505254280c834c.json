{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\nimport { FetchRequests } from \"../redisApi/GetSetData\";\n\nfunction FetchPendingState(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"User DataBase\"), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Listening On\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.fetchPendingState(1, 1, 1).then(requests => {\n    // Add Channel Id in List\n    // set default state as an last state\n    // set listening socket from UserList \n    toast.success(\"Channel Created with id \" + rand);\n    props.users.map(user => {\n      return React.createElement(\"tr\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => {\n          const min = 1000;\n          const max = 100000000;\n          const rand = Math.floor(min + Math.random() * (max - min));\n          console.log(rand);\n          props.fetchPendingState(1, 1, 1).then(() => {\n            // Add Channel Id in List\n            // set default state as an last state\n            // set listening socket from UserList \n            toast.success(\"Channel Created with id \" + rand);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"CreateChannel\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, user.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, user.address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, user.category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, user.listen));\n    });\n  }))));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nconst PendingState = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Pending States\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(FetchPendingState, {\n    fetchPendingState: FetchRequests,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","toast","FetchRequests","FetchPendingState","props","fetchPendingState","then","requests","success","rand","users","map","user","id","min","max","Math","floor","random","console","log","name","address","category","listen","PendingState"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests } from \"../redisApi/GetSetData\";\nfunction FetchPendingState(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.fetchPendingState(1, 1, 1).then((requests) => {\n                            // Add Channel Id in List\n                            // set default state as an last state\n                            // set listening socket from UserList \n                            toast.success(\"Channel Created with id \" + rand);\n\n                            props.users.map(user => {\n                                return (\n                                    <tr key={user.id}>\n                                        <td>\n                                            <button\n                                                className=\"btn btn-outline-danger\"\n                                                onClick={() => {\n                                                    const min = 1000;\n                                                    const max = 100000000;\n                                                    const rand = Math.floor(min + Math.random() * (max - min));\n                                                    console.log(rand)\n                                                    props.fetchPendingState(1, 1, 1).then(() => {\n                                                        // Add Channel Id in List\n                                                        // set default state as an last state\n                                                        // set listening socket from UserList \n                                                        toast.success(\"Channel Created with id \" + rand);\n                                                    });\n                                                }}\n                                            >\n                                                CreateChannel\n                                </button>\n                                        </td>\n                                        <td>{user.name}</td>\n                                        <td>{user.address}</td>\n                                        <td>{user.category}</td>\n                                        <td>{user.listen}</td>\n                                    </tr>\n                                );\n                            })\n                        }\n                        )}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nconst PendingState = props => {\n    return (\n        <>\n            <h2>Pending States</h2>\n            <div>\n                <h1>Hello React with Local Storage!</h1>\n                <FetchPendingState fetchPendingState={FetchRequests} />\n            </div>\n        </>\n    );\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}