{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/AddUser.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nfunction UserList(props) {\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Category\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.users.map(user => {\n    return React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: () => {\n        const min = 1;\n        const max = 100;\n        const rand = min + Math.random() * (max - min);\n        props.createNewChannel(user.id, user.address).then(() => {\n          toast.success(\"Course deleted.\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"CreateChannel\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, user.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, user.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, user.category));\n  })));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nexport default UserList;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/AddUser.js"],"names":["React","toast","UserList","props","users","map","user","id","min","max","rand","Math","random","createNewChannel","address","then","success","name","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AACrB,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,OAAO,EAAE,MAAM;AACX,cAAMC,GAAG,GAAG,CAAZ;AACA,cAAMC,GAAG,GAAG,GAAZ;AACA,cAAMC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAnB;AACAL,QAAAA,KAAK,CAACU,gBAAN,CAAuBP,IAAI,CAACC,EAA5B,EAAgCD,IAAI,CAACQ,OAArC,EAA8CC,IAA9C,CAAmD,MAAM;AACrDd,UAAAA,KAAK,CAACe,OAAN,CAAc,iBAAd;AACH,SAFD;AAGH,OATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKV,IAAI,CAACW,IAFV,CAhBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,IAAI,CAACQ,OAAV,CApBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,IAAI,CAACY,QAAV,CArBJ,CADJ;AAyBH,GA1BA,CADL,CATJ,CADJ;AAyCH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAehB,QAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction UserList(props) {\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>&nbsp;</th>\n                    <th>Name</th>\n                    <th>Address</th>\n                    <th>Category</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.users.map(user => {\n                    return (\n                        <tr key={user.id}>\n                            <td>\n                                <button\n                                    className=\"btn btn-outline-danger\"\n                                    onClick={() => {\n                                        const min = 1;\n                                        const max = 100;\n                                        const rand = min + Math.random() * (max - min);\n                                        props.createNewChannel(user.id, user.address).then(() => {\n                                            toast.success(\"Course deleted.\");\n                                        });\n                                    }}\n                                >\n                                    CreateChannel\n                                </button>\n                            </td>\n                            <td>\n                                {/* <Link to={\"/user/\" + user.slug}>{user.title}</Link> */}\n                                {user.name}\n                            </td>\n                            <td>{user.address}</td>\n                            <td>{user.category}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}