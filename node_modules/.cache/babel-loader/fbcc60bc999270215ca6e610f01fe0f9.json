{"ast":null,"code":"import React from 'react';\n\nconst Web3 = require('web3');\n\nfunction checkMetaMask() {\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n\n    try {\n      window.ethereum.enable().then(function () {// User has allowed account access to DApp...\n      });\n    } catch (e) {// User has denied account access to DApp...\n    }\n\n    return web3;\n  } // Legacy DApp Browsers\n  else if (window.web3) {\n      return new Web3(window.web3.currentProvider);\n    } // Non-DApp Browsers\n    else {\n        alert('You have to install MetaMask !');\n      }\n}\n\nfunction getAccount() {\n  let web3Instance = checkMetaMask();\n  console.log(web3Instance.eth.accounts[0]);\n  return web3Instance.eth.accounts[0];\n}\n\nmodule.exports = [checkMetaMask, getAccount];","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/MetaMask.js"],"names":["React","Web3","require","checkMetaMask","window","ethereum","web3","enable","then","e","currentProvider","alert","getAccount","web3Instance","console","log","eth","accounts","module","exports"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,SAASC,aAAT,GAAyB;AACrB,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,UAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAb;;AACA,QAAI;AACAD,MAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAAyBC,IAAzB,CAA8B,YAAY,CACtC;AACH,OAFD;AAGH,KAJD,CAIE,OAAOC,CAAP,EAAU,CACR;AACH;;AACD,WAAOH,IAAP;AACH,GAVD,CAWA;AAXA,OAYK,IAAIF,MAAM,CAACE,IAAX,EAAiB;AAClB,aAAO,IAAIL,IAAJ,CAASG,MAAM,CAACE,IAAP,CAAYI,eAArB,CAAP;AAEH,KAHI,CAIL;AAJK,SAKA;AACDC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ;;AAED,SAASC,UAAT,GAAsB;AAClB,MAAIC,YAAY,GAAGV,aAAa,EAAhC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,GAAb,CAAiBC,QAAjB,CAA0B,CAA1B,CAAZ;AACA,SAAOJ,YAAY,CAACG,GAAb,CAAiBC,QAAjB,CAA0B,CAA1B,CAAP;AACH;;AACDC,MAAM,CAACC,OAAP,GAAiB,CAAChB,aAAD,EACbS,UADa,CAAjB","sourcesContent":["import React from 'react'\nconst Web3 = require('web3')\n\nfunction checkMetaMask() {\n    if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n            window.ethereum.enable().then(function () {\n                // User has allowed account access to DApp...\n            });\n        } catch (e) {\n            // User has denied account access to DApp...\n        }\n        return web3\n    }\n    // Legacy DApp Browsers\n    else if (window.web3) {\n        return new Web3(window.web3.currentProvider);\n\n    }\n    // Non-DApp Browsers\n    else {\n        alert('You have to install MetaMask !');\n    }\n}\n\nfunction getAccount() {\n    let web3Instance = checkMetaMask()\n    console.log(web3Instance.eth.accounts[0])\n    return web3Instance.eth.accounts[0];\n}\nmodule.exports = [checkMetaMask,\n    getAccount];"]},"metadata":{},"sourceType":"module"}