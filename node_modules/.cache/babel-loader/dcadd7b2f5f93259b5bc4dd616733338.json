{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/redisApi/nodecheck.js\";\nimport React from 'react';\n\nclass RedisCheck extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ws = new WebSocket('http://localhost:6379');\n  }\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected');\n    };\n\n    this.ws.onmessage = evt => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      this.setState({\n        dataFromServer: message\n      });\n      console.log(message);\n    };\n\n    this.ws.onclose = () => {\n      console.log('disconnected'); // automatically try to reconnect on connection loss\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"hello\");\n  }\n\n}\n\nexport default RedisCheck; // import { WebSocket } from \"ws\";\n// // var WebSocket = require('ws')\n// import { redis_connection } from \"redis-connection\";\n// function testJSON() {\n//     var jsonSocket = new WebSocket(\"ws://127.0.0.1:6379/.json\");\n//     jsonSocket.onopen = function () {\n//         console.log(\"JSON socket connected!\");\n//         jsonSocket.send(JSON.stringify([\"SET\", \"hello\", \"world\"]));\n//         jsonSocket.send(JSON.stringify([\"GET\", \"hello\"]));\n//     };\n//     jsonSocket.onmessage = function (messageEvent) {\n//         console.log(\"JSON received:\", messageEvent.data);\n//     };\n// }\n// function RedisConnection() {\n//     let redisClient = redis_connection; // require & connect\n//     redisClient.set('hello', 'world');\n//     redisClient.get('hello', function (err, reply) {\n//         console.log('hello', reply.toString()); // hello world\n//         redisClient.end(true); // this will \"flush\" any outstanding requests to redis\n//     });\n// }\n// export default RedisConnection;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/redisApi/nodecheck.js"],"names":["React","RedisCheck","Component","ws","WebSocket","componentDidMount","onopen","console","log","onmessage","evt","message","JSON","parse","data","setState","dataFromServer","onclose","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAGrCC,EAHqC,GAGhC,IAAIC,SAAJ,CAAc,uBAAd,CAHgC;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,EAAL,CAAQG,MAAR,GAAiB,MAAM;AACnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAHD;;AAKA,SAAKL,EAAL,CAAQM,SAAR,GAAoBC,GAAG,IAAI;AACvB;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEL;AAAlB,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACH,KALD;;AAOA,SAAKR,EAAL,CAAQc,OAAR,GAAkB,MAAM;AACpBV,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADoB,CAEpB;AAEH,KAJD;AAMH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;;AAhCoC;;AAmCzC,eAAejB,UAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nclass RedisCheck extends React.Component {\n\n    // instance of websocket connection as a class property\n    ws = new WebSocket('http://localhost:6379')\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected')\n        }\n\n        this.ws.onmessage = evt => {\n            // listen to data sent from the websocket server\n            const message = JSON.parse(evt.data)\n            this.setState({ dataFromServer: message })\n            console.log(message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n            // automatically try to reconnect on connection loss\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                hello\n            </div>\n        )\n    }\n}\n\nexport default RedisCheck;\n// import { WebSocket } from \"ws\";\n// // var WebSocket = require('ws')\n// import { redis_connection } from \"redis-connection\";\n// function testJSON() {\n//     var jsonSocket = new WebSocket(\"ws://127.0.0.1:6379/.json\");\n//     jsonSocket.onopen = function () {\n\n//         console.log(\"JSON socket connected!\");\n//         jsonSocket.send(JSON.stringify([\"SET\", \"hello\", \"world\"]));\n//         jsonSocket.send(JSON.stringify([\"GET\", \"hello\"]));\n//     };\n//     jsonSocket.onmessage = function (messageEvent) {\n//         console.log(\"JSON received:\", messageEvent.data);\n//     };\n// }\n\n// function RedisConnection() {\n//     let redisClient = redis_connection; // require & connect\n//     redisClient.set('hello', 'world');\n//     redisClient.get('hello', function (err, reply) {\n//         console.log('hello', reply.toString()); // hello world\n//         redisClient.end(true); // this will \"flush\" any outstanding requests to redis\n//     });\n// }\n// export default RedisConnection;"]},"metadata":{},"sourceType":"module"}