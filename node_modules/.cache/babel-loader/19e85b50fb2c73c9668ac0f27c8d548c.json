{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nimport './UserList.css';\nimport { FetchRequests, DeleteRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\n\nasync function onDeleteClick(index) {\n  let response = await DeleteRequest(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1, index);\n  console.log(response); // localStorage.setItem('pendingState', JSON.stringify(response));\n}\n\nasync function onAcceptClick(request, index) {\n  // console.log(request)\n  // TODO: split content here and set value to storage and also send back status to other the party\n  let state = JSON.parse(request); // {\"channel_id\":\"channel_id\",\"count\":2,\"Alice_Cash\":11,\"Bob_Cash\":12,\"signature\":\"0xae1744019f6131672c1ebb3e49d0b1df608ff33736c22e8193ccb86f284f0d0535dac9ab06b4a00179c43ec8b78d446f3d880e89acedb6c43be08960aeef29091b\"}\n\n  let channel_id = state['channel_id'];\n  let count = state['count'];\n  let Alice_Cash = state['Alice_Cash'];\n  let Bob_Cash = state['Bob_Cash'];\n  let signature = state['signature'];\n  console.log(channel_id, count, Alice_Cash, Bob_Cash, signature); // let ReqObject = JSON.parse(request)\n  // console.log(ReqObject.channel_id, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n\n  const sender = await FetchAccount();\n  const TheOtherParty = await FetchOtherParty(1, sender);\n  console.log(TheOtherParty); // const flag = await IsValidSignature(sender, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n  // console.log(flag)\n  // let result = await GenerateSignatures(ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash)\n  // console.log(result)\n  // ReqObject.signature = result.alice\n  // Socket.emit('publishToChannel', 'newChannel', JSON.stringify(ReqObject));\n  // console.log(\"all Done\")\n}\n\nclass PendingState extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channelId: \"\",\n      channelIdError: \"\",\n      amount: '',\n      amountError: \"\",\n      pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\")\n    };\n\n    this.handlePendingState = async event => {\n      event.preventDefault();\n      let sender = await FetchAccount();\n      let response = await FetchRequests(sender, STATE_TYPE.Request);\n      console.log(response);\n      localStorage.setItem('pendingState', JSON.stringify(response));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Pending States\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Hello React with Local Storage!\"), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handlePendingState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Refresh Pending States\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), console.log(this.state.pendingStates), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"State Details\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, Object.keys(this.state.pendingStates).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.pendingStates[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.pendingStates[request])));\n    })))));\n  }\n\n}\n\n;\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","FetchRequests","DeleteRequest","FetchAccount","FetchOtherParty","STATE_TYPE","onDeleteClick","index","response","console","log","onAcceptClick","request","state","JSON","parse","channel_id","count","Alice_Cash","Bob_Cash","signature","sender","TheOtherParty","PendingState","Component","channelId","channelIdError","amount","amountError","pendingStates","localStorage","getItem","handlePendingState","event","preventDefault","Request","setItem","stringify","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests, DeleteRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\n\n\nasync function onDeleteClick(index) {\n    let response = await DeleteRequest(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1, index)\n    console.log(response)\n    // localStorage.setItem('pendingState', JSON.stringify(response));\n\n}\n\nasync function onAcceptClick(request, index) {\n    // console.log(request)\n    // TODO: split content here and set value to storage and also send back status to other the party\n    let state = JSON.parse(request)\n    // {\"channel_id\":\"channel_id\",\"count\":2,\"Alice_Cash\":11,\"Bob_Cash\":12,\"signature\":\"0xae1744019f6131672c1ebb3e49d0b1df608ff33736c22e8193ccb86f284f0d0535dac9ab06b4a00179c43ec8b78d446f3d880e89acedb6c43be08960aeef29091b\"}\n    let channel_id = state['channel_id']\n    let count = state['count']\n    let Alice_Cash = state['Alice_Cash']\n    let Bob_Cash = state['Bob_Cash']\n    let signature = state['signature']\n\n    console.log(channel_id, count, Alice_Cash, Bob_Cash, signature)\n    // let ReqObject = JSON.parse(request)\n    // console.log(ReqObject.channel_id, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n    const sender = await FetchAccount()\n    const TheOtherParty = await FetchOtherParty(1, sender)\n    console.log(TheOtherParty)\n    // const flag = await IsValidSignature(sender, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n    // console.log(flag)\n    // let result = await GenerateSignatures(ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash)\n    // console.log(result)\n    // ReqObject.signature = result.alice\n    // Socket.emit('publishToChannel', 'newChannel', JSON.stringify(ReqObject));\n    // console.log(\"all Done\")\n}\n\n\nclass PendingState extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n        pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n    };\n    handlePendingState = async (event) => {\n        event.preventDefault();\n        let sender = await FetchAccount()\n        let response = await FetchRequests(sender, STATE_TYPE.Request)\n        console.log(response)\n        localStorage.setItem('pendingState', JSON.stringify(response));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Pending States</h2>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <form id=\"form\" onSubmit={this.handlePendingState}>\n                        <input type=\"submit\" value=\"Refresh Pending States\" className=\"btn btn-primary\" />\n                    </form>\n                    {\n\n                        console.log(this.state.pendingStates)\n                    }\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>State Details</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                Object.keys(this.state.pendingStates).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button\n                                                    className=\"btn btn-outline-danger\"\n                                                    onClick={() => onDeleteClick(request)}\n                                                >\n                                                    Delete Request\n                                            </button>\n                                            </td>\n                                            <td>\n                                                <button\n                                                    className=\"btn btn-outline-danger\"\n                                                    onClick={() => onAcceptClick(this.state.pendingStates[request], request)}\n                                                >\n                                                    Accept Request\n                                            </button>\n                                            </td>\n                                            <td><span>{this.state.pendingStates[request]}</span></td>\n                                            {/* <td>{JSON.parse(this.state.response[request])}</td> */}\n                                            {/* <td>{this.state.response[request].count}</td> */}\n                                            {/* <td>{this.state.response[request]['count']}</td> */}\n                                            {/* <td>{this.state.response[request].count}</td> */}\n                                        </tr>\n                                    )\n\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}