{"ast":null,"code":"var net = require(\"net\"),\n    hiredis = require('bindings')('hiredis.node');\n\nvar bufStar = new Buffer(\"*\", \"ascii\");\nvar bufDollar = new Buffer(\"$\", \"ascii\");\nvar bufCrlf = new Buffer(\"\\r\\n\", \"ascii\");\nexports.Reader = hiredis.Reader;\n\nexports.writeCommand = function () {\n  var args = arguments,\n      bufLen = new Buffer(String(args.length), \"ascii\"),\n      parts = [bufStar, bufLen, bufCrlf],\n      size = 3 + bufLen.length;\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (!Buffer.isBuffer(arg)) arg = new Buffer(String(arg));\n    bufLen = new Buffer(String(arg.length), \"ascii\");\n    parts = parts.concat([bufDollar, bufLen, bufCrlf, arg, bufCrlf]);\n    size += 5 + bufLen.length + arg.length;\n  }\n\n  return Buffer.concat(parts, size);\n};\n\nexports.createConnection = function (port, host) {\n  var s = net.createConnection(port || 6379, host);\n  var r = new hiredis.Reader();\n  var _write = s.write;\n\n  s.write = function () {\n    var data = exports.writeCommand.apply(this, arguments);\n    return _write.call(s, data);\n  };\n\n  s.on(\"data\", function (data) {\n    var reply;\n    r.feed(data);\n\n    try {\n      while ((reply = r.get()) !== undefined) s.emit(\"reply\", reply);\n    } catch (err) {\n      r = null;\n      s.emit(\"error\", err);\n      s.destroy();\n    }\n  });\n  return s;\n};","map":null,"metadata":{},"sourceType":"script"}