{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css'; // import { toast } from \"react-toastify\";\n\nconst axios = require('axios');\n\nconst RedisHandlerURL = 'http://localhost:5002';\nconst activeStyle = {\n  color: \"grey\"\n}; // function ShowState(props) {\n//     return (\n//         <table id=\"table\" className=\"table\">\n//             <thead>\n//                 <tr>\n//                     <th>Type</th>\n//                     <th>value</th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 <tr key=\"Channel Id\">\n//                     <td><span>Channel Id</span></td>\n//                     <td><span>{props.state[0]}</span></td>\n//                 </tr>\n//                 <tr key=\"Transaction Count\">\n//                     <td ><span>Transaction Count</span></td>\n//                     <td><span>{props.state[1]}</span></td>\n//                 </tr>\n//                 <tr key=\"Alice Cash\">\n//                     <td ><span>Alice Cash</span></td>\n//                     <td><span>{props.state[2]}</span></td>\n//                 </tr>\n//                 <tr key=\"Bob Cash\">\n//                     <td ><span>Bob Cash</span></td>\n//                     <td><span>{props.state[3]}</span></td>\n//                 </tr>\n//             </tbody>\n//         </table>\n//     )\n// }\n\nclass RedisFunctionalTesting extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: '',\n      channelId: '',\n      reqType: '',\n      requestData: ''\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.reqType, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let sender = await FetchAccount();\n        var bodyFormData = new FormData();\n        bodyFormData.set('channel_id', this.state.channelId);\n        bodyFormData.set('address', sender);\n        bodyFormData.set('request_type', this.state.reqType);\n        bodyFormData.set('request_data', this.state.requestData);\n        const resp = await axios({\n          method: 'post',\n          url: RedisHandlerURL + '/publish',\n          // url: RedisHandlerURL + '/subscribe',\n          // url: RedisHandlerURL + '/unsubscribe',\n          data: bodyFormData\n        });\n\n        if (resp.status === 200) {\n          console.log(resp.data);\n        } // console.log(await GenerateSignatures(this.state.lastState[1], this.state.reqType, this.state.requestData))\n        // ChannelConfirm(this.state.channelId, this.state.amount)\n\n      } // this.setState({ 'reqType': \"\" })\n      // this.setState({ 'requestData': \"\" })\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      activeStyle: activeStyle,\n      exact: true,\n      to: \"/pendingStates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Pending States\"), \" | \", React.createElement(NavLink, {\n      activeStyle: activeStyle,\n      to: \"/channeldetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Last State\"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Pending States\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Hello React with Local Storage!\"), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handlePendingState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Refresh Pending States\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), console.log(this.state.pendingStates), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"State Details\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, Object.keys(this.state.pendingStates).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.pendingStates[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.pendingStates[request])));\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"RedisFunctionalTesting\")), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channelId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channelId\",\n      onChange: event => this.setState({\n        channelId: event.target.value\n      }),\n      type: \"text\",\n      name: \"channelId\",\n      className: \"form-control\",\n      value: this.state.channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"reqType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Request Type\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"reqType\",\n      type: \"text\",\n      onChange: event => this.setState({\n        reqType: event.target.value\n      }),\n      name: \"reqType\",\n      className: \"form-control\",\n      value: this.state.reqType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"requestData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Request Data\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"requestData\",\n      type: \"text\",\n      onChange: event => this.setState({\n        requestData: event.target.value\n      }),\n      name: \"requestData\",\n      className: \"form-control\",\n      value: this.state.requestData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Transaction\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default RedisFunctionalTesting;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js"],"names":["React","NavLink","FetchAccount","axios","require","RedisHandlerURL","activeStyle","color","RedisFunctionalTesting","Component","state","errors","channelId","reqType","requestData","onChange","event","setState","target","value","handleConfirmChannel","preventDefault","Number","isNaN","parseInt","sender","bodyFormData","FormData","set","resp","method","url","data","status","console","log","render","handlePendingState","pendingStates","Object","keys","map","request","onDeleteClick","onAcceptClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css'\n// import { toast } from \"react-toastify\";\nconst axios = require('axios');\nconst RedisHandlerURL = 'http://localhost:5002';\nconst activeStyle = { color: \"grey\" };\n\n// function ShowState(props) {\n\n//     return (\n//         <table id=\"table\" className=\"table\">\n//             <thead>\n//                 <tr>\n//                     <th>Type</th>\n//                     <th>value</th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 <tr key=\"Channel Id\">\n//                     <td><span>Channel Id</span></td>\n//                     <td><span>{props.state[0]}</span></td>\n//                 </tr>\n//                 <tr key=\"Transaction Count\">\n//                     <td ><span>Transaction Count</span></td>\n//                     <td><span>{props.state[1]}</span></td>\n//                 </tr>\n//                 <tr key=\"Alice Cash\">\n//                     <td ><span>Alice Cash</span></td>\n//                     <td><span>{props.state[2]}</span></td>\n//                 </tr>\n//                 <tr key=\"Bob Cash\">\n//                     <td ><span>Bob Cash</span></td>\n//                     <td><span>{props.state[3]}</span></td>\n//                 </tr>\n//             </tbody>\n//         </table>\n//     )\n// }\n\nclass RedisFunctionalTesting extends React.Component {\n    state = {\n        errors: '',\n        channelId: '',\n        reqType: '',\n        requestData: '',\n\n    }\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.reqType, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sender = await FetchAccount()\n            var bodyFormData = new FormData();\n            bodyFormData.set('channel_id', this.state.channelId);\n            bodyFormData.set('address', sender);\n            bodyFormData.set('request_type', this.state.reqType);\n            bodyFormData.set('request_data', this.state.requestData);\n            const resp = await axios({\n                method: 'post',\n                url: RedisHandlerURL + '/publish',\n                // url: RedisHandlerURL + '/subscribe',\n                // url: RedisHandlerURL + '/unsubscribe',\n                data: bodyFormData\n            })\n            if (resp.status === 200) {\n                console.log(resp.data)\n            }\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.reqType, this.state.requestData))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        // this.setState({ 'reqType': \"\" })\n        // this.setState({ 'requestData': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>\n                    <nav>\n                        <NavLink activeStyle={activeStyle} exact to=\"/pendingStates\">\n                            Pending States\n                        </NavLink>\n                        {\" | \"}\n                        <NavLink activeStyle={activeStyle} to=\"/channeldetails\">\n                            Last State\n                        </NavLink>\n                    </nav>\n                </h2>\n                <h2>Channel Details</h2>\n                <div>\n                    <h2>Pending States</h2>\n                    <div>\n                        <h1>Hello React with Local Storage!</h1>\n                        <form id=\"form\" onSubmit={this.handlePendingState}>\n                            <input type=\"submit\" value=\"Refresh Pending States\" className=\"btn btn-primary\" />\n                        </form>\n                        {\n\n                            console.log(this.state.pendingStates)\n                        }\n                        <table id=\"table\" className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Decline State</th>\n                                    <th>Accept State</th>\n                                    <th>State Details</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    Object.keys(this.state.pendingStates).map(request => {\n                                        return (\n                                            <tr key={request}>\n                                                <td>\n                                                    <button\n                                                        className=\"btn btn-outline-danger\"\n                                                        onClick={() => onDeleteClick(request)}\n                                                    >\n                                                        Delete Request\n                                            </button>\n                                                </td>\n                                                <td>\n                                                    <button\n                                                        className=\"btn btn-outline-danger\"\n                                                        onClick={() => onAcceptClick(this.state.pendingStates[request], request)}\n                                                    >\n                                                        Accept Request\n                                            </button>\n                                                </td>\n                                                <td><span>{this.state.pendingStates[request]}</span></td>\n                                                {/* <td>{JSON.parse(this.state.response[request])}</td> */}\n                                                {/* <td>{this.state.response[request].count}</td> */}\n                                                {/* <td>{this.state.response[request]['count']}</td> */}\n                                                {/* <td>{this.state.response[request].count}</td> */}\n                                            </tr>\n                                        )\n\n                                    }\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                    <div>\n                        <h1>RedisFunctionalTesting</h1>\n                        {/* <ShowState state={this.state.lastState} /> */}\n                    </div>\n                    <div className=\"mt-2\" ></div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"channelId\">Channel Id</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"channelId\"\n                                    onChange={event => this.setState({ channelId: event.target.value })}\n                                    type=\"text\"\n                                    name=\"channelId\"\n                                    className=\"form-control\"\n                                    value={this.state.channelId}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"reqType\">Request Type</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"reqType\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ reqType: event.target.value })}\n                                    name=\"reqType\"\n                                    className=\"form-control\"\n                                    value={this.state.reqType}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"requestData\">Request Data</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"requestData\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ requestData: event.target.value })}\n                                    name=\"requestData\"\n                                    className=\"form-control\"\n                                    value={this.state.requestData}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default RedisFunctionalTesting;\n"]},"metadata":{},"sourceType":"module"}