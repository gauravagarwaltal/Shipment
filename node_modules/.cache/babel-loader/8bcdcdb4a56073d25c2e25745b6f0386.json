{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\nimport { FetchRequests } from \"../redisApi/GetSetData\";\n\nfunction FetchPendingState(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"User DataBase\"), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Listening On\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"user.id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-danger\",\n    onClick: () => {\n      const min = 1000;\n      const max = 100000000;\n      const rand = Math.floor(min + Math.random() * (max - min));\n      console.log(rand);\n      props.fetchPendingState(1, 1, 1).then(request => {\n        // Add Channel Id in List\n        // set default state as an last state\n        // set listening socket from UserList \n        toast.success(\"Channel Created with id \" + request + \"d\");\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"CreateChannel\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"user.name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"user.address}\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"user.category}\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"user.listen}\")))));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nconst PendingState = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Pending States\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(FetchPendingState, {\n    fetchPendingState: FetchRequests,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","toast","FetchRequests","FetchPendingState","props","min","max","rand","Math","floor","random","console","log","fetchPendingState","then","request","success","PendingState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAI,IAAA,GAAG,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,wBADd;AAEI,IAAA,OAAO,EAAE,MAAM;AACX,YAAMC,GAAG,GAAG,IAAZ;AACA,YAAMC,GAAG,GAAG,SAAZ;AACA,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAGG,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAjB,CAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAH,MAAAA,KAAK,CAACS,iBAAN,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCC,IAAjC,CAAuCC,OAAD,IAAa;AAC/C;AACA;AACA;AACAd,QAAAA,KAAK,CAACe,OAAN,CAAc,6BAA6BD,OAA7B,GAAuC,GAArD;AACH,OALD;AAMH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBJ,CAFJ,CAVJ,CAFJ,CADJ;AA6CH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,YAAY,GAAGb,KAAK,IAAI;AAC1B,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,oBAAC,iBAAD;AAAmB,IAAA,iBAAiB,EAAEF,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ;AASH,CAVD;;AAWA,eAAee,YAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests } from \"../redisApi/GetSetData\";\nfunction FetchPendingState(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    <tr key=\"user.id\">\n                        <td>\n                            <button\n                                className=\"btn btn-outline-danger\"\n                                onClick={() => {\n                                    const min = 1000;\n                                    const max = 100000000;\n                                    const rand = Math.floor(min + Math.random() * (max - min));\n                                    console.log(rand)\n                                    props.fetchPendingState(1, 1, 1).then((request) => {\n                                        // Add Channel Id in List\n                                        // set default state as an last state\n                                        // set listening socket from UserList \n                                        toast.success(\"Channel Created with id \" + request + \"d\");\n                                    });\n                                }}\n                            >\n                                CreateChannel\n                                </button>\n                        </td>\n                        <td>user.name</td>\n                        <td>user.address}</td>\n                        <td>user.category}</td>\n                        <td>user.listen}</td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nconst PendingState = props => {\n    return (\n        <>\n            <h2>Pending States</h2>\n            <div>\n                <h1>Hello React with Local Storage!</h1>\n                <FetchPendingState fetchPendingState={FetchRequests} />\n            </div>\n        </>\n    );\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}