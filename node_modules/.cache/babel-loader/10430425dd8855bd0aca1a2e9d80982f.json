{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js\";\nimport React from \"react\"; // import GenerateSignatures from \"../contract/CreateSignature\";\n\nimport { IsValidSignature, FetchOtherParty } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport './Form.css';\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { SetRequest } from \"../redisApi/GetSetData\";\nimport STATE_TYPE from \"../RequestType\"; // import { toast } from \"react-toastify\";\n// const axios = require('axios');\n\nfunction ShowState(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, console.log(props.state), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"value\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"Channel Id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Channel Id\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.state[0]))), React.createElement(\"tr\", {\n    key: \"Transaction Count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Transaction Count\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.state[1]))), React.createElement(\"tr\", {\n    key: \"Alice Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Alice Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.state[2]))), React.createElement(\"tr\", {\n    key: \"Bob Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Bob Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.state[3]))))));\n}\n\nclass CreateTransaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: '',\n      error: '',\n      channel_id: '',\n      channelId: '',\n      count: '',\n      aliceCash: '',\n      bobCash: '',\n      lastState: null\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n        this.setState({\n          'errors': \"Enter natural number\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.count, 10))) {\n        this.setState({\n          'errors': \"Enter natural number\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let sig = await GenerateSignatures(this.state.count, this.state.aliceCash, this.state.bobCash);\n        console.log(sig);\n        let sender = await FetchAccount();\n        console.log((await IsValidSignature(sender, this.state.count, this.state.aliceCash, this.state.bobCash, sig)));\n        this.setState({\n          'lastState': [this.state.channelId, this.state.count, this.state.aliceCash, this.state.bobCash, sig]\n        });\n        localStorage.setItem(this.state.channelId + 'lastState', JSON.stringify(this.state.lastState));\n        let TheOtherParty = await FetchOtherParty(this.state.channelId, sender);\n        let response = await SetRequest(TheOtherParty, STATE_TYPE.Request, JSON.stringify(this.state.lastState));\n        console.log(\"hello \", response); // const resp1 = await axios.get('localhost:3000/signature/', {\n        //     params: {\n        //         signature: sig,\n        //     }\n        // });\n        // console.log(resp1.data)\n        // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n        // ChannelConfirm(this.state.channelId, this.state.amount)\n      }\n\n      this.setState({\n        'channelId': \"\"\n      });\n      this.setState({\n        'count': \"\"\n      });\n      this.setState({\n        'aliceCash': \"\"\n      });\n      this.setState({\n        'bobCash': \"\"\n      });\n    };\n\n    this.handleLastChannelState = async event => {\n      event.preventDefault();\n      this.setState({\n        'error': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.channel_id, 10))) {\n        this.setState({\n          'errors': \"Enter natural number\"\n        });\n      } else {\n        this.setState({\n          'lastState': JSON.parse(localStorage.getItem(this.state.channel_id + 'lastState'))\n        });\n        let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c';\n        let sender = await FetchAccount();\n        console.log((await IsValidSignature(sender, 0, 1, 1, sig)));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Fetch Last Signed state \"), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleLastChannelState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channel_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channel_id\",\n      onChange: event => this.setState({\n        channel_id: event.target.value\n      }),\n      type: \"text\",\n      name: \"channel_id\",\n      className: \"form-control\",\n      value: this.state.channel_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), this.state.error && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.error)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Fetch Last Signed State\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), this.state.channel_id !== '' && this.state.lastState && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(ShowState, {\n      state: JSON.parse(this.state.lastState),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channel_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channel_id\",\n      onChange: event => this.setState({\n        channelId: event.target.value\n      }),\n      type: \"text\",\n      name: \"channel_id\",\n      className: \"form-control\",\n      value: this.state.channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Count\",\n      onChange: event => this.setState({\n        count: event.target.value\n      }),\n      type: \"text\",\n      name: \"Count\",\n      className: \"form-control\",\n      value: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"aliceCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"aliceCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        aliceCash: event.target.value\n      }),\n      name: \"aliceCash\",\n      className: \"form-control\",\n      value: this.state.aliceCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"bobCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"bobCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        bobCash: event.target.value\n      }),\n      name: \"bobCash\",\n      className: \"form-control\",\n      value: this.state.bobCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Transaction\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default CreateTransaction;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js"],"names":["React","IsValidSignature","FetchOtherParty","FetchAccount","GenerateSignatures","SetRequest","STATE_TYPE","ShowState","props","console","log","state","CreateTransaction","Component","errors","error","channel_id","channelId","count","aliceCash","bobCash","lastState","onChange","event","setState","target","value","handleConfirmChannel","preventDefault","Number","isNaN","parseInt","sig","sender","localStorage","setItem","JSON","stringify","TheOtherParty","response","Request","handleLastChannelState","parse","getItem","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import GenerateSignatures from \"../contract/CreateSignature\";\nimport { IsValidSignature, FetchOtherParty } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport './Form.css'\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { SetRequest } from \"../redisApi/GetSetData\";\nimport STATE_TYPE from \"../RequestType\";\n// import { toast } from \"react-toastify\";\n// const axios = require('axios');\n\nfunction ShowState(props) {\n    return (\n        <div>\n            {console.log(props.state)}\n            <table id=\"table\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr key=\"Channel Id\">\n                        <td><span>Channel Id</span></td>\n                        <td><span>{props.state[0]}</span></td>\n                    </tr>\n                    <tr key=\"Transaction Count\">\n                        <td ><span>Transaction Count</span></td>\n                        <td><span>{props.state[1]}</span></td>\n                    </tr>\n                    <tr key=\"Alice Cash\">\n                        <td ><span>Alice Cash</span></td>\n                        <td><span>{props.state[2]}</span></td>\n                    </tr>\n                    <tr key=\"Bob Cash\">\n                        <td ><span>Bob Cash</span></td>\n                        <td><span>{props.state[3]}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nclass CreateTransaction extends React.Component {\n    state = {\n        errors: '',\n        error: '',\n        channel_id: '',\n        channelId: '',\n        count: '',\n        aliceCash: '',\n        bobCash: '',\n        lastState: null\n    }\n\n    // const [course, setCourse] = useState({\n    //     channelId: \"\",\n    //     count: \"\",\n    //     AliceCash: \"\",\n    //     BobCash: \"\",\n    //     Signature: \"\"\n    // });\n    // localStorage.setItem(props.channelId + 'lastState', lastState);\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'errors': \"Enter natural number\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.count, 10))) {\n            this.setState({ 'errors': \"Enter natural number\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = await GenerateSignatures(this.state.count, this.state.aliceCash, this.state.bobCash)\n            console.log(sig)\n            let sender = await FetchAccount()\n            console.log(await IsValidSignature(sender, this.state.count, this.state.aliceCash, this.state.bobCash, sig))\n            this.setState({\n                'lastState': [\n                    this.state.channelId, this.state.count, this.state.aliceCash, this.state.bobCash, sig\n                ]\n            })\n            localStorage.setItem(this.state.channelId + 'lastState', JSON.stringify(this.state.lastState));\n            let TheOtherParty = await FetchOtherParty(this.state.channelId, sender)\n            let response = await SetRequest(TheOtherParty, STATE_TYPE.Request, JSON.stringify(this.state.lastState))\n            console.log(\"hello \", response)\n            // const resp1 = await axios.get('localhost:3000/signature/', {\n            //     params: {\n            //         signature: sig,\n            //     }\n            // });\n            // console.log(resp1.data)\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'channelId': \"\" })\n        this.setState({ 'count': \"\" })\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    handleLastChannelState = async (event) => {\n        event.preventDefault();\n        this.setState({ 'error': \"\" })\n        if (Number.isNaN(parseInt(this.state.channel_id, 10))) {\n            this.setState({ 'errors': \"Enter natural number\" })\n        }\n        else {\n            this.setState({ 'lastState': JSON.parse(localStorage.getItem(this.state.channel_id + 'lastState')) })\n\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n\n            console.log(await IsValidSignature(sender, 0, 1, 1, sig))\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h3>Fetch Last Signed state </h3>\n                        <form id=\"form\" className=\"mt-2\" onSubmit={this.handleLastChannelState}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"channel_id\">Channel Id</label>\n                                <div className=\"field\">\n                                    <input\n                                        id=\"channel_id\"\n                                        onChange={event => this.setState({ channel_id: event.target.value })}\n                                        type=\"text\"\n                                        name=\"channel_id\"\n                                        className=\"form-control\"\n                                        value={this.state.channel_id}\n                                    />\n                                </div>\n                                {this.state.error && <div className=\"alert alert-danger\">{this.state.error}</div>}\n                            </div>\n                            <input type=\"submit\" value=\"Fetch Last Signed State\" className=\"btn btn-primary\" />\n                        </form>\n                        {(this.state.channel_id !== '') && this.state.lastState && <div className=\"alert alert-danger\"><ShowState state={JSON.parse(this.state.lastState)} /></div>}\n\n                    </div>\n                    <div className=\"mt-2\" ></div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"channel_id\">Channel Id</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"channel_id\"\n                                    onChange={event => this.setState({ channelId: event.target.value })}\n                                    type=\"text\"\n                                    name=\"channel_id\"\n                                    className=\"form-control\"\n                                    value={this.state.channelId}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Count\">Count</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Count\"\n                                    onChange={event => this.setState({ count: event.target.value })}\n                                    type=\"text\"\n                                    name=\"Count\"\n                                    className=\"form-control\"\n                                    value={this.state.count}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"aliceCash\">Alice Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"aliceCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ aliceCash: event.target.value })}\n                                    name=\"aliceCash\"\n                                    className=\"form-control\"\n                                    value={this.state.aliceCash}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"bobCash\">Bob Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"bobCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ bobCash: event.target.value })}\n                                    name=\"bobCash\"\n                                    className=\"form-control\"\n                                    value={this.state.bobCash}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}