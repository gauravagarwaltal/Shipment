{"ast":null,"code":"import _regeneratorRuntime from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{ChannelConfirm}from'../contract/contract_transaction';// import { toast } from 'react-toastify'\nvar ConfirmDeposit=/*#__PURE__*/function(_React$Component){_inherits(ConfirmDeposit,_React$Component);function ConfirmDeposit(){var _getPrototypeOf2;var _this;_classCallCheck(this,ConfirmDeposit);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ConfirmDeposit)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={channelId:\"\",channelIdError:\"\",amount:'',amountError:\"\"};_this.handleConfirmChannel=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_this.setState({'channelIdError':\"\"});_this.setState({'amountError':\"\"});if(Number.isNaN(parseInt(_this.state.channelId,10))){_this.setState({'channelIdError':\"Enter Interger channel Id\"});}else if(Number.isNaN(parseInt(_this.state.amount,10))){_this.setState({'amountError':\"Enter Integer amount(in wei unit)\"});}else{ChannelConfirm(_this.state.channelId,_this.state.amount);}_this.setState({'channelId':\"\"});_this.setState({'amount':\"\"});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(ConfirmDeposit,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:this.handleConfirmChannel},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"channelId\"},\"Channel Id\"),React.createElement(\"div\",{className:\"field\"},React.createElement(\"input\",{id:\"channelId\",type:\"text\",onChange:function onChange(event){return _this2.setState({channelId:event.target.value});},name:\"channelId\",className:\"form-control\",value:this.state.channelId})),this.state.channelIdError&&React.createElement(\"div\",{className:\"alert alert-danger\"},this.state.channelIdError)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"amount\"},\"Amount\"),React.createElement(\"div\",{className:\"field\"},React.createElement(\"input\",{id:\"amount\",type:\"text\",onChange:function onChange(event){return _this2.setState({amount:event.target.value});},name:\"amount\",className:\"form-control\",value:this.state.amount})),this.state.amountError&&React.createElement(\"div\",{className:\"alert alert-danger\"},this.state.amountError)),React.createElement(\"input\",{type:\"submit\",value:\"Deposit Amount\",className:\"btn btn-primary\"})));}}]);return ConfirmDeposit;}(React.Component);export default ConfirmDeposit;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ConfirmDeposit.js"],"names":["React","ChannelConfirm","ConfirmDeposit","state","channelId","channelIdError","amount","amountError","handleConfirmChannel","event","preventDefault","setState","Number","isNaN","parseInt","target","value","Component"],"mappings":"s3BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,kCAA/B,CACA;GAEMC,CAAAA,c,2aACFC,K,CAAQ,CACJC,SAAS,CAAE,EADP,CAEJC,cAAc,CAAE,EAFZ,CAGJC,MAAM,CAAE,EAHJ,CAIJC,WAAW,CAAE,EAJT,C,OAORC,oB,0FAAuB,iBAAOC,KAAP,kHACnBA,KAAK,CAACC,cAAN,GACA,MAAKC,QAAL,CAAc,CAAE,iBAAkB,EAApB,CAAd,EACA,MAAKA,QAAL,CAAc,CAAE,cAAe,EAAjB,CAAd,EACA,GAAIC,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAAC,MAAKX,KAAL,CAAWC,SAAZ,CAAuB,EAAvB,CAArB,CAAJ,CAAsD,CAClD,MAAKO,QAAL,CAAc,CAAE,iBAAkB,2BAApB,CAAd,EACH,CAFD,IAGK,IAAIC,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAAC,MAAKX,KAAL,CAAWG,MAAZ,CAAoB,EAApB,CAArB,CAAJ,CAAmD,CACpD,MAAKK,QAAL,CAAc,CAAE,cAAe,mCAAjB,CAAd,EACH,CAFI,IAGA,CACDV,cAAc,CAAC,MAAKE,KAAL,CAAWC,SAAZ,CAAuB,MAAKD,KAAL,CAAWG,MAAlC,CAAd,CACH,CACD,MAAKK,QAAL,CAAc,CAAE,YAAa,EAAf,CAAd,EACA,MAAKA,QAAL,CAAc,CAAE,SAAU,EAAZ,CAAd,EAdmB,sD,+IAiBd,iBACL,MACI,gCACI,4BAAM,QAAQ,CAAE,KAAKH,oBAArB,EACI,2BAAK,SAAS,CAAC,YAAf,EACI,6BAAO,OAAO,CAAC,WAAf,eADJ,CAEI,2BAAK,SAAS,CAAC,OAAf,EACI,6BACI,EAAE,CAAC,WADP,CAEI,IAAI,CAAC,MAFT,CAGI,QAAQ,CAAE,kBAAAC,KAAK,QAAI,CAAA,MAAI,CAACE,QAAL,CAAc,CAAEP,SAAS,CAAEK,KAAK,CAACM,MAAN,CAAaC,KAA1B,CAAd,CAAJ,EAHnB,CAII,IAAI,CAAC,WAJT,CAKI,SAAS,CAAC,cALd,CAMI,KAAK,CAAE,KAAKb,KAAL,CAAWC,SANtB,EADJ,CAFJ,CAYK,KAAKD,KAAL,CAAWE,cAAX,EAA6B,2BAAK,SAAS,CAAC,oBAAf,EAAqC,KAAKF,KAAL,CAAWE,cAAhD,CAZlC,CADJ,CAeI,2BAAK,SAAS,CAAC,YAAf,EACI,6BAAO,OAAO,CAAC,QAAf,WADJ,CAEI,2BAAK,SAAS,CAAC,OAAf,EACI,6BACI,EAAE,CAAC,QADP,CAEI,IAAI,CAAC,MAFT,CAGI,QAAQ,CAAE,kBAAAI,KAAK,QAAI,CAAA,MAAI,CAACE,QAAL,CAAc,CAAEL,MAAM,CAAEG,KAAK,CAACM,MAAN,CAAaC,KAAvB,CAAd,CAAJ,EAHnB,CAII,IAAI,CAAC,QAJT,CAKI,SAAS,CAAC,cALd,CAMI,KAAK,CAAE,KAAKb,KAAL,CAAWG,MANtB,EADJ,CAFJ,CAYK,KAAKH,KAAL,CAAWI,WAAX,EAA0B,2BAAK,SAAS,CAAC,oBAAf,EAAqC,KAAKJ,KAAL,CAAWI,WAAhD,CAZ/B,CAfJ,CA6BI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,gBAA3B,CAA4C,SAAS,CAAC,iBAAtD,EA7BJ,CADJ,CADJ,CAmCH,C,4BA7DwBP,KAAK,CAACiB,S,EAiEnC,cAAef,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport { ChannelConfirm } from '../contract/contract_transaction';\n// import { toast } from 'react-toastify'\n\nclass ConfirmDeposit extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n    };\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'channelIdError': \"\" })\n        this.setState({ 'amountError': \"\" })\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n            this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'channelId': \"\" })\n        this.setState({ 'amount': \"\" })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleConfirmChannel}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"channelId\"\n                                type=\"text\"\n                                onChange={event => this.setState({ channelId: event.target.value })}\n                                name=\"channelId\"\n                                className=\"form-control\"\n                                value={this.state.channelId}\n                            />\n                        </div>\n                        {this.state.channelIdError && <div className=\"alert alert-danger\">{this.state.channelIdError}</div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"amount\"\n                                type=\"text\"\n                                onChange={event => this.setState({ amount: event.target.value })}\n                                name=\"amount\"\n                                className=\"form-control\"\n                                value={this.state.amount}\n                            />\n                        </div>\n                        {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>}\n                    </div>\n                    <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default ConfirmDeposit;"]},"metadata":{},"sourceType":"module"}