{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nimport './UserList.css';\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\n\nasync function onDeleteClick(index) {\n  const sender = await FetchAccount();\n  let response = await DeleteRequest(sender, STATE_TYPE.Request, index);\n  console.log(response);\n}\n\nasync function onShowLastState(request) {\n  let state = JSON.parse(request);\n  let channel_id = Number.parseInt(state[0]);\n  alert(JSON.parse(localStorage.getItem(channel_id + \"laststate\")) || \"No Signed State Defined\");\n}\n\nasync function onAcceptClick(request, index) {\n  // console.log(request, index)\n  // TODO: split content here and set value to storage and also send back status to other the party\n  let state = JSON.parse(request);\n  let channel_id = Number.parseInt(state[0]);\n  let count = Number.parseInt(state[1]);\n  let Alice_Cash = Number.parseInt(state[2]);\n  let Bob_Cash = Number.parseInt(state[3]);\n  let signature = state[4];\n  console.log(channel_id, count, Alice_Cash, Bob_Cash, signature); // let ReqObject = JSON.parse(request)\n  // console.log(ReqObject.channel_id, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n\n  const sender = await FetchAccount();\n  const TheOtherParty = await FetchOtherParty(channel_id, sender);\n  console.log(TheOtherParty);\n  let checkSig = await IsValidSignature(TheOtherParty, count, Alice_Cash, Bob_Cash, signature);\n\n  if (checkSig === true) {\n    // signature = await GenerateSignatures(count, Alice_Cash, Bob_Cash)\n    // localStorage.setItem(channel_id + 'lastState', JSON.stringify(request));\n    // let lastState = [\n    //     channel_id, count, Alice_Cash, Bob_Cash, signature\n    // ]\n    // let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, JSON.stringify(lastState))\n    // console.log(\"hello \", response)\n    alert(\"valid signature\");\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nclass PendingState extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channelId: \"\",\n      channelIdError: \"\",\n      amount: '',\n      amountError: \"\",\n      pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\")\n    };\n\n    this.handlePendingState = async event => {\n      event.preventDefault();\n      let sender = await FetchAccount(); // console.log(sender)\n\n      let response = await FetchRequests(sender, STATE_TYPE.Request);\n      console.log(response);\n      localStorage.setItem('pendingState', JSON.stringify(response));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"New State Requests\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handlePendingState,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Refresh Pending States\"), console.log(this.state.pendingStates), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"State Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, Object.keys(this.state.pendingStates).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.pendingStates[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.pendingStates[request])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.pendingStates[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    })))));\n  }\n\n}\n\n;\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","FetchRequests","DeleteRequest","SetRequest","FetchAccount","FetchOtherParty","IsValidSignature","STATE_TYPE","GenerateSignatures","onDeleteClick","index","sender","response","Request","console","log","onShowLastState","request","state","JSON","parse","channel_id","Number","parseInt","alert","localStorage","getItem","onAcceptClick","count","Alice_Cash","Bob_Cash","signature","TheOtherParty","checkSig","PendingState","Component","channelId","channelIdError","amount","amountError","pendingStates","handlePendingState","event","preventDefault","setItem","stringify","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\n\n\nasync function onDeleteClick(index) {\n    const sender = await FetchAccount()\n    let response = await DeleteRequest(sender, STATE_TYPE.Request, index)\n    console.log(response)\n}\n\nasync function onShowLastState(request) {\n    let state = JSON.parse(request)\n    let channel_id = Number.parseInt(state[0])\n    alert(JSON.parse(localStorage.getItem(channel_id + \"laststate\")) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(request, index) {\n    // console.log(request, index)\n    // TODO: split content here and set value to storage and also send back status to other the party\n    let state = JSON.parse(request)\n    let channel_id = Number.parseInt(state[0])\n    let count = Number.parseInt(state[1])\n    let Alice_Cash = Number.parseInt(state[2])\n    let Bob_Cash = Number.parseInt(state[3])\n    let signature = state[4]\n\n    console.log(channel_id, count, Alice_Cash, Bob_Cash, signature)\n    // let ReqObject = JSON.parse(request)\n    // console.log(ReqObject.channel_id, ReqObject.count, ReqObject.Alice_Cash, ReqObject.Bob_Cash, ReqObject.signature)\n    const sender = await FetchAccount()\n    const TheOtherParty = await FetchOtherParty(channel_id, sender)\n    console.log(TheOtherParty)\n    let checkSig = await IsValidSignature(TheOtherParty, count, Alice_Cash, Bob_Cash, signature)\n\n    if (checkSig === true) {\n        // signature = await GenerateSignatures(count, Alice_Cash, Bob_Cash)\n        // localStorage.setItem(channel_id + 'lastState', JSON.stringify(request));\n        // let lastState = [\n        //     channel_id, count, Alice_Cash, Bob_Cash, signature\n        // ]\n        // let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, JSON.stringify(lastState))\n        // console.log(\"hello \", response)\n        alert(\"valid signature\")\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\n\n\nclass PendingState extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n        pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n    };\n    handlePendingState = async (event) => {\n        event.preventDefault();\n        let sender = await FetchAccount()\n        // console.log(sender)\n        let response = await FetchRequests(sender, STATE_TYPE.Request)\n        console.log(response)\n        localStorage.setItem('pendingState', JSON.stringify(response));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>New State Requests</h2>\n                <div>\n                    <button onClick={this.handlePendingState} className=\"btn btn-primary\">Refresh Pending States</button>\n                    {\n\n                        console.log(this.state.pendingStates)\n                    }\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>State Details</th>\n                                <th>Last Signed State</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                Object.keys(this.state.pendingStates).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(request)} >\n                                                    Delete Request\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onAcceptClick(this.state.pendingStates[request], request)} >\n                                                    Accept Request\n                                                </button>\n                                            </td>\n                                            <td><span>{this.state.pendingStates[request]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.pendingStates[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}