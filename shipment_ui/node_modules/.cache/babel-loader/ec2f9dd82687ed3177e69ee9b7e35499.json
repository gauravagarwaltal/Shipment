{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CloseChannel.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { IsValidSignature, FetchOtherParty, GetChannelDetails, ChannelClose } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass CloseChannel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: false,\n      offChainState: false,\n      sender: \"\"\n    };\n\n    this.handleCloseChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (!this.state.offChainState || this.state.offChainState === 'No off chain state Found') {\n        alert(\"Close Channel needs Off Chain State\", this.state.offChainState);\n      } else {\n        console.log(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig']);\n        let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender);\n        console.log(TheOtherParty);\n        let sig_check = await IsValidSignature(TheOtherParty, this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig']);\n        console.log(sig_check);\n\n        if (sig_check) {\n          console.log(this.state.offChainState['sig']); // const ChannelClose = async (channel_id, count, sender_balance, recipient_balance, signature, self) => {\n\n          await ChannelClose(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'], this.state.sender);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        if (this.props.location.state.action === 'Close') {\n          GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n            let offChainState = FetchOffChainDetails(sender, this.props.location.state.channelId);\n            this.setState({\n              'sender': sender,\n              'channelId': this.props.location.state.channelId,\n              'offChainState': offChainState,\n              'onChainState': onChainState\n            });\n          }).catch(err => {\n            alert(\"on chain state issue\");\n            console.log(err);\n          });\n        } else {\n          alert(\"go back \");\n        }\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.onChainState && React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.offChainState && React.createElement(OffChainStateView, {\n      details: this.state.offChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleCloseChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Close Channel\"))));\n  }\n\n}\n\n;\nexport default CloseChannel;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CloseChannel.js"],"names":["React","IsValidSignature","FetchOtherParty","GetChannelDetails","ChannelClose","FetchAccount","OnChainStateView","OffChainStateView","FetchOffChainDetails","CloseChannel","Component","state","errors","channelId","onChainState","offChainState","sender","handleCloseChannel","event","preventDefault","setState","alert","console","log","parseInt","TheOtherParty","sig_check","componentDidMount","then","props","location","action","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { IsValidSignature, FetchOtherParty, GetChannelDetails, ChannelClose } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass CloseChannel extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: false,\n        offChainState: false,\n        sender: \"\",\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n\n                if (this.props.location.state.action === 'Close') {\n                    GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n                        let offChainState = FetchOffChainDetails(sender, this.props.location.state.channelId)\n                        this.setState({\n                            'sender': sender,\n                            'channelId': this.props.location.state.channelId,\n                            'offChainState': offChainState,\n                            'onChainState': onChainState,\n                        })\n                    }).catch(err => {\n                        alert(\"on chain state issue\")\n                        console.log(err)\n                    })\n                }\n                else {\n                    alert(\"go back \")\n                }\n            }\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    handleCloseChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (!this.state.offChainState || this.state.offChainState === 'No off chain state Found') {\n            alert(\"Close Channel needs Off Chain State\", this.state.offChainState)\n        }\n        else {\n            console.log(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']),\n                this.state.offChainState['sig'])\n\n            let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender)\n            console.log(TheOtherParty)\n            let sig_check = await IsValidSignature(TheOtherParty, this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']),\n                parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'])\n            console.log(sig_check)\n            if (sig_check) {\n                console.log(this.state.offChainState['sig'])\n                // const ChannelClose = async (channel_id, count, sender_balance, recipient_balance, signature, self) => {\n                await ChannelClose(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']),\n                    parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'], this.state.sender)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        {this.state.onChainState && <OnChainStateView details={this.state.onChainState} />}\n                    </div>\n                    <div>\n                        {this.state.offChainState && <OffChainStateView details={this.state.offChainState} />}\n                    </div>\n                    <div>\n                        <button onClick={this.handleCloseChannel}>Close Channel</button>\n                    </div>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default CloseChannel;\n"]},"metadata":{},"sourceType":"module"}