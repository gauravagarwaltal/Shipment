{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass FetchContractTxn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      details: \"\",\n      value: \"\",\n      sender: \"\",\n      channels: []\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'PayMentChannels';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Event Filter Outcome\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default FetchContractTxn;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js"],"names":["React","GetChannelDetails","ManageDetailsView","ChannelList","FetchAccount","FetchContractTxn","Component","state","errors","channelId","details","value","sender","channels","componentDidMount","then","setState","console","log","key","JSON","parse","localStorage","getItem","catch","err","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,MAAM,EAAE,EALJ;AAMJC,MAAAA,QAAQ,EAAE;AANN,KADmC;AAAA;;AAW3CC,EAAAA,iBAAiB,GAAG;AAEhBV,IAAAA,YAAY,GAAGW,IAAf,CAAoBH,MAAM,IAAI;AAC1B,UAAIA,MAAJ,EAAY;AACR,aAAKI,QAAL,CAAc;AAAE,oBAAUJ;AAAZ,SAAd;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWK,MAAvB;AACA,YAAIO,GAAG,GAAG,KAAKZ,KAAL,CAAWK,MAAX,GAAoB,iBAA9B;AACA,aAAKI,QAAL,CAAc;AAAE,sBAAYI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,KAA6B,IAAxC;AAAd,SAAd;AACH;AAEJ,KARD,EASKK,KATL,CASWC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAZL;AAaH;;AAGDE,EAAAA,MAAM,GAAG;AACL,WACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAUH;;AAxC0C;;AAyC9C;AAED,eAAetB,gBAAf","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass FetchContractTxn extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        details: \"\",\n        value: \"\",\n        sender: \"\",\n        channels: [],\n\n    }\n\n    componentDidMount() {\n\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'PayMentChannels'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n            }\n\n        })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n\n    render() {\n        return (\n            <>\n                <h2>Event Filter Outcome</h2>\n                <div>\n                    <div>\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default FetchContractTxn;\n"]},"metadata":{},"sourceType":"module"}