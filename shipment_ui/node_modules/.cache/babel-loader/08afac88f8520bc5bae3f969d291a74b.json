{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ConfirmDeposit.js\";\nimport React from 'react';\nimport { GetChannelDetails, ChannelConfirm } from '../contract/contract_transaction'; // import { toast } from 'react-toastify'\n\nclass ConfirmDeposit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channelId: \"\",\n      channelIdError: \"\",\n      amount: '',\n      amountError: \"\"\n    };\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'channelIdError': \"\"\n      });\n      this.setState({\n        'amountError': \"\"\n      });\n      console.log(this.state.channelId, Number.isNaN(parseInt(this.state.channelId, 10)));\n      console.log(this.state.amount, Number.isInteger(parseInt(this.state.amount, 10)));\n\n      if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n        this.setState({\n          'channelIdError': \"Enter Interger channel Id\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n        this.setState({\n          'amountError': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        ChannelConfirm(this.state.channelId, this.state.amount);\n      }\n\n      this.setState({\n        'channelId': \"\"\n      });\n      this.setState({\n        'amount': \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channelId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channelId\",\n      type: \"text\",\n      onChange: event => this.setState({\n        channelId: event.target.value\n      }),\n      name: \"channelId\",\n      className: \"form-control\",\n      value: this.state.channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), this.state.channelIdError && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.channelIdError)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"amount\",\n      type: \"text\",\n      onChange: event => this.setState({\n        amount: event.target.value\n      }),\n      name: \"amount\",\n      className: \"form-control\",\n      value: this.state.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), this.state.amountError && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.amountError)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Deposit Amount\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ConfirmDeposit;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ConfirmDeposit.js"],"names":["React","GetChannelDetails","ChannelConfirm","ConfirmDeposit","Component","state","channelId","channelIdError","amount","amountError","handleConfirmChannel","event","preventDefault","setState","console","log","Number","isNaN","parseInt","isInteger","render","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GetChannelDetails, ChannelConfirm } from '../contract/contract_transaction';\n// import { toast } from 'react-toastify'\n\nclass ConfirmDeposit extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n    };\n    // handleChannelDetails = async (event) => {\n    //     event.preventDefault();\n    //     GetChannelDetails(this.state.channelId)\n    //     this.setState({ 'channelId': \"\" })\n\n\n    // }\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'channelIdError': \"\" })\n        this.setState({ 'amountError': \"\" })\n        console.log(this.state.channelId, Number.isNaN(parseInt(this.state.channelId, 10)))\n        console.log(this.state.amount, Number.isInteger(parseInt(this.state.amount, 10)))\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n            this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'channelId': \"\" })\n        this.setState({ 'amount': \"\" })\n\n\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleConfirmChannel}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"channelId\"\n                                type=\"text\"\n                                onChange={event => this.setState({ channelId: event.target.value })}\n                                name=\"channelId\"\n                                className=\"form-control\"\n                                value={this.state.channelId}\n                            />\n                        </div>\n                        {this.state.channelIdError && <div className=\"alert alert-danger\">{this.state.channelIdError}</div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"amount\"\n                                type=\"text\"\n                                onChange={event => this.setState({ amount: event.target.value })}\n                                name=\"amount\"\n                                className=\"form-control\"\n                                value={this.state.amount}\n                            />\n                        </div>\n                        {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>}\n                    </div>\n                    <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                </form>\n\n\n                {/* <form onSubmit={this.handleChannelDetails}>\n                    <label htmlFor=\"count\">Channel Id</label>\n                    {\"   \"}\n                    <input type=\"text\" placeholder=\"channel Id\" value={this.state.channelId}\n                        onChange={event => this.setState({ channelId: event.target.value })} required />\n                    {\"   \"}\n                    <button>GetChannelDetails</button>\n                </form>\n\n                <form onSubmit={this.handleConfirmChannel}>\n                    <label htmlFor=\"count\">Channel Id</label>\n                    {\"   \"}\n                    <input type=\"text\" placeholder=\"channel Id\" value={this.state.channelId2}\n                        onChange={event => this.setState({ channelId2: event.target.value })} required />\n                    {\"   \"}\n                    <button>ChannelConfirm</button>\n                </form> */}\n            </div>\n        )\n    }\n}\n\n\nexport default ConfirmDeposit;"]},"metadata":{},"sourceType":"module"}