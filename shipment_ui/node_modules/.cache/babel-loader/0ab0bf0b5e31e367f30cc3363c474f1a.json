{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport IsNumber from \"../Api/Utils\";\n\nclass ChannelDetailsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      details: \"\",\n      value: \"\",\n      sender: \"\",\n      channels: []\n    };\n\n    this.onAddChange = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      } else {\n        console.log(this.state.value, IsNumber(this.state.value));\n\n        if (IsNumber(this.state.value)) {\n          let key = this.state.sender + 'active_channel_ids';\n          let flag = await IsMyChannel(this.state.value, this.state.sender);\n          var index = this.state.channels.indexOf(this.state.value); // if (flag && index < 0) {\n          //     this.state.channels.push(this.state.value)\n          //     localStorage.setItem(key, JSON.stringify(this.state.channels));\n          // }\n\n          console.log(\"onAddChange Called \", this.state.value, flag, index);\n        } else {\n          console.log(\"non number value\");\n        }\n      }\n    };\n\n    this.onDeleteChange = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      } else {\n        let key = this.state.sender + 'active_channel_ids';\n        let flag = await IsMyChannel(this.state.value, this.state.sender);\n        var index = this.state.channels.indexOf(this.state.value);\n\n        if (!flag && index > -1) {\n          this.state.channels.splice(index, 1);\n        }\n\n        localStorage.setItem(key, JSON.stringify(this.state.channels));\n        console.log(\"onDeleteChange Called \", this.state.value);\n      }\n    };\n\n    this.onValueChange = async event => this.setState({\n      'value': event.target.value\n    });\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n      console.log(\"hello\", this.state.channelId);\n\n      if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n        this.setState({\n          'errors': \"Enter Interger channel Id\"\n        });\n      } else {\n        let value = await GetChannelDetails(this.state.channelId);\n        this.setState({\n          'details': value\n        });\n      }\n    };\n\n    this.onOptionChange = async event => this.setState({\n      'channelId': event.target.value\n    });\n  }\n\n  componentDidMount() {\n    // const slug = this.props.match.params.channel_id;\n    // console.log(this.props)\n    // console.log(slug);\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Add or remove channel (using channel id) from localStorage\"), React.createElement(\"form\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.value,\n      type: \"text\",\n      onChange: this.onValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onAddChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Add Channel Id \"), React.createElement(\"button\", {\n      onClick: this.onDeleteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Delete Channel Id \"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channelId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(ChannelList, {\n      sender: this.state.sender,\n      onChange: this.onOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Get Channel Details\")), this.state.errors === '' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Channel Details of channel id -> \", this.state.channelId), React.createElement(ManageDetailsView, {\n      details: this.state.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default ChannelDetailsPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js"],"names":["React","GetChannelDetails","IsMyChannel","ManageDetailsView","ChannelList","FetchAccount","IsNumber","ChannelDetailsPage","Component","state","errors","channelId","details","value","sender","channels","onAddChange","event","preventDefault","undefined","alert","console","log","key","flag","index","indexOf","onDeleteChange","splice","localStorage","setItem","JSON","stringify","onValueChange","setState","target","handleSubmit","Number","isNaN","parseInt","onOptionChange","componentDidMount","then","parse","getItem","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport IsNumber from \"../Api/Utils\";\n\nclass ChannelDetailsPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        details: \"\",\n        value: \"\",\n        sender: \"\",\n        channels: [],\n\n    }\n\n    componentDidMount() {\n        // const slug = this.props.match.params.channel_id;\n        // console.log(this.props)\n        // console.log(slug);\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n\n            }\n\n        })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    onAddChange = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        else {\n            console.log(this.state.value, IsNumber(this.state.value))\n            if (IsNumber(this.state.value)) {\n                let key = this.state.sender + 'active_channel_ids'\n                let flag = await IsMyChannel(this.state.value, this.state.sender)\n                var index = this.state.channels.indexOf(this.state.value);\n                // if (flag && index < 0) {\n                //     this.state.channels.push(this.state.value)\n                //     localStorage.setItem(key, JSON.stringify(this.state.channels));\n                // }\n                console.log(\"onAddChange Called \", this.state.value, flag, index)\n            }\n            else {\n                console.log(\"non number value\")\n            }\n        }\n    }\n\n    onDeleteChange = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        else {\n            let key = this.state.sender + 'active_channel_ids'\n            let flag = await IsMyChannel(this.state.value, this.state.sender)\n            var index = this.state.channels.indexOf(this.state.value);\n            if (!flag && index > -1) {\n                this.state.channels.splice(index, 1);\n            }\n            localStorage.setItem(key, JSON.stringify(this.state.channels));\n            console.log(\"onDeleteChange Called \", this.state.value)\n        }\n    }\n\n    onValueChange = async (event) => this.setState({ 'value': event.target.value });\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" });\n        console.log(\"hello\", this.state.channelId)\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'errors': \"Enter Interger channel Id\" })\n        }\n        else {\n            let value = await GetChannelDetails(this.state.channelId)\n            this.setState({ 'details': value })\n        }\n    }\n\n    onOptionChange = async (event) => this.setState({ 'channelId': event.target.value });\n\n    render() {\n        return (\n            <>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h3>Add or remove channel (using channel id) from localStorage</h3>\n                        <form id=\"form\">\n                            <input value={this.state.value} type=\"text\" onChange={this.onValueChange} />\n                            <button onClick={this.onAddChange}>Add Channel Id </button>\n                            <button onClick={this.onDeleteChange}>Delete Channel Id </button>\n                        </form>\n                    </div>\n                    <div>\n                        <form id=\"form\" onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"channelId\">Channel Id</label>\n                                <div className=\"field\">\n                                    <ChannelList sender={this.state.sender} onChange={this.onOptionChange} />\n                                </div>\n                                {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                            </div>\n                            <button id=\"button\">Get Channel Details</button>\n                        </form>\n                        {(this.state.errors === '') && (\n                            <div >\n                                <h2>Channel Details of channel id -> {this.state.channelId}</h2>\n                                <ManageDetailsView details={this.state.details} />\n                            </div>\n                        )}\n                    </div>\n                    {/* <EditFiles /> */}\n                </div>\n            </>\n        );\n    }\n};\n\nexport default ChannelDetailsPage;\n"]},"metadata":{},"sourceType":"module"}