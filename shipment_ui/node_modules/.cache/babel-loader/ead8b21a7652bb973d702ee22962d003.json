{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js\";\nimport React, { useState } from \"react\"; // import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport { fetchLastState } from \"../Api/FetchBrowserData\";\n\nconst ChannelDetailsPage = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        details = _useState6[0],\n        setDetails = _useState6[1];\n\n  const _React$useState = React.useState(localStorage.getItem('myValueInLocalStorage') || ''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1]; // const [course, setCourse] = useState({\n  //     id: null,\n  //     slug: \"\",\n  //     title: \"\",\n  //     authorId: null,\n  //     category: \"\"\n  // });\n\n\n  React.useEffect(() => {\n    localStorage.setItem('myValueInLocalStorage', value);\n  }, [value]);\n\n  const onChange = event => setValue(event.target.value);\n\n  function formIsValid() {\n    let _errors = '';\n    if (channelId < 0) _errors = \"Provide Positive Interger Value\";\n    if (channelId === '') _errors = \"Provide Positive Interger Value\";\n    setErrors(_errors); // Form is valid if the errors object has no properties\n\n    return _errors === '';\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    let value = await GetChannelDetails(channelId);\n    setDetails(value);\n    console.log(\"after click \", value);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(\"input\", {\n    value: value,\n    type: \"text\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, value)), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"channelId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Channel Id\"), React.createElement(\"input\", {\n    id: \"channelId\",\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"channel id(integer value)\",\n    value: channelId,\n    onChange: event => setChannelId(event.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Get Channel Details\")), errors && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, errors), errors === '' && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Channel Details of channel id -> \", channelId), React.createElement(ManageDetailsView, {\n    details: details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: fetchLastState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Fetch Last State\")));\n};\n\nexport default ChannelDetailsPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js"],"names":["React","useState","GetChannelDetails","ManageDetailsView","fetchLastState","ChannelDetailsPage","props","errors","setErrors","channelId","setChannelId","details","setDetails","localStorage","getItem","value","setValue","useEffect","setItem","onChange","event","target","formIsValid","_errors","handleSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport { fetchLastState } from \"../Api/FetchBrowserData\";\n\nconst ChannelDetailsPage = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [value, setValue] = React.useState(localStorage.getItem('myValueInLocalStorage') || '');\n    // const [course, setCourse] = useState({\n    //     id: null,\n    //     slug: \"\",\n    //     title: \"\",\n    //     authorId: null,\n    //     category: \"\"\n    // });\n    React.useEffect(() => {\n        localStorage.setItem('myValueInLocalStorage', value);\n    }, [value]);\n    const onChange = event => setValue(event.target.value);\n\n    function formIsValid() {\n        let _errors = '';\n\n        if (channelId < 0) _errors = \"Provide Positive Interger Value\";\n        if (channelId === '') _errors = \"Provide Positive Interger Value\";\n\n        setErrors(_errors);\n        // Form is valid if the errors object has no properties\n        return _errors === '';\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!formIsValid()) return;\n        let value = await GetChannelDetails(channelId)\n        setDetails(value);\n        console.log(\"after click \", value)\n    }\n\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <input value={value} type=\"text\" onChange={onChange} />\n                    <p>{value}</p>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"channelId\">Channel Id</label>\n                    <input id=\"channelId\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"channel id(integer value)\" value={channelId}\n                        onChange={event => setChannelId(event.target.value)} required />\n                    <button>Get Channel Details</button>\n                </form>\n                {errors && (\n                    <div className=\"alert alert-danger\">{errors}</div>\n                )}\n                {(errors === '') && (\n                    <div className=\"alert alert-danger\">\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        <ManageDetailsView details={details} />\n                    </div>\n                )}\n                <button onClick={fetchLastState}>Fetch Last State</button>\n            </div>\n        </>\n    );\n};\n\nexport default ChannelDetailsPage;\n"]},"metadata":{},"sourceType":"module"}