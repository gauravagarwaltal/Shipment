{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingRequests.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nimport './UserList.css';\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { MakeStringState } from \"../LocalStorage/local_storage_api\";\n\nasync function onDeleteClick(index) {\n  const sender = await FetchAccount();\n  let response = await DeleteRequest(sender, STATE_TYPE.Request, index);\n  console.log(response);\n}\n\nasync function onShowLastState(sender, request) {\n  let channel_id = request.split('_')[0];\n  let key = sender + channel_id + \"_last_signed_state\";\n  alert(localStorage.getItem(key) || \"No Signed State Defined\");\n}\n\nasync function onAcceptClick(sender, request, index) {\n  let splitstate = request.split(\"_\");\n  let state_obj = {\n    'channel_id': Number.parseInt(splitstate[0]),\n    'count': Number.parseInt(splitstate[1]),\n    'alice_cash': Number.parseInt(splitstate[2]),\n    'bob_cash': Number.parseInt(splitstate[3]),\n    'sig': splitstate[4]\n  };\n  console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n  const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender);\n  let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_idchannel_id, state_obj.channel_idcount, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n\n  if (checkSig === true) {\n    let signature = await GenerateSignatures(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash);\n    let key = sender + state_obj.channel_id + \"_last_signed_state\";\n    localStorage.setItem(key, JSON.stringify(request));\n    let lastState = MakeStringState(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, signature);\n    let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, lastState);\n    console.log(\"hello \", response);\n    alert(\"valid signature\", response);\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nclass PendingRequests extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingStateRequests: null,\n      sender: null // pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        FetchRequests(this.state.sender, STATE_TYPE.Request).then(response => {\n          console.log(response);\n          let key = this.state.sender + 'pendingRequests';\n          localStorage.setItem(key, JSON.stringify(response));\n          this.setState({\n            pendingStateRequests: response\n          });\n        }).catch(err => {\n          alert(\"error occured while fetching pending requests\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"New State Requests\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.sender, this.state.pendingStateRequests[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[0])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[1])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[2])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[3])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.sender, this.state.pendingStateRequests[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    })))));\n  }\n\n}\n\n;\nexport default PendingRequests;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingRequests.js"],"names":["React","FetchRequests","DeleteRequest","SetRequest","FetchAccount","FetchOtherParty","IsValidSignature","STATE_TYPE","GenerateSignatures","MakeStringState","onDeleteClick","index","sender","response","Request","console","log","onShowLastState","request","channel_id","split","key","alert","localStorage","getItem","onAcceptClick","splitstate","state_obj","Number","parseInt","count","alice_cash","bob_cash","sig","TheOtherParty","checkSig","channel_idchannel_id","channel_idcount","signature","setItem","JSON","stringify","lastState","Response","PendingRequests","Component","state","pendingStateRequests","componentDidMount","then","setState","catch","err","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { MakeStringState } from \"../LocalStorage/local_storage_api\";\n\n\nasync function onDeleteClick(index) {\n    const sender = await FetchAccount()\n    let response = await DeleteRequest(sender, STATE_TYPE.Request, index)\n    console.log(response)\n}\n\nasync function onShowLastState(sender, request) {\n    let channel_id = request.split('_')[0]\n    let key = sender + channel_id + \"_last_signed_state\"\n    alert(localStorage.getItem(key) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(sender, request, index) {\n    let splitstate = request.split(\"_\");\n    let state_obj = {\n        'channel_id': Number.parseInt(splitstate[0]),\n        'count': Number.parseInt(splitstate[1]),\n        'alice_cash': Number.parseInt(splitstate[2]),\n        'bob_cash': Number.parseInt(splitstate[3]),\n        'sig': splitstate[4],\n    }\n    console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n    const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender)\n    let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_idchannel_id, state_obj.channel_idcount, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n\n    if (checkSig === true) {\n        let signature = await GenerateSignatures(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash)\n        let key = sender + state_obj.channel_id + \"_last_signed_state\"\n        localStorage.setItem(key, JSON.stringify(request));\n        let lastState = MakeStringState(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, signature)\n\n        let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, lastState)\n        console.log(\"hello \", response)\n        alert(\"valid signature\", response)\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\n\nclass PendingRequests extends React.Component {\n    state = {\n        pendingStateRequests: null,\n        sender: null,\n        // pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n    };\n\n    componentDidMount() {\n        FetchAccount()\n            .then(sender => {\n                if (sender) {\n                    this.setState({ 'sender': sender })\n                    FetchRequests(this.state.sender, STATE_TYPE.Request)\n                        .then(response => {\n                            console.log(response)\n                            let key = this.state.sender + 'pendingRequests'\n                            localStorage.setItem(key, JSON.stringify(response));\n                            this.setState({ pendingStateRequests: response })\n                        })\n                        .catch(err => {\n                            alert(\"error occured while fetching pending requests\")\n                            console.log(err)\n                        })\n\n                }\n\n            })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h2>New State Requests</h2>\n                <div>\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>Channel Id</th>\n                                <th>Count</th>\n                                <th>Alice Cash</th>\n                                <th>Bob Cash</th>\n                                <th>Last Signed State</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(request)} >\n                                                    Delete Request\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onAcceptClick(this.state.sender, this.state.pendingStateRequests[request], request)} >\n                                                    Accept Request\n                                                </button>\n                                            </td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[0]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[1]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[2]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[3]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.sender, this.state.pendingStateRequests[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n};\nexport default PendingRequests;\n"]},"metadata":{},"sourceType":"module"}