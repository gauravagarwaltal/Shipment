{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/WaitingChannelPage.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport ActionList from \"./ActionList\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass WaitingChannelPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: \"\",\n      offChainState: \"\",\n      sender: \"\",\n      action: ''\n    };\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        this.props.history.push({\n          pathname: '/metamaskIssue'\n        });\n        toast.error(\"check metamask connectivity\");\n      } else {\n        this.setState({\n          'errors': false\n        });\n\n        if (this.state.action === 'select action' || this.state.action === '') {\n          this.setState({\n            'errors': \"Please select action from drop down\"\n          });\n        } else {\n          let path = \"/\" + this.state.action;\n          this.props.history.push({\n            pathname: path,\n            state: {\n              channelId: this.state.channelId,\n              action: this.state.action\n            }\n          });\n        }\n      }\n    };\n\n    this.onActionChange = async event => this.setState({\n      'action': event.target.value\n    });\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        GetChannelDetails(this.props.match.params.channel_id).then(onChainState => {\n          let offChainState = FetchOffChainDetails(sender, this.props.match.params.channel_id);\n          this.setState({\n            'sender': sender,\n            'channelId': this.props.match.params.channel_id,\n            'onChainState': onChainState,\n            'offChainState': offChainState\n          });\n        }).catch(err => {\n          alert(\"on chain state issue\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      this.props.history.push({\n        pathname: '/metamaskIssue'\n      });\n      toast.error(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(OffChainStateView, {\n      details: this.state.offChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.actionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ActionList, {\n      onChange: this.onActionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Apply Action\"))));\n  }\n\n}\n\n;\nexport default WaitingChannelPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/WaitingChannelPage.js"],"names":["React","toast","GetChannelDetails","FetchAccount","OnChainStateView","OffChainStateView","ActionList","FetchOffChainDetails","WaitingChannelPage","Component","state","errors","channelId","onChainState","offChainState","sender","action","actionHandler","event","preventDefault","undefined","props","history","push","pathname","error","setState","path","onActionChange","target","value","componentDidMount","then","match","params","channel_id","catch","err","alert","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport ActionList from \"./ActionList\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass WaitingChannelPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: \"\",\n        offChainState: \"\",\n        sender: \"\",\n        action: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n\n                GetChannelDetails(this.props.match.params.channel_id).then(onChainState => {\n                    let offChainState = FetchOffChainDetails(sender, this.props.match.params.channel_id)\n                    this.setState({\n                        'sender': sender,\n                        'channelId': this.props.match.params.channel_id,\n                        'onChainState': onChainState,\n                        'offChainState': offChainState\n                    })\n                }).catch(err => {\n                    alert(\"on chain state issue\")\n                    console.log(err)\n                })\n\n            }\n\n        }).catch(err => {\n            this.props.history.push({\n                pathname: '/metamaskIssue',\n            })\n            toast.error(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            this.props.history.push({\n                pathname: '/metamaskIssue',\n            })\n            toast.error(\"check metamask connectivity\")\n        }\n        else {\n            this.setState({ 'errors': false });\n            if (this.state.action === 'select action' || this.state.action === '') {\n                this.setState({ 'errors': \"Please select action from drop down\" })\n            }\n            else {\n\n                let path = \"/\" + this.state.action\n                this.props.history.push({\n                    pathname: path,\n                    state: {\n                        channelId: this.state.channelId,\n                        action: this.state.action\n                    }\n                })\n            }\n        }\n    }\n\n    onActionChange = async (event) => this.setState({ 'action': event.target.value });\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        <OnChainStateView details={this.state.onChainState} />\n                    </div>\n                    <div>\n                        <OffChainStateView details={this.state.offChainState} />\n                    </div>\n                    <form id=\"form\" onSubmit={this.actionHandler}>\n                        <ActionList onChange={this.onActionChange} />\n                        {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        <button id=\"button\">Apply Action</button>\n                    </form>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default WaitingChannelPage;\n"]},"metadata":{},"sourceType":"module"}