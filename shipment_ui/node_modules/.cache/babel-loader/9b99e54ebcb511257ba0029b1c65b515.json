{"ast":null,"code":"import React, { Component } from 'react';\nimport Web3 from 'web3';\n\nfunction checkMetaMask() {\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n\n    try {\n      window.ethereum.enable().then(function () {\n        // User has allowed account access to DApp...\n        console.log(\"cool\");\n        return web3;\n      });\n    } catch (e) {// User has denied account access to DApp...\n    }\n  } // Legacy DApp Browsers\n  else if (window.web3) {\n      return new Web3(window.web3.currentProvider);\n    } // Non-DApp Browsers\n    else {\n        alert('You have to install MetaMask !');\n      }\n}\n\nfunction getAccount() {\n  let web3Instance = checkMetaMask();\n  console.log(\"default Account \", web3Instance.eth.accounts[0]);\n  return web3Instance.eth.accounts[0];\n}\n\nexport { checkMetaMask, getAccount };","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/MetaMask.js"],"names":["React","Component","Web3","checkMetaMask","window","ethereum","web3","enable","then","console","log","e","currentProvider","alert","getAccount","web3Instance","eth","accounts"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,SAASC,aAAT,GAAyB;AACrB,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,UAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAb;;AACA,QAAI;AACAD,MAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAAyBC,IAAzB,CAA8B,YAAY;AACtC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAOJ,IAAP;AACH,OAJD;AAKH,KAND,CAME,OAAOK,CAAP,EAAU,CACR;AACH;AAEJ,GAZD,CAaA;AAbA,OAcK,IAAIP,MAAM,CAACE,IAAX,EAAiB;AAClB,aAAO,IAAIJ,IAAJ,CAASE,MAAM,CAACE,IAAP,CAAYM,eAArB,CAAP;AAEH,KAHI,CAIL;AAJK,SAKA;AACDC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ;;AAED,SAASC,UAAT,GAAsB;AAClB,MAAIC,YAAY,GAAGZ,aAAa,EAAhC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,YAAY,CAACC,GAAb,CAAiBC,QAAjB,CAA0B,CAA1B,CAAhC;AACA,SAAOF,YAAY,CAACC,GAAb,CAAiBC,QAAjB,CAA0B,CAA1B,CAAP;AACH;;AACD,SACId,aADJ,EAEIW,UAFJ","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\n\nfunction checkMetaMask() {\n    if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n            window.ethereum.enable().then(function () {\n                // User has allowed account access to DApp...\n                console.log(\"cool\");\n                return web3\n            });\n        } catch (e) {\n            // User has denied account access to DApp...\n        }\n\n    }\n    // Legacy DApp Browsers\n    else if (window.web3) {\n        return new Web3(window.web3.currentProvider);\n\n    }\n    // Non-DApp Browsers\n    else {\n        alert('You have to install MetaMask !');\n    }\n}\n\nfunction getAccount() {\n    let web3Instance = checkMetaMask()\n    console.log(\"default Account \", web3Instance.eth.accounts[0])\n    return web3Instance.eth.accounts[0];\n}\nexport {\n    checkMetaMask,\n    getAccount\n};"]},"metadata":{},"sourceType":"module"}