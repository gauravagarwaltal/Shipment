{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/redisApi/PendingResponses.js\";\nimport React from \"react\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css';\nimport STATE_TYPE from \"../RequestType\";\nimport { FetchRequests, DeleteRequest } from \"./GetSetData\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\n\nasync function onDeleteClick(sender, index) {\n  let response = await DeleteRequest(sender, STATE_TYPE.Response, index);\n  console.log(response);\n}\n\nasync function onShowLastState(sender, request) {\n  let channel_id = request.split('_')[0];\n  let key = sender + channel_id + \"_last_signed_state\";\n  alert(localStorage.getItem(key) || \"No Signed State Defined\");\n}\n\nasync function onAcceptClick(sender, request, index) {\n  let splitstate = request.split(\"_\");\n  let state_obj = {\n    'channel_id': Number.parseInt(splitstate[0]),\n    'count': Number.parseInt(splitstate[1]),\n    'alice_cash': Number.parseInt(splitstate[2]),\n    'bob_cash': Number.parseInt(splitstate[3]),\n    'sig': splitstate[4]\n  };\n  console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n  const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender);\n  let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n\n  if (checkSig === true) {\n    let key = sender + state_obj.channel_id + \"_last_signed_state\";\n    localStorage.setItem(key, request);\n    alert(\"valid signature\");\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nclass PendingResponses extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingResponse: null,\n      sender: null\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n      }\n\n      FetchRequests(sender, STATE_TYPE.Response).then(response => {\n        this.setState({\n          pendingResponse: response\n        });\n      }).catch(err => {\n        alert(\"error occured while fetching pending response\");\n        console.log(err);\n      });\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"New State Response\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.pendingResponse && Object.keys(this.state.pendingResponse).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(this.state.sender, request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.sender, this.state.pendingResponse[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.pendingResponse[request].split('_')[0])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.pendingResponse[request].split('_')[1])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.pendingResponse[request].split('_')[2])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.pendingResponse[request].split('_')[3])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.sender, this.state.pendingResponse[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    })))));\n  }\n\n}\n\n;\nexport default PendingResponses;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/redisApi/PendingResponses.js"],"names":["React","FetchAccount","STATE_TYPE","FetchRequests","DeleteRequest","FetchOtherParty","IsValidSignature","onDeleteClick","sender","index","response","Response","console","log","onShowLastState","request","channel_id","split","key","alert","localStorage","getItem","onAcceptClick","splitstate","state_obj","Number","parseInt","count","alice_cash","bob_cash","sig","TheOtherParty","checkSig","setItem","PendingResponses","Component","state","pendingResponse","onChange","event","setState","target","value","componentDidMount","then","catch","err","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css'\nimport STATE_TYPE from \"../RequestType\";\nimport { FetchRequests, DeleteRequest } from \"./GetSetData\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\n\nasync function onDeleteClick(sender, index) {\n    let response = await DeleteRequest(sender, STATE_TYPE.Response, index)\n    console.log(response)\n}\n\nasync function onShowLastState(sender, request) {\n    let channel_id = request.split('_')[0]\n    let key = sender + channel_id + \"_last_signed_state\"\n    alert(localStorage.getItem(key) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(sender, request, index) {\n    let splitstate = request.split(\"_\");\n    let state_obj = {\n        'channel_id': Number.parseInt(splitstate[0]),\n        'count': Number.parseInt(splitstate[1]),\n        'alice_cash': Number.parseInt(splitstate[2]),\n        'bob_cash': Number.parseInt(splitstate[3]),\n        'sig': splitstate[4],\n    }\n    console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n    const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender)\n    let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n\n    if (checkSig === true) {\n        let key = sender + state_obj.channel_id + \"_last_signed_state\"\n        localStorage.setItem(key, request);\n        alert(\"valid signature\")\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\n\nclass PendingResponses extends React.Component {\n    state = {\n        pendingResponse: null,\n        sender: null,\n    }\n\n    componentDidMount() {\n        FetchAccount()\n            .then(sender => {\n                if (sender) {\n                    this.setState({ 'sender': sender })\n                    console.log(this.state.sender)\n                }\n                FetchRequests(sender, STATE_TYPE.Response)\n                    .then(response => {\n                        this.setState({ pendingResponse: response })\n                    })\n                    .catch(err => {\n                        alert(\"error occured while fetching pending response\")\n                        console.log(err)\n                    })\n            })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    render() {\n        return (\n            <div>\n                <h2>New State Response</h2>\n                <div>\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>Channel Id</th>\n                                <th>Count</th>\n                                <th>Alice Cash</th>\n                                <th>Bob Cash</th>\n                                <th>Last Signed State</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.pendingResponse && Object.keys(this.state.pendingResponse).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button\n                                                    className=\"btn btn-outline-danger\"\n                                                    onClick={() => onDeleteClick(this.state.sender, request)}\n                                                >\n                                                    Delete Request\n                                            </button>\n                                            </td>\n                                            <td>\n                                                <button\n                                                    className=\"btn btn-outline-danger\"\n                                                    onClick={() => onAcceptClick(this.state.sender, this.state.pendingResponse[request], request)}\n                                                >\n                                                    Accept Request\n                                            </button>\n                                            </td>\n                                            <td><span>{this.state.pendingResponse[request].split('_')[0]}</span></td>\n                                            <td><span>{this.state.pendingResponse[request].split('_')[1]}</span></td>\n                                            <td><span>{this.state.pendingResponse[request].split('_')[2]}</span></td>\n                                            <td><span>{this.state.pendingResponse[request].split('_')[3]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.sender, this.state.pendingResponse[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div >\n        );\n    }\n};\n\nexport default PendingResponses;\n"]},"metadata":{},"sourceType":"module"}