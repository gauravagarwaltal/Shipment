{"ast":null,"code":"import { contract_address, contract_abi } from \"./contract_config\";\n\nconst Web3 = require('web3');\n\nconst web3 = new Web3(new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\")));\nconst sideChainContract = new web3.eth.Contract(contract_abi, contract_address);\n\nconst FilterEvents = async sender => {\n  console.log(sender);\n\n  if (sender === undefined || sender === null) {\n    alert(\"Check MetaMask Connectivity\");\n  } else {\n    let key = sender + \"last_fetch_block\";\n    let START_BLOCK = localStorage.getItem(key);\n    START_BLOCK = parseInt(START_BLOCK, 10);\n\n    if (Number.isNaN(START_BLOCK)) {\n      START_BLOCK = 0;\n    }\n\n    const END_BLOCK = await web3.eth.getBlockNumber();\n    localStorage.setItem(key, END_BLOCK);\n    console.log(START_BLOCK, END_BLOCK);\n\n    if (START_BLOCK < END_BLOCK) {\n      sideChainContract.getPastEvents(\"allEvents\", {\n        fromBlock: START_BLOCK,\n        toBlock: END_BLOCK // You can also specify 'latest'\n\n      }).then(events => {\n        console.log(events);\n        return events;\n      }).catch(err => {\n        console.log(\"error in event filter\");\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n};\n\nexport default FilterEvents;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/contract/CreateInstance.js"],"names":["contract_address","contract_abi","Web3","require","web3","providers","HttpProvider","sideChainContract","eth","Contract","FilterEvents","sender","console","log","undefined","alert","key","START_BLOCK","localStorage","getItem","parseInt","Number","isNaN","END_BLOCK","getBlockNumber","setItem","getPastEvents","fromBlock","toBlock","then","events","catch","err"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,YAA3B,QAA+C,mBAA/C;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,CAAS,IAAIA,IAAJ,CAAS,IAAIA,IAAI,CAACG,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAT,CAAb;AAEA,MAAMC,iBAAiB,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBR,YAAtB,EAAoCD,gBAApC,CAA1B;;AAEA,MAAMU,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAIA,MAAM,KAAKG,SAAX,IAAwBH,MAAM,KAAK,IAAvC,EAA6C;AACzCI,IAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,GAFD,MAGK;AACD,QAAIC,GAAG,GAAGL,MAAM,GAAG,kBAAnB;AACA,QAAIM,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAlB;AACAC,IAAAA,WAAW,GAAGG,QAAQ,CAACH,WAAD,EAAc,EAAd,CAAtB;;AAEA,QAAII,MAAM,CAACC,KAAP,CAAaL,WAAb,CAAJ,EAA+B;AAC3BA,MAAAA,WAAW,GAAG,CAAd;AACH;;AACD,UAAMM,SAAS,GAAG,MAAMnB,IAAI,CAACI,GAAL,CAASgB,cAAT,EAAxB;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqBT,GAArB,EAA0BO,SAA1B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ,EAAyBM,SAAzB;;AACA,QAAIN,WAAW,GAAGM,SAAlB,EAA6B;AACzBhB,MAAAA,iBAAiB,CAACmB,aAAlB,CAAgC,WAAhC,EACI;AACIC,QAAAA,SAAS,EAAEV,WADf;AAEIW,QAAAA,OAAO,EAAEL,SAFb,CAEuB;;AAFvB,OADJ,EAKKM,IALL,CAKUC,MAAM,IAAI;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACA,eAAOA,MAAP;AACH,OARL,EASKC,KATL,CASYC,GAAD,IAAS;AACZpB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,eAAO,IAAP;AACH,OAZL;AAaH,KAdD,MAeK;AACD,aAAO,IAAP;AACH;AACJ;AAEJ,CApCD;;AAsCA,eAAeH,YAAf","sourcesContent":["import { contract_address, contract_abi } from \"./contract_config\";\n\nconst Web3 = require('web3')\nconst web3 = new Web3(new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\")))\n\nconst sideChainContract = new web3.eth.Contract(contract_abi, contract_address)\n\nconst FilterEvents = async (sender) => {\n    console.log(sender)\n    if (sender === undefined || sender === null) {\n        alert(\"Check MetaMask Connectivity\")\n    }\n    else {\n        let key = sender + \"last_fetch_block\"\n        let START_BLOCK = localStorage.getItem(key)\n        START_BLOCK = parseInt(START_BLOCK, 10)\n\n        if (Number.isNaN(START_BLOCK)) {\n            START_BLOCK = 0\n        }\n        const END_BLOCK = await web3.eth.getBlockNumber()\n        localStorage.setItem(key, END_BLOCK)\n        console.log(START_BLOCK, END_BLOCK)\n        if (START_BLOCK < END_BLOCK) {\n            sideChainContract.getPastEvents(\"allEvents\",\n                {\n                    fromBlock: START_BLOCK,\n                    toBlock: END_BLOCK // You can also specify 'latest'\n                })\n                .then(events => {\n                    console.log(events)\n                    return events\n                })\n                .catch((err) => {\n                    console.log(\"error in event filter\")\n                    return null\n                });\n        }\n        else {\n            return null\n        }\n    }\n\n}\n\nexport default FilterEvents;"]},"metadata":{},"sourceType":"module"}