{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass ActiveChannelPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      details: \"\",\n      value: \"\",\n      operation: \"\",\n      sender: \"\",\n      channels: []\n    };\n\n    this.fetchOnChainDetails = async event => {\n      let value = await GetChannelDetails(this.state.channelId);\n      return value;\n    };\n\n    this.fetchOffChainDetails = async event => {\n      let key = this.state.sender + this.state.channelId + '_last_signed_state';\n      let value = localStorage.getItem(key);\n      return value;\n    };\n\n    this.handleChannelIdUpdate = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (this.state.value != parseInt(this.state.value, 10)) {\n        this.setState({\n          'errors': \"Enter Interger channel Id\"\n        });\n      } else if (this.state.operation === \"\") {\n        this.setState({\n          'errors': \"select radio button\"\n        });\n      } else {\n        let key = this.state.sender + 'active_channel_ids';\n\n        if (this.state.operation === \"add\") {\n          let flag = await IsMyChannel(this.state.value, this.state.sender);\n          let index = this.state.channels.indexOf(this.state.value);\n\n          if (flag && index < 0) {\n            this.state.channels.push(this.state.value);\n            localStorage.setItem(key, JSON.stringify(this.state.channels));\n            console.log(\"onAddChange Called \", this.state.value, flag, index);\n          }\n        } else {\n          let flag = await IsMyChannel(this.state.value, this.state.sender);\n          let index = this.state.channels.indexOf(this.state.value);\n\n          if (!flag && index > -1) {\n            this.state.channels.splice(index, 1);\n            localStorage.setItem(key, JSON.stringify(this.state.channels));\n            console.log(\"onDeleteChange Called \", this.state.value, flag, index);\n          }\n        }\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n        this.setState({\n          'errors': \"Enter Interger channel Id\"\n        });\n      } else {\n        let value = await GetChannelDetails(this.state.channelId);\n        this.setState({\n          'details': value\n        });\n      }\n    };\n\n    this.onValueChange = async event => this.setState({\n      'value': event.target.value\n    });\n\n    this.onOptionChange = async event => this.setState({\n      'channelId': event.target.value\n    });\n\n    this.onRadioChange = async event => this.setState({\n      'operation': event.target.value\n    });\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n        this.setState({\n          'channelId': this.props.match.params.channel_id\n        });\n        console.log(\"channel Id\", this.state.channelId);\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Add or remove channel (using channel id) from localStorage\"), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleChannelIdUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.value,\n      type: \"text\",\n      onChange: this.onValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.onRadioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"add\",\n      name: \"gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \" Add\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"delete\",\n      name: \"gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \" Delete\"), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Update Channel Id List\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channelId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ChannelList, {\n      storage_key: this.state.sender + 'active_channel_ids',\n      onChange: this.onOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Get Channel Details\")), this.state.errors === '' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Channel Details of channel id -> \", this.state.channelId), React.createElement(ManageDetailsView, {\n      details: this.state.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default ActiveChannelPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js"],"names":["React","GetChannelDetails","IsMyChannel","ManageDetailsView","ChannelList","FetchAccount","ActiveChannelPage","Component","state","errors","channelId","details","value","operation","sender","channels","fetchOnChainDetails","event","fetchOffChainDetails","key","localStorage","getItem","handleChannelIdUpdate","preventDefault","undefined","alert","setState","parseInt","flag","index","indexOf","push","setItem","JSON","stringify","console","log","splice","handleSubmit","Number","isNaN","onValueChange","target","onOptionChange","onRadioChange","componentDidMount","then","parse","props","match","params","channel_id","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass ActiveChannelPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        details: \"\",\n        value: \"\",\n        operation: \"\",\n        sender: \"\",\n        channels: [],\n\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n                this.setState({ 'channelId': this.props.match.params.channel_id })\n                console.log(\"channel Id\", this.state.channelId);\n\n            }\n\n        })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    fetchOnChainDetails = async (event) => {\n        let value = await GetChannelDetails(this.state.channelId)\n        return value;\n    }\n\n    fetchOffChainDetails = async (event) => {\n        let key = this.state.sender + this.state.channelId + '_last_signed_state'\n        let value = localStorage.getItem(key)\n        return value;\n    }\n\n    handleChannelIdUpdate = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': \"\" });\n        if (this.state.value != parseInt(this.state.value, 10)) {\n            this.setState({ 'errors': \"Enter Interger channel Id\" })\n        } else if (this.state.operation === \"\") {\n            this.setState({ 'errors': \"select radio button\" })\n        }\n        else {\n            let key = this.state.sender + 'active_channel_ids'\n            if (this.state.operation === \"add\") {\n                let flag = await IsMyChannel(this.state.value, this.state.sender)\n                let index = this.state.channels.indexOf(this.state.value);\n                if (flag && index < 0) {\n                    this.state.channels.push(this.state.value)\n                    localStorage.setItem(key, JSON.stringify(this.state.channels));\n                    console.log(\"onAddChange Called \", this.state.value, flag, index)\n                }\n\n            }\n            else {\n                let flag = await IsMyChannel(this.state.value, this.state.sender)\n                let index = this.state.channels.indexOf(this.state.value);\n                if (!flag && index > -1) {\n                    this.state.channels.splice(index, 1);\n                    localStorage.setItem(key, JSON.stringify(this.state.channels));\n                    console.log(\"onDeleteChange Called \", this.state.value, flag, index)\n                }\n\n            }\n        }\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': \"\" });\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'errors': \"Enter Interger channel Id\" })\n        }\n        else {\n            let value = await GetChannelDetails(this.state.channelId)\n            this.setState({ 'details': value })\n        }\n    }\n\n    onValueChange = async (event) => this.setState({ 'value': event.target.value });\n\n    onOptionChange = async (event) => this.setState({ 'channelId': event.target.value });\n\n    onRadioChange = async (event) => this.setState({ 'operation': event.target.value });\n\n    render() {\n        return (\n            <>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h3>Add or remove channel (using channel id) from localStorage</h3>\n                        <form id=\"form\" onSubmit={this.handleChannelIdUpdate}>\n                            <input value={this.state.value} type=\"text\" onChange={this.onValueChange} />\n                            <div onChange={this.onRadioChange}>\n                                <input type=\"radio\" value=\"add\" name=\"gender\" /> Add\n                                <input type=\"radio\" value=\"delete\" name=\"gender\" /> Delete\n                            </div>\n                            <button id=\"button\">Update Channel Id List</button>\n                        </form>\n                    </div>\n                    <div>\n                        <form id=\"form\" onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"channelId\">Channel Id</label>\n                                <div className=\"field\">\n                                    <ChannelList storage_key={this.state.sender + 'active_channel_ids'} onChange={this.onOptionChange} />\n                                </div>\n                                {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                            </div>\n                            <button id=\"button\">Get Channel Details</button>\n                        </form>\n                        {(this.state.errors === '') && (\n                            <div >\n                                <h2>Channel Details of channel id -> {this.state.channelId}</h2>\n                                <ManageDetailsView details={this.state.details} />\n                            </div>\n                        )}\n                    </div>\n                    {/* <EditFiles /> */}\n                </div>\n            </>\n        );\n    }\n};\n\nexport default ActiveChannelPage;\n"]},"metadata":{},"sourceType":"module"}