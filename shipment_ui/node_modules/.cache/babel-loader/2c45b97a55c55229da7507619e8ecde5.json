{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/UserList.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\n\nclass UserList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: false,\n      offChainState: false,\n      formFlag: false,\n      sender: \"\",\n      action: '',\n      aliceCash: '',\n      bobCash: ''\n    };\n\n    this.handleCreateChannel = async address => {\n      console.log(\"this.state.action\", address);\n      let path = \"/openchannel\";\n      this.props.history.push({\n        pathname: path,\n        state: {\n          address: this.state.address\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"User DataBase\"), React.createElement(Link, {\n      to: \"/adduser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"AddUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add New User\"))), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Category\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, Object.keys(this.props.users).map(user => {\n      return React.createElement(\"tr\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.handleCreateChannel(this.props.users[user][0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, user), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.props.users[user][0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.props.users[user][1]));\n    }))));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/UserList.js"],"names":["React","Link","toast","UserList","Component","state","errors","channelId","onChainState","offChainState","formFlag","sender","action","aliceCash","bobCash","handleCreateChannel","address","console","log","path","props","history","push","pathname","render","Object","keys","users","map","user","id"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\n\n\nclass UserList extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: false,\n        offChainState: false,\n        formFlag: false,\n        sender: \"\",\n        action: '',\n        aliceCash: '',\n        bobCash: '',\n    }\n\n    handleCreateChannel = async (address) => {\n        console.log(\"this.state.action\", address)\n        let path = \"/openchannel\"\n        this.props.history.push({\n            pathname: path,\n            state: {\n                address: this.state.address,\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>User DataBase</h2>\n                <Link to=\"/adduser\">\n                    <button id=\"AddUser\">\n                        <span>Add New User</span>\n                    </button>\n                </Link>\n                <table id='table' className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>&nbsp;</th>\n                            <th>Name</th>\n                            <th>Address</th>\n                            <th>Category</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.props.users).map(user => {\n                            return (\n                                <tr key={user.id}>\n                                    <td>\n                                        <button onClick={() => this.handleCreateChannel(this.props.users[user][0])}></button>\n                                        {/* <Link to=\"/openchannel\">\n                                        <button id=\"AddUser\" address={props.users[user][0]}>\n                                            <span>CreateChannel</span>\n                                        </button>\n                                    </Link> */}\n                                        {/* <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 10000000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            props.createNewChannel(rand, user.address).then(() => {\n                                                // Add Channel Id in List\n                                                // set default state as an last state\n                                                // set listening socket from UserList \n                                                toast.success(\"Channel Created with id \" + rand);\n                                            });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button> */}\n                                    </td>\n                                    <td>{user}</td>\n                                    <td>{this.props.users[user][0]}</td>\n                                    <td>{this.props.users[user][1]}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}