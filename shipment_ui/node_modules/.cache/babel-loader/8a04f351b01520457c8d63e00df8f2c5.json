{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/WaitingChannelPage.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass WaitingChannelPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: \"\",\n      offChainState: \"\",\n      operation: \"\",\n      sender: \"\",\n      channels: []\n    };\n\n    this.fetchOnChainDetails = async event => {\n      let value = await GetChannelDetails(this.state.channelId);\n      return value;\n    };\n\n    this.fetchOffChainDetails = async event => {\n      let key = this.state.sender + this.state.channelId + '_last_signed_state';\n      let value = localStorage.getItem(key);\n      return value;\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n        this.setState({\n          'channelId': this.props.match.params.channel_id\n        });\n        console.log(\"channel Id\", this.state.channelId);\n        this.fetchOnChainDetails().then(onChainState => {\n          this.setState({\n            'onChainState': onChainState\n          });\n        }).catch(err => {\n          alert(\"on chain state issue\");\n          console.log(err);\n        });\n        this.fetchOffChainDetails().then(offChainState => {\n          this.setState({\n            'offChainState': offChainState\n          });\n        }).catch(err => {\n          alert(\"off chain state issue\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"On Chain State\"), React.createElement(ManageDetailsView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Off Chain State\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", this.state.offChainState))));\n  }\n\n}\n\n;\nexport default WaitingChannelPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/WaitingChannelPage.js"],"names":["React","GetChannelDetails","IsMyChannel","ManageDetailsView","ChannelList","FetchAccount","WaitingChannelPage","Component","state","errors","channelId","onChainState","offChainState","operation","sender","channels","fetchOnChainDetails","event","value","fetchOffChainDetails","key","localStorage","getItem","componentDidMount","then","setState","console","log","JSON","parse","props","match","params","channel_id","catch","err","alert","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n\nclass WaitingChannelPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: \"\",\n        offChainState: \"\",\n        operation: \"\",\n        sender: \"\",\n        channels: [],\n\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n                this.setState({ 'channelId': this.props.match.params.channel_id })\n                console.log(\"channel Id\", this.state.channelId);\n                this.fetchOnChainDetails().then(onChainState => {\n                    this.setState({ 'onChainState': onChainState })\n                }).catch(err => {\n                    alert(\"on chain state issue\")\n                    console.log(err)\n                })\n                this.fetchOffChainDetails().then(offChainState => {\n                    this.setState({ 'offChainState': offChainState })\n                }).catch(err => {\n                    alert(\"off chain state issue\")\n                    console.log(err)\n                })\n            }\n\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    fetchOnChainDetails = async (event) => {\n        let value = await GetChannelDetails(this.state.channelId)\n        return value;\n    }\n\n    fetchOffChainDetails = async (event) => {\n        let key = this.state.sender + this.state.channelId + '_last_signed_state'\n        let value = localStorage.getItem(key)\n        return value;\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        <p>On Chain State</p>\n                        <ManageDetailsView details={this.state.onChainState} />\n                    </div>\n                    <div>\n                        <p>Off Chain State</p>\n                        <p> {this.state.offChainState}</p>\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default WaitingChannelPage;\n"]},"metadata":{},"sourceType":"module"}