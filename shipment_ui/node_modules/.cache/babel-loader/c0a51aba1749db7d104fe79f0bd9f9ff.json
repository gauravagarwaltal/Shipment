{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/contract/CreateInstance.js\";\nimport React from 'react';\nimport { contract_address, contract_abi } from \"./contract_config\"; // import { Web3 } from \"web3\";\n// const Tx = require('ethereumjs-tx')\n\nconst Web3 = require('web3');\n\nconst web3 = new Web3(new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\")));\nconst sideChainContract = new web3.eth.Contract(contract_abi, contract_address);\nlet details_div = \"\";\n\nconst FilterEvents = async props => {\n  if (props.sender === undefined || props.sender === null) {\n    alert(\"Check MetaMask Connectivity\");\n  } else {\n    let key = props.sender + \"last_fetch_block\";\n    let START_BLOCK = localStorage.getItem(key);\n    START_BLOCK = parseInt(START_BLOCK, 10);\n\n    if (Number.isNaN(START_BLOCK)) {\n      START_BLOCK = 0;\n    }\n\n    const END_BLOCK = await web3.eth.getBlockNumber();\n    localStorage.setItem(key, END_BLOCK);\n    console.log(START_BLOCK, END_BLOCK);\n\n    if (START_BLOCK < END_BLOCK) {\n      sideChainContract.getPastEvents(\"allEvents\", {\n        fromBlock: START_BLOCK,\n        toBlock: END_BLOCK // You can also specify 'latest'\n\n      }).then(events => console.log(events)).catch(err => console.error(err));\n    } else {\n      return null;\n    }\n  }\n};\n\nconst XYZ = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: FilterEvents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" ShowDetails\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, details_div)));\n};\n\nexport default XYZ;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/contract/CreateInstance.js"],"names":["React","contract_address","contract_abi","Web3","require","web3","providers","HttpProvider","sideChainContract","eth","Contract","details_div","FilterEvents","props","sender","undefined","alert","key","START_BLOCK","localStorage","getItem","parseInt","Number","isNaN","END_BLOCK","getBlockNumber","setItem","console","log","getPastEvents","fromBlock","toBlock","then","events","catch","err","error","XYZ"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,mBAA/C,C,CACA;AAGA;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,CAAS,IAAIA,IAAJ,CAAS,IAAIA,IAAI,CAACG,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAT,CAAb;AAEA,MAAMC,iBAAiB,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBR,YAAtB,EAAoCD,gBAApC,CAA1B;AACA,IAAIU,WAAW,GAAG,EAAlB;;AAIA,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAElC,MAAIA,KAAK,CAACC,MAAN,KAAiBC,SAAjB,IAA8BF,KAAK,CAACC,MAAN,KAAiB,IAAnD,EAAyD;AACrDE,IAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,GAFD,MAGK;AACD,QAAIC,GAAG,GAAGJ,KAAK,CAACC,MAAN,GAAe,kBAAzB;AACA,QAAII,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAlB;AACAC,IAAAA,WAAW,GAAGG,QAAQ,CAACH,WAAD,EAAc,EAAd,CAAtB;;AAEA,QAAII,MAAM,CAACC,KAAP,CAAaL,WAAb,CAAJ,EAA+B;AAC3BA,MAAAA,WAAW,GAAG,CAAd;AACH;;AACD,UAAMM,SAAS,GAAG,MAAMnB,IAAI,CAACI,GAAL,CAASgB,cAAT,EAAxB;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqBT,GAArB,EAA0BO,SAA1B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAyBM,SAAzB;;AACA,QAAIN,WAAW,GAAGM,SAAlB,EAA6B;AACzBhB,MAAAA,iBAAiB,CAACqB,aAAlB,CAAgC,WAAhC,EACI;AACIC,QAAAA,SAAS,EAAEZ,WADf;AAEIa,QAAAA,OAAO,EAAEP,SAFb,CAEuB;;AAFvB,OADJ,EAKKQ,IALL,CAKUC,MAAM,IAAIN,OAAO,CAACC,GAAR,CAAYK,MAAZ,CALpB,EAMKC,KANL,CAMYC,GAAD,IAASR,OAAO,CAACS,KAAR,CAAcD,GAAd,CANpB;AAOH,KARD,MASK;AACD,aAAO,IAAP;AACH;AACJ;AAEJ,CA9BD;;AA+BA,MAAME,GAAG,GAAG,MAAM;AACd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEzB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,WADL,CAFJ,CADJ,CADJ;AAWH,CAZD;;AAcA,eAAe0B,GAAf","sourcesContent":["import React from 'react';\nimport { contract_address, contract_abi } from \"./contract_config\";\n// import { Web3 } from \"web3\";\n\n\n// const Tx = require('ethereumjs-tx')\nconst Web3 = require('web3')\nconst web3 = new Web3(new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\")))\n\nconst sideChainContract = new web3.eth.Contract(contract_abi, contract_address)\nlet details_div = \"\"\n\n\n\nconst FilterEvents = async (props) => {\n\n    if (props.sender === undefined || props.sender === null) {\n        alert(\"Check MetaMask Connectivity\")\n    }\n    else {\n        let key = props.sender + \"last_fetch_block\"\n        let START_BLOCK = localStorage.getItem(key)\n        START_BLOCK = parseInt(START_BLOCK, 10)\n\n        if (Number.isNaN(START_BLOCK)) {\n            START_BLOCK = 0\n        }\n        const END_BLOCK = await web3.eth.getBlockNumber()\n        localStorage.setItem(key, END_BLOCK)\n        console.log(START_BLOCK, END_BLOCK)\n        if (START_BLOCK < END_BLOCK) {\n            sideChainContract.getPastEvents(\"allEvents\",\n                {\n                    fromBlock: START_BLOCK,\n                    toBlock: END_BLOCK // You can also specify 'latest'\n                })\n                .then(events => console.log(events))\n                .catch((err) => console.error(err));\n        }\n        else {\n            return null\n        }\n    }\n\n}\nconst XYZ = () => {\n    return (\n        <div>\n            <div className=\"App-content\">\n                <button onClick={FilterEvents}> ShowDetails</button>\n                <div>\n                    {details_div}\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default XYZ;"]},"metadata":{},"sourceType":"module"}