{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingRequests.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n\nimport './UserList.css';\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\n\nasync function onDeleteClick(index) {\n  const sender = await FetchAccount();\n  let response = await DeleteRequest(sender, STATE_TYPE.Request, index);\n  console.log(response);\n}\n\nasync function onShowLastState(request) {\n  alert(request); // let state = JSON.parse(request)\n  // let channel_id = Number.parseInt(state[0])\n  // const sender = await FetchAccount()\n  // let key = sender + channel_id + \"laststate\"\n  // alert(JSON.parse(localStorage.getItem(key)) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(request, index) {\n  let state = JSON.parse(request);\n  let channel_id = Number.parseInt(state[0]);\n  let count = Number.parseInt(state[1]);\n  let Alice_Cash = Number.parseInt(state[2]);\n  let Bob_Cash = Number.parseInt(state[3]);\n  let signature = state[4];\n  console.log(channel_id, count, Alice_Cash, Bob_Cash, signature);\n  const sender = await FetchAccount();\n  const TheOtherParty = await FetchOtherParty(channel_id, sender);\n  let checkSig = await IsValidSignature(TheOtherParty, channel_id, count, Alice_Cash, Bob_Cash, signature);\n\n  if (checkSig === true) {\n    signature = await GenerateSignatures(channel_id, count, Alice_Cash, Bob_Cash);\n    let key = sender + channel_id + \"laststate\";\n    localStorage.setItem(key, JSON.stringify(request));\n    let lastState = [channel_id, count, Alice_Cash, Bob_Cash, signature];\n    let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, JSON.stringify(lastState));\n    console.log(\"hello \", response);\n    alert(\"valid signature\");\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nclass PendingRequests extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingStateRequests: null,\n      sender: null // pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        FetchRequests(this.state.sender, STATE_TYPE.Request).then(response => {\n          console.log(response);\n          let key = this.state.sender + 'pendingRequests';\n          localStorage.setItem(key, JSON.stringify(response));\n          this.setState({\n            pendingStateRequests: response\n          });\n        }).catch(err => {\n          alert(\"error occured while fetching pending requests\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"New State Requests\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.pendingStateRequests[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[0])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[1])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[2])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[3])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.pendingStateRequests[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    })))));\n  }\n\n}\n\n;\nexport default PendingRequests;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingRequests.js"],"names":["React","FetchRequests","DeleteRequest","SetRequest","FetchAccount","FetchOtherParty","IsValidSignature","STATE_TYPE","GenerateSignatures","onDeleteClick","index","sender","response","Request","console","log","onShowLastState","request","alert","onAcceptClick","state","JSON","parse","channel_id","Number","parseInt","count","Alice_Cash","Bob_Cash","signature","TheOtherParty","checkSig","key","localStorage","setItem","stringify","lastState","Response","PendingRequests","Component","pendingStateRequests","componentDidMount","then","setState","catch","err","render","Object","keys","map","split"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\n\n\nasync function onDeleteClick(index) {\n    const sender = await FetchAccount()\n    let response = await DeleteRequest(sender, STATE_TYPE.Request, index)\n    console.log(response)\n}\n\nasync function onShowLastState(request) {\n    alert(request)\n    // let state = JSON.parse(request)\n    // let channel_id = Number.parseInt(state[0])\n    // const sender = await FetchAccount()\n    // let key = sender + channel_id + \"laststate\"\n    // alert(JSON.parse(localStorage.getItem(key)) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(request, index) {\n    let state = JSON.parse(request)\n    let channel_id = Number.parseInt(state[0])\n    let count = Number.parseInt(state[1])\n    let Alice_Cash = Number.parseInt(state[2])\n    let Bob_Cash = Number.parseInt(state[3])\n    let signature = state[4]\n\n    console.log(channel_id, count, Alice_Cash, Bob_Cash, signature)\n\n    const sender = await FetchAccount()\n    const TheOtherParty = await FetchOtherParty(channel_id, sender)\n    let checkSig = await IsValidSignature(TheOtherParty, channel_id, count, Alice_Cash, Bob_Cash, signature)\n\n    if (checkSig === true) {\n        signature = await GenerateSignatures(channel_id, count, Alice_Cash, Bob_Cash)\n        let key = sender + channel_id + \"laststate\"\n        localStorage.setItem(key, JSON.stringify(request));\n        let lastState = [\n            channel_id, count, Alice_Cash, Bob_Cash, signature\n        ]\n        let response = await SetRequest(TheOtherParty, STATE_TYPE.Response, JSON.stringify(lastState))\n        console.log(\"hello \", response)\n        alert(\"valid signature\")\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\n\nclass PendingRequests extends React.Component {\n    state = {\n        pendingStateRequests: null,\n        sender: null,\n        // pendingStates: JSON.parse(localStorage.getItem(\"pendingState\") || \"[]\"),\n    };\n\n    componentDidMount() {\n        FetchAccount()\n            .then(sender => {\n                if (sender) {\n                    this.setState({ 'sender': sender })\n                    FetchRequests(this.state.sender, STATE_TYPE.Request)\n                        .then(response => {\n                            console.log(response)\n                            let key = this.state.sender + 'pendingRequests'\n                            localStorage.setItem(key, JSON.stringify(response));\n                            this.setState({ pendingStateRequests: response })\n                        })\n                        .catch(err => {\n                            alert(\"error occured while fetching pending requests\")\n                            console.log(err)\n                        })\n\n                }\n\n            })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h2>New State Requests</h2>\n                <div>\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>Channel Id</th>\n                                <th>Count</th>\n                                <th>Alice Cash</th>\n                                <th>Bob Cash</th>\n                                <th>Last Signed State</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(request)} >\n                                                    Delete Request\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onAcceptClick(this.state.pendingStateRequests[request], request)} >\n                                                    Accept Request\n                                                </button>\n                                            </td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[0]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[1]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[2]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[3]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.pendingStateRequests[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n};\nexport default PendingRequests;\n"]},"metadata":{},"sourceType":"module"}