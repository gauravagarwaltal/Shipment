{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js\";\nimport React, { useState } from \"react\"; // import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\n\nconst CreateTransaction = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        details = _useState6[0],\n        setDetails = _useState6[1];\n\n  const _React$useState = React.useState(localStorage.getItem(props.channelId + 'lastState') || {\n    channelId: \"\",\n    count: \"\",\n    AliceCash: \"\",\n    BobCash: \"\",\n    Signature: \"\"\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        lastState = _React$useState2[0],\n        setLastState = _React$useState2[1]; // const [course, setCourse] = useState({\n  //     channelId: \"\",\n  //     count: \"\",\n  //     AliceCash: \"\",\n  //     BobCash: \"\",\n  //     Signature: \"\"\n  // });\n\n\n  React.useEffect(() => {\n    localStorage.setItem(props.channelId + 'lastState', lastState);\n  }, [props.channelId, lastState]);\n\n  const onChange = event => setLastState(event.target.value);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, lastState)), React.createElement(\"form\", {\n    onSubmit: this.handleConfirmChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"channelId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Channel Id\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"channelId\",\n    type: \"text\",\n    onChange: event => this.setState({\n      channelId: event.target.value\n    }),\n    name: \"channelId\",\n    className: \"form-control\",\n    value: this.state.channelId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), this.state.channelIdError && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, this.state.channelIdError)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"amount\",\n    type: \"text\",\n    onChange: event => this.setState({\n      amount: event.target.value\n    }),\n    name: \"amount\",\n    className: \"form-control\",\n    value: this.state.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), this.state.amountError && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, this.state.amountError)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Deposit Amount\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n};\n\nexport default CreateTransaction;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js"],"names":["React","useState","GetChannelDetails","ManageDetailsView","CreateTransaction","props","errors","setErrors","channelId","setChannelId","details","setDetails","localStorage","getItem","count","AliceCash","BobCash","Signature","lastState","setLastState","useEffect","setItem","onChange","event","target","value","handleConfirmChannel","setState","state","channelIdError","amount","amountError"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\n\nconst CreateTransaction = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [lastState, setLastState] = React.useState(localStorage.getItem(props.channelId + 'lastState') || {\n        channelId: \"\",\n        count: \"\",\n        AliceCash: \"\",\n        BobCash: \"\",\n        Signature: \"\"\n    });\n    // const [course, setCourse] = useState({\n    //     channelId: \"\",\n    //     count: \"\",\n    //     AliceCash: \"\",\n    //     BobCash: \"\",\n    //     Signature: \"\"\n    // });\n    React.useEffect(() => {\n        localStorage.setItem(props.channelId + 'lastState', lastState);\n    }, [props.channelId, lastState]);\n    const onChange = event => setLastState(event.target.value);\n\n\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <p>{lastState}</p>\n                </div>\n                <form onSubmit={this.handleConfirmChannel}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"channelId\"\n                                type=\"text\"\n                                onChange={event => this.setState({ channelId: event.target.value })}\n                                name=\"channelId\"\n                                className=\"form-control\"\n                                value={this.state.channelId}\n                            />\n                        </div>\n                        {this.state.channelIdError && <div className=\"alert alert-danger\">{this.state.channelIdError}</div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"amount\"\n                                type=\"text\"\n                                onChange={event => this.setState({ amount: event.target.value })}\n                                name=\"amount\"\n                                className=\"form-control\"\n                                value={this.state.amount}\n                            />\n                        </div>\n                        {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>}\n                    </div>\n                    <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                </form>\n\n\n\n                {/* <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"channelId\">Channel Id</label>\n                    <input id=\"channelId\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"channel id(integer value)\" value={channelId}\n                        onChange={event => setChannelId(event.target.value)} required />\n                    <button>Get Channel Details</button>\n                </form>\n                {errors && (\n                    <div className=\"alert alert-danger\">{errors}</div>\n                )}\n                {(errors === '') && (\n                    <div className=\"alert alert-danger\">\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        <ManageDetailsView details={details} />\n                    </div>\n                )} */}\n            </div>\n        </>\n    );\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}