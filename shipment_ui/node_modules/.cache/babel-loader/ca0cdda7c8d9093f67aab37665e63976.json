{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js\";\nimport React from \"react\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport FilterEvents from \"../contract/CreateInstance\";\n\nclass FetchContractTxn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sender: \"\",\n      fetchedEvent: null\n    };\n\n    this.fetchEventFilter = async event => {\n      event.preventDefault();\n      let events = await FilterEvents(this.state.sender);\n      console.log(events);\n      this.setState({\n        'fetchedEvent': []\n      });\n      events.forEach(element => {\n        console.log(element.event);\n        console.log(element.returnValues);\n        this.state.fetchedEvent.push(element);\n        /*\n        add handler for each event and add respected click handler with possible cases\n            event EventChannelInitializing(address libSig);\n            event EventInitializing(address addressAlice, address addressBob, uint channel_id);\n            event EventInitialized(uint cashAlice, uint cashBob, uint channel_id);\n            event EventRefunded(uint channel_id);\n            event EventClosing(uint channel_id);\n            event EventClosed(uint channel_id);\n            event EventNotClosed(uint channel_id);\n        */\n      });\n    };\n\n    this.handlerEvents = async event => {\n      event.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender !== null || sender !== undefined) {\n        this.setState({\n          'sender': sender\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Event Filter Outcome\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.fetchEventFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Apply Event Filter \")), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"State Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.fetchedEvent && Object.keys(this.state.fetchedEvent).map(request => {\n      console.log(request);\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => this.handlerEvents(this.state.fetchedEvent[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.fetchedEvent[request])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    }))), console.log(\"hello\", this.state.fetchedEvent))));\n  }\n\n}\n\n;\nexport default FetchContractTxn;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js"],"names":["React","FetchAccount","FilterEvents","FetchContractTxn","Component","state","sender","fetchedEvent","fetchEventFilter","event","preventDefault","events","console","log","setState","forEach","element","returnValues","push","handlerEvents","componentDidMount","then","undefined","catch","err","alert","render","Object","keys","map","request"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport FilterEvents from \"../contract/CreateInstance\";\n\n\nclass FetchContractTxn extends React.Component {\n    state = {\n        sender: \"\",\n        fetchedEvent: null,\n    }\n\n    componentDidMount() {\n\n        FetchAccount().then(sender => {\n            if (sender !== null || sender !== undefined) {\n                this.setState({ 'sender': sender })\n            }\n\n        })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    fetchEventFilter = async (event) => {\n        event.preventDefault();\n        let events = await FilterEvents(this.state.sender)\n        console.log(events)\n        this.setState({ 'fetchedEvent': [] })\n        events.forEach(element => {\n            console.log(element.event)\n            console.log(element.returnValues)\n            this.state.fetchedEvent.push(element)\n            /*\n            add handler for each event and add respected click handler with possible cases\n                event EventChannelInitializing(address libSig);\n                event EventInitializing(address addressAlice, address addressBob, uint channel_id);\n                event EventInitialized(uint cashAlice, uint cashBob, uint channel_id);\n                event EventRefunded(uint channel_id);\n                event EventClosing(uint channel_id);\n                event EventClosed(uint channel_id);\n                event EventNotClosed(uint channel_id);\n            */\n        });\n    }\n\n    handlerEvents = async (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Event Filter Outcome</h2>\n                <div>\n                    <div>\n                        <p><button onClick={this.fetchEventFilter}>Apply Event Filter </button></p>\n                        <table id=\"table\" className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Accept State</th>\n                                    <th>State Details</th>\n                                    <th>Last Signed State</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.fetchedEvent && Object.keys(this.state.fetchedEvent).map(request => {\n                                        console.log(request)\n                                        return (\n\n                                            <tr key={request}>\n                                                <td>\n                                                    <button\n                                                        className=\"btn btn-outline-danger\"\n                                                        onClick={() => this.handlerEvents(this.state.fetchedEvent[request], request)}\n                                                    >\n                                                        Accept Request\n                                            </button>\n                                                </td>\n                                                <td><span>{this.state.fetchedEvent[request]}</span></td>\n                                                <td>\n                                                    <button className=\"btn btn-outline-danger\"  >\n                                                        Show Last Signed State\n                                                </button>\n                                                </td>\n                                            </tr>\n                                        )\n\n                                    }\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                        {console.log(\"hello\", this.state.fetchedEvent)}\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default FetchContractTxn;\n"]},"metadata":{},"sourceType":"module"}