{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ConfirmChannel.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { GetChannelDetails, ChannelConfirm } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\n\nclass ConfirmChannel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: false,\n      formFlag: false,\n      sender: \"\",\n      cash: ''\n    };\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (Number.isNaN(parseInt(this.state.cash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        console.log(this.state.cash, this.state.channelId);\n        ChannelConfirm(this.state.channelId, this.state.cash);\n      }\n\n      this.setState({\n        'cash': \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        if (this.props.location.state.action === 'Confirm') {\n          GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n            this.setState({\n              'sender': sender,\n              'channelId': this.props.location.state.channelId,\n              'onChainState': onChainState,\n              'formFlag': true\n            });\n          }).catch(err => {\n            alert(\"on chain state issue\");\n            console.log(err);\n          });\n        } else {\n          this.props.history.push({\n            pathname: '/NaN'\n          });\n        }\n      }\n    }).catch(err => {\n      this.props.history.push({\n        pathname: '/metamaskIssue'\n      });\n      toast.error(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.onChainState && React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.formFlag && React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"cash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Input Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"cash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        cash: event.target.value\n      }),\n      name: \"cash\",\n      className: \"form-control\",\n      value: this.state.cash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Confirm Channel\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default ConfirmChannel;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ConfirmChannel.js"],"names":["React","toast","GetChannelDetails","ChannelConfirm","FetchAccount","OnChainStateView","ConfirmChannel","Component","state","errors","channelId","onChainState","formFlag","sender","cash","handleConfirmChannel","event","preventDefault","setState","Number","isNaN","parseInt","console","log","componentDidMount","then","props","location","action","catch","err","alert","history","push","pathname","error","render","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { GetChannelDetails, ChannelConfirm } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\n\nclass ConfirmChannel extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: false,\n        formFlag: false,\n        sender: \"\",\n        cash: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n\n                if (this.props.location.state.action === 'Confirm') {\n                    GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n                        this.setState({\n                            'sender': sender,\n                            'channelId': this.props.location.state.channelId,\n                            'onChainState': onChainState,\n                            'formFlag': true,\n                        })\n                    }).catch(err => {\n                        alert(\"on chain state issue\")\n                        console.log(err)\n                    })\n                }\n                else {\n                    this.props.history.push({\n                        pathname: '/NaN',\n                    })\n                }\n            }\n        }).catch(err => {\n            this.props.history.push({\n                pathname: '/metamaskIssue',\n            })\n            toast.error(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (Number.isNaN(parseInt(this.state.cash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            console.log(this.state.cash, this.state.channelId)\n            ChannelConfirm(this.state.channelId, this.state.cash)\n        }\n        this.setState({ 'cash': \"\" })\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        {this.state.onChainState && <OnChainStateView details={this.state.onChainState} />}\n                    </div>\n                    <div>\n                        {this.state.formFlag &&\n                            <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"cash\">Input Cash</label>\n                                    <div className=\"field\">\n                                        <input\n                                            id=\"cash\"\n                                            type=\"text\"\n                                            onChange={event => this.setState({ cash: event.target.value })}\n                                            name=\"cash\"\n                                            className=\"form-control\"\n                                            value={this.state.cash}\n                                        />\n                                    </div>\n                                    {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                                </div>\n                                <input type=\"submit\" value=\"Confirm Channel\" className=\"btn btn-primary\" />\n                            </form>}\n                    </div>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default ConfirmChannel;\n"]},"metadata":{},"sourceType":"module"}