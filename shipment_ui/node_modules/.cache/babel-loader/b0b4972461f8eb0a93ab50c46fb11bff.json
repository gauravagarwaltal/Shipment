{"ast":null,"code":"import React from\"react\";// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport{toast}from\"react-toastify\";import'./UserList.css';function UserList(props){return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"User DataBase\"),React.createElement(\"table\",{id:\"table\",className:\"table\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"\\xA0\"),React.createElement(\"th\",null,\"Name\"),React.createElement(\"th\",null,\"Address\"),React.createElement(\"th\",null,\"Category\"),React.createElement(\"th\",null,\"Listening On\"))),React.createElement(\"tbody\",null,props.users.map(function(user){return React.createElement(\"tr\",{key:user.id},React.createElement(\"td\",null,React.createElement(\"button\",{className:\"btn btn-outline-danger\",onClick:function onClick(){var min=1000;var max=100000000;var rand=Math.floor(min+Math.random()*(max-min));console.log(rand);props.createNewChannel(rand,user.address).then(function(){// Add Channel Id in List\n// set default state as an last state\n// set listening socket from UserList \ntoast.success(\"Channel Created with id \"+rand);});}},\"CreateChannel\")),React.createElement(\"td\",null,user.name),React.createElement(\"td\",null,user.address),React.createElement(\"td\",null,user.category),React.createElement(\"td\",null,user.listen));}))));}// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\nexport default UserList;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/UserList.js"],"names":["React","toast","UserList","props","users","map","user","id","min","max","rand","Math","floor","random","console","log","createNewChannel","address","then","success","name","category","listen"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA;AACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAO,gBAAP,CACA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB,MACI,gCACI,8CADJ,CAEI,6BAAO,EAAE,CAAC,OAAV,CAAkB,SAAS,CAAC,OAA5B,EACI,iCACI,8BACI,qCADJ,CAEI,qCAFJ,CAGI,wCAHJ,CAII,yCAJJ,CAKI,6CALJ,CADJ,CADJ,CAUI,iCACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CACrB,MACI,2BAAI,GAAG,CAAEA,IAAI,CAACC,EAAd,EACI,8BACI,8BACI,SAAS,CAAC,wBADd,CAEI,OAAO,CAAE,kBAAM,CACX,GAAMC,CAAAA,GAAG,CAAG,IAAZ,CACA,GAAMC,CAAAA,GAAG,CAAG,SAAZ,CACA,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAAGG,IAAI,CAACE,MAAL,IAAiBJ,GAAG,CAAGD,GAAvB,CAAjB,CAAb,CACAM,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACAP,KAAK,CAACa,gBAAN,CAAuBN,IAAvB,CAA6BJ,IAAI,CAACW,OAAlC,EAA2CC,IAA3C,CAAgD,UAAM,CAClD;AACA;AACA;AACAjB,KAAK,CAACkB,OAAN,CAAc,2BAA6BT,IAA3C,EACH,CALD,EAMH,CAbL,kBADJ,CADJ,CAoBI,8BAAKJ,IAAI,CAACc,IAAV,CApBJ,CAqBI,8BAAKd,IAAI,CAACW,OAAV,CArBJ,CAsBI,8BAAKX,IAAI,CAACe,QAAV,CAtBJ,CAuBI,8BAAKf,IAAI,CAACgB,MAAV,CAvBJ,CADJ,CA2BH,CA5BA,CADL,CAVJ,CAFJ,CADJ,CA+CH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAepB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nfunction UserList(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map(user => {\n                        return (\n                            <tr key={user.id}>\n                                <td>\n                                    <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 1000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            props.createNewChannel(rand, user.address).then(() => {\n                                                // Add Channel Id in List\n                                                // set default state as an last state\n                                                // set listening socket from UserList \n                                                toast.success(\"Channel Created with id \" + rand);\n                                            });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button>\n                                </td>\n                                <td>{user.name}</td>\n                                <td>{user.address}</td>\n                                <td>{user.category}</td>\n                                <td>{user.listen}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}