{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js\";\nimport React from \"react\";\nimport { IsValidSignature } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css'; // import { toast } from \"react-toastify\";\n\nconst axios = require('axios');\n\nconst RedisHandlerURL = 'http://localhost:5002';\n\nfunction ShowState(props) {\n  return React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"value\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"Channel Id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Channel Id\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.state[0]))), React.createElement(\"tr\", {\n    key: \"Transaction Count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Transaction Count\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.state[1]))), React.createElement(\"tr\", {\n    key: \"Alice Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Alice Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.state[2]))), React.createElement(\"tr\", {\n    key: \"Bob Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Bob Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.state[3])))));\n}\n\nclass RedisFunctionalTesting extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: '',\n      channelId: '',\n      reqType: '',\n      requestData: ''\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.reqType, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c';\n        let sender = await FetchAccount();\n        var bodyFormData = new FormData();\n        bodyFormData.set('channel_id', this.state.channelId);\n        bodyFormData.set('address', sender);\n        bodyFormData.set('request_type', this.state.reqType);\n        bodyFormData.set('request_data', this.state.requestData);\n        const resp = await axios({\n          method: 'post',\n          url: RedisHandlerURL + '/publish',\n          // url: RedisHandlerURL + '/subscribe',\n          // url: RedisHandlerURL + '/unsubscribe',\n          data: bodyFormData\n        });\n\n        if (resp.status === 200) {\n          console.log(resp.data);\n        } // console.log(await GenerateSignatures(this.state.lastState[1], this.state.reqType, this.state.requestData))\n        // ChannelConfirm(this.state.channelId, this.state.amount)\n\n      } // this.setState({ 'reqType': \"\" })\n      // this.setState({ 'requestData': \"\" })\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"RedisFunctionalTesting\")), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channelId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channelId\",\n      onChange: event => this.setState({\n        channelId: event.target.value\n      }),\n      type: \"text\",\n      name: \"channelId\",\n      className: \"form-control\",\n      value: this.state.channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"reqType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Request Type\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"reqType\",\n      type: \"text\",\n      onChange: event => this.setState({\n        reqType: event.target.value\n      }),\n      name: \"reqType\",\n      className: \"form-control\",\n      value: this.state.reqType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"requestData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Request Data\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"requestData\",\n      type: \"text\",\n      onChange: event => this.setState({\n        requestData: event.target.value\n      }),\n      name: \"requestData\",\n      className: \"form-control\",\n      value: this.state.requestData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Transaction\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default RedisFunctionalTesting;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js"],"names":["React","IsValidSignature","FetchAccount","axios","require","RedisHandlerURL","ShowState","props","state","RedisFunctionalTesting","Component","errors","channelId","reqType","requestData","onChange","event","setState","target","value","handleConfirmChannel","preventDefault","Number","isNaN","parseInt","sig","sender","bodyFormData","FormData","set","resp","method","url","data","status","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IsValidSignature } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../components/MetaMaskFetch\";\nimport '../components/Form.css'\n// import { toast } from \"react-toastify\";\nconst axios = require('axios');\nconst RedisHandlerURL = 'http://localhost:5002';\nfunction ShowState(props) {\n    return (\n        <table id=\"table\" className=\"table\">\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr key=\"Channel Id\">\n                    <td><span>Channel Id</span></td>\n                    <td><span>{props.state[0]}</span></td>\n                </tr>\n                <tr key=\"Transaction Count\">\n                    <td ><span>Transaction Count</span></td>\n                    <td><span>{props.state[1]}</span></td>\n                </tr>\n                <tr key=\"Alice Cash\">\n                    <td ><span>Alice Cash</span></td>\n                    <td><span>{props.state[2]}</span></td>\n                </tr>\n                <tr key=\"Bob Cash\">\n                    <td ><span>Bob Cash</span></td>\n                    <td><span>{props.state[3]}</span></td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nclass RedisFunctionalTesting extends React.Component {\n    state = {\n        errors: '',\n        channelId: '',\n        reqType: '',\n        requestData: '',\n\n    }\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.reqType, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n            var bodyFormData = new FormData();\n            bodyFormData.set('channel_id', this.state.channelId);\n            bodyFormData.set('address', sender);\n            bodyFormData.set('request_type', this.state.reqType);\n            bodyFormData.set('request_data', this.state.requestData);\n            const resp = await axios({\n                method: 'post',\n                url: RedisHandlerURL + '/publish',\n                // url: RedisHandlerURL + '/subscribe',\n                // url: RedisHandlerURL + '/unsubscribe',\n                data: bodyFormData\n            })\n            if (resp.status === 200) {\n                console.log(resp.data)\n            }\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.reqType, this.state.requestData))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        // this.setState({ 'reqType': \"\" })\n        // this.setState({ 'requestData': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h1>RedisFunctionalTesting</h1>\n                        {/* <ShowState state={this.state.lastState} /> */}\n                    </div>\n                    <div className=\"mt-2\" ></div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"channelId\">Channel Id</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"channelId\"\n                                    onChange={event => this.setState({ channelId: event.target.value })}\n                                    type=\"text\"\n                                    name=\"channelId\"\n                                    className=\"form-control\"\n                                    value={this.state.channelId}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"reqType\">Request Type</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"reqType\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ reqType: event.target.value })}\n                                    name=\"reqType\"\n                                    className=\"form-control\"\n                                    value={this.state.reqType}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"requestData\">Request Data</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"requestData\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ requestData: event.target.value })}\n                                    name=\"requestData\"\n                                    className=\"form-control\"\n                                    value={this.state.requestData}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default RedisFunctionalTesting;\n"]},"metadata":{},"sourceType":"module"}