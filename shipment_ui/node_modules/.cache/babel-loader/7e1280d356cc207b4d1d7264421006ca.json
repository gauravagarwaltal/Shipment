{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/UserList.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\n\nfunction HandleCreateChannel(address) {\n  console.log(\"this.state.action\", address);\n  let path = \"/\" + this.state.action;\n  this.props.history.push({\n    pathname: path,\n    state: {\n      channelId: this.state.channelId,\n      action: this.state.action\n    }\n  });\n}\n\nfunction UserList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"User DataBase\"), React.createElement(Link, {\n    to: \"/adduser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"AddUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Add New User\"))), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Category\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, Object.keys(props.users).map(user => {\n    return React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: HandleCreateChannel(props.users[user][0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, user), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, props.users[user][0]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, props.users[user][1]));\n  }))));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nexport default UserList;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/UserList.js"],"names":["React","Link","toast","HandleCreateChannel","address","console","log","path","state","action","props","history","push","pathname","channelId","UserList","Object","keys","users","map","user","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,gBAAP;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AAElCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,OAAjC;AAGA,MAAIG,IAAI,GAAG,MAAM,KAAKC,KAAL,CAAWC,MAA5B;AACA,OAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,IAAAA,QAAQ,EAAEN,IADU;AAEpBC,IAAAA,KAAK,EAAE;AACHM,MAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWM,SADnB;AAEHL,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAFhB;AAFa,GAAxB;AAOH;;AAGD,SAASM,QAAT,CAAkBL,KAAlB,EAAyB;AACrB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CAFJ,EAOI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,KAAlB,EAAyBC,GAAzB,CAA6BC,IAAI,IAAI;AAClC,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAElB,mBAAmB,CAACO,KAAK,CAACQ,KAAN,CAAYE,IAAZ,EAAkB,CAAlB,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CA1BJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,KAAK,CAACQ,KAAN,CAAYE,IAAZ,EAAkB,CAAlB,CAAL,CA3BJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,KAAK,CAACQ,KAAN,CAAYE,IAAZ,EAAkB,CAAlB,CAAL,CA5BJ,CADJ;AAgCH,GAjCA,CADL,CATJ,CAPJ,CADJ;AAwDH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,QAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\n\nfunction HandleCreateChannel(address) {\n\n    console.log(\"this.state.action\", address)\n\n\n    let path = \"/\" + this.state.action\n    this.props.history.push({\n        pathname: path,\n        state: {\n            channelId: this.state.channelId,\n            action: this.state.action\n        }\n    })\n}\n\n\nfunction UserList(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <Link to=\"/adduser\">\n                <button id=\"AddUser\">\n                    <span>Add New User</span>\n                </button>\n            </Link>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.users).map(user => {\n                        return (\n                            <tr key={user.id}>\n                                <td>\n                                    <button onClick={HandleCreateChannel(props.users[user][0])}></button>\n                                    {/* <Link to=\"/openchannel\">\n                                        <button id=\"AddUser\" address={props.users[user][0]}>\n                                            <span>CreateChannel</span>\n                                        </button>\n                                    </Link> */}\n                                    {/* <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 10000000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            props.createNewChannel(rand, user.address).then(() => {\n                                                // Add Channel Id in List\n                                                // set default state as an last state\n                                                // set listening socket from UserList \n                                                toast.success(\"Channel Created with id \" + rand);\n                                            });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button> */}\n                                </td>\n                                <td>{user}</td>\n                                <td>{props.users[user][0]}</td>\n                                <td>{props.users[user][1]}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}