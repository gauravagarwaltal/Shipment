{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/RefundChannel.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport { CheckTimeOut } from \"../Utils/TimeUtils\";\n\nclass RefundChannel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: false,\n      formFlag: false,\n      sender: \"\",\n      action: '',\n      aliceCash: '',\n      bobCash: ''\n    };\n\n    this.handleRefund = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (CheckTimeOut(this.state.onChainState.Timeout)) {\n        this.setState({\n          'errors': \"Wait for TimeOut\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        console.log(\"now process\");\n      }\n\n      this.setState({\n        'aliceCash': \"\"\n      });\n      this.setState({\n        'bobCash': \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        console.log(this.props.location.state.action, this.props.location.state.channelId);\n\n        if (this.props.location.state.action === 'Refund') {\n          GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n            this.setState({\n              'sender': sender,\n              'channelId': this.props.location.state.channelId,\n              'action': this.props.location.state.action,\n              'onChainState': onChainState,\n              'formFlag': true\n            });\n            console.log(this.state.onChainState);\n          }).catch(err => {\n            alert(\"on chain state issue\");\n            console.log(err);\n          });\n        } else {\n          alert(\"go back \");\n        }\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.onChainState && React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.formFlag && React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleRefund,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Refund Channel\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default RefundChannel;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/RefundChannel.js"],"names":["React","GetChannelDetails","FetchAccount","OnChainStateView","CheckTimeOut","RefundChannel","Component","state","errors","channelId","onChainState","formFlag","sender","action","aliceCash","bobCash","handleRefund","event","preventDefault","setState","Timeout","Number","isNaN","parseInt","console","log","componentDidMount","then","props","location","catch","err","alert","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport { CheckTimeOut } from \"../Utils/TimeUtils\";\n\nclass RefundChannel extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: false,\n        formFlag: false,\n        sender: \"\",\n        action: '',\n        aliceCash: '',\n        bobCash: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                console.log(this.props.location.state.action, this.props.location.state.channelId)\n                if (this.props.location.state.action === 'Refund') {\n                    GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n                        this.setState({\n                            'sender': sender,\n                            'channelId': this.props.location.state.channelId,\n                            'action': this.props.location.state.action,\n                            'onChainState': onChainState,\n                            'formFlag': true,\n                        })\n                        console.log(this.state.onChainState)\n                    }).catch(err => {\n                        alert(\"on chain state issue\")\n                        console.log(err)\n                    })\n                }\n                else {\n                    alert(\"go back \")\n                }\n            }\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    handleRefund = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (CheckTimeOut(this.state.onChainState.Timeout)) {\n            this.setState({ 'errors': \"Wait for TimeOut\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            console.log(\"now process\")\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        {this.state.onChainState && <OnChainStateView details={this.state.onChainState} />}\n                    </div>\n\n                    <div>\n                        {this.state.formFlag &&\n                            <form id=\"form\" className=\"mt-2\" onSubmit={this.handleRefund}>\n                                {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                                <input type=\"submit\" value=\"Refund Channel\" className=\"btn btn-primary\" />\n                            </form>}\n                    </div>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default RefundChannel;\n"]},"metadata":{},"sourceType":"module"}