{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\n\nclass ActiveChannelPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: \"\",\n      offChainState: \"\",\n      value: \"\",\n      operation: \"\",\n      sender: \"\",\n      channels: [],\n      action: ''\n    };\n\n    this.fetchOnChainDetails = async event => {\n      let value = await GetChannelDetails(this.state.channelId);\n      return value;\n    };\n\n    this.fetchOffChainDetails = async event => {\n      let key = this.state.sender + this.state.channelId + '_last_signed_state';\n      let value = localStorage.getItem(key);\n\n      if (value !== null && value !== undefined) {\n        let splitstate = value.split(\"_\");\n        let state_obj = {\n          'Channel Id': splitstate[0],\n          'count': splitstate[1],\n          'Alice Cash': splitstate[2],\n          'Bob Cash': splitstate[3]\n        };\n        console.log(state_obj);\n        return state_obj;\n      }\n\n      return \"No off chain state Found\";\n    };\n\n    this.onActionChange = async event => this.setState({\n      'action': event.target.value\n    });\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': false\n      });\n\n      if (this.state.action === 'select action') {\n        this.setState({\n          'errors': \"Please select Action from drop down\"\n        });\n      } else {\n        let url = \"/waitingChannel/\" + this.state.waitingChannelId;\n        console.log(url); // console.log(this.props);\n\n        this.props.history.push(url);\n      }\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n        this.setState({\n          'channelId': this.props.match.params.channel_id\n        });\n        console.log(\"channel Id\", this.state.channelId);\n        this.fetchOnChainDetails().then(onChainState => {\n          this.setState({\n            'onChainState': onChainState\n          });\n        }).catch(err => {\n          alert(\"on chain state issue\");\n          console.log(err);\n        });\n        this.fetchOffChainDetails().then(offChainState => {\n          this.setState({\n            'offChainState': offChainState\n          });\n        }).catch(err => {\n          alert(\"off chain state issue\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"On Chain State\"), React.createElement(ManageDetailsView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Off Chain State\"), typeof this.state.offChainState === 'string' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.offChainState), typeof this.state.offChainState !== 'string' && React.createElement(ManageDetailsView, {\n      details: this.state.offChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.actionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ActionList, {\n      onChange: this.onActionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"check Active Channel Status\"))));\n  }\n\n}\n\n;\nexport default ActiveChannelPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js"],"names":["React","GetChannelDetails","IsMyChannel","ManageDetailsView","ChannelList","FetchAccount","ActionList","ActiveChannelPage","Component","state","errors","channelId","onChainState","offChainState","value","operation","sender","channels","action","fetchOnChainDetails","event","fetchOffChainDetails","key","localStorage","getItem","undefined","splitstate","split","state_obj","console","log","onActionChange","setState","target","actionHandler","preventDefault","alert","url","waitingChannelId","props","history","push","componentDidMount","then","JSON","parse","match","params","channel_id","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\n\nclass ActiveChannelPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: \"\",\n        offChainState: \"\",\n        value: \"\",\n        operation: \"\",\n        sender: \"\",\n        channels: [],\n        action: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n                this.setState({ 'channelId': this.props.match.params.channel_id })\n                console.log(\"channel Id\", this.state.channelId);\n                this.fetchOnChainDetails().then(onChainState => {\n                    this.setState({ 'onChainState': onChainState })\n                }).catch(err => {\n                    alert(\"on chain state issue\")\n                    console.log(err)\n                })\n                this.fetchOffChainDetails().then(offChainState => {\n                    this.setState({ 'offChainState': offChainState })\n                }).catch(err => {\n                    alert(\"off chain state issue\")\n                    console.log(err)\n                })\n            }\n\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    fetchOnChainDetails = async (event) => {\n        let value = await GetChannelDetails(this.state.channelId)\n        return value;\n    }\n\n    fetchOffChainDetails = async (event) => {\n        let key = this.state.sender + this.state.channelId + '_last_signed_state'\n        let value = localStorage.getItem(key)\n        if (value !== null && value !== undefined) {\n            let splitstate = value.split(\"_\");\n            let state_obj = {\n                'Channel Id': splitstate[0],\n                'count': splitstate[1],\n                'Alice Cash': splitstate[2],\n                'Bob Cash': splitstate[3],\n            }\n            console.log(state_obj)\n            return state_obj\n        }\n        return \"No off chain state Found\"\n    }\n\n    onActionChange = async (event) => this.setState({ 'action': event.target.value });\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': false });\n        if (this.state.action === 'select action') {\n            this.setState({ 'errors': \"Please select Action from drop down\" })\n        }\n        else {\n            let url = \"/waitingChannel/\" + this.state.waitingChannelId\n            console.log(url)\n            // console.log(this.props);\n            this.props.history.push(url);\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        <p>On Chain State</p>\n                        <ManageDetailsView details={this.state.onChainState} />\n                    </div>\n                    <div>\n                        <p>Off Chain State</p>\n                        {(typeof this.state.offChainState === 'string') && <p>{this.state.offChainState}</p>}\n                        {(typeof this.state.offChainState !== 'string') && <ManageDetailsView details={this.state.offChainState} />}\n                    </div>\n                    <form id=\"form\" onSubmit={this.actionHandler}>\n                        <ActionList onChange={this.onActionChange} />\n                        {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        <button id=\"button\">check Active Channel Status</button>\n                    </form>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default ActiveChannelPage;\n"]},"metadata":{},"sourceType":"module"}