{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/UserList.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './UserList.css';\n\nclass UserList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"User DataBase\"), React.createElement(Link, {\n      to: \"/adduser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"AddUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Add New User\"))), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Category\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, Object.keys(this.props.users).map(user => {\n      return React.createElement(\"tr\", {\n        key: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => {\n          const min = 10000000;\n          const max = 100000000;\n          const rand = Math.floor(min + Math.random() * (max - min));\n          let cash = prompt(\"Please channel money:\", '111');\n\n          if (Number.isNaN(parseInt(cash, 10))) {\n            toast.error(\"Enter Interger Amount in Prompt\");\n          } else {\n            this.props.createNewChannel(rand, user, cash).then();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"CreateChannel\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.users[user][0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, user), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.users[user][1]));\n    }))));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/UserList.js"],"names":["React","Link","toast","UserList","Component","render","Object","keys","props","users","map","user","min","max","rand","Math","floor","random","cash","prompt","Number","isNaN","parseInt","error","createNewChannel","then"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CAFJ,EAOI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA8BC,GAA9B,CAAkCC,IAAI,IAAI;AACvC,aACI;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,gBAAMC,GAAG,GAAG,QAAZ;AACA,gBAAMC,GAAG,GAAG,SAAZ;AACA,gBAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAGG,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAjB,CAAb;AACA,cAAIM,IAAI,GAAGC,MAAM,CAAC,uBAAD,EAA0B,KAA1B,CAAjB;;AACA,cAAIC,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAACJ,IAAD,EAAO,EAAP,CAArB,CAAJ,EAAsC;AAClChB,YAAAA,KAAK,CAACqB,KAAN,CAAY,iCAAZ;AACH,WAFD,MAGK;AACD,iBAAKf,KAAL,CAAWgB,gBAAX,CAA4BV,IAA5B,EAAkCH,IAAlC,EAAwCO,IAAxC,EAA8CO,IAA9C;AACH;AAEJ,SAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKjB,KAAL,CAAWC,KAAX,CAAiBE,IAAjB,EAAuB,CAAvB,CAAL,CArBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAL,CAtBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,IAAjB,EAAuB,CAAvB,CAAL,CAvBJ,CADJ;AA2BH,KA5BA,CADL,CATJ,CAPJ,CADJ;AAmDH;;AAtDkC;;AA0DvC,eAAeR,QAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './UserList.css'\n\n\nclass UserList extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <h2>User DataBase</h2>\n                <Link to=\"/adduser\">\n                    <button id=\"AddUser\">\n                        <span>Add New User</span>\n                    </button>\n                </Link>\n                <table id='table' className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>&nbsp;</th>\n                            <th>Name</th>\n                            <th>Address</th>\n                            <th>Category</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.props.users).map(user => {\n                            return (\n                                <tr key={user}>\n                                    <td>\n                                        <button\n                                            className=\"btn btn-outline-danger\"\n                                            onClick={() => {\n                                                const min = 10000000;\n                                                const max = 100000000;\n                                                const rand = Math.floor(min + Math.random() * (max - min));\n                                                let cash = prompt(\"Please channel money:\", '111');\n                                                if (Number.isNaN(parseInt(cash, 10))) {\n                                                    toast.error(\"Enter Interger Amount in Prompt\")\n                                                }\n                                                else {\n                                                    this.props.createNewChannel(rand, user, cash).then();\n                                                }\n\n                                            }}\n                                        >\n                                            CreateChannel\n                                </button>\n                                    </td>\n                                    <td>{this.props.users[user][0]}</td>\n                                    <td>{user}</td>\n                                    <td>{this.props.users[user][1]}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}