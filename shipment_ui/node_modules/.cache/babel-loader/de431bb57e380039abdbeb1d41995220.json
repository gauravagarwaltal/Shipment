{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/SocketApi/RenderSubscribedDetails.js\";\nimport React from \"react\";\nimport './RenderSubscribedDetails.css';\nimport { toast } from \"react-toastify\";\n\nfunction RenderObject(props) {\n  return React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, Object.keys(props.details).map(request => {\n    if (!Number.isInteger(parseInt(request, 10))) {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, request)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"props.details[request]\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => {\n          const min = 1000;\n          const max = 100000000;\n          const rand = Math.floor(min + Math.random() * (max - min));\n          console.log(rand); // props.createNewChannel(rand, request.address).then(() => {\n          //     // Add Channel Id in List\n          //     // set default state as an last state\n          //     // set listening socket from UserList \n          //     toast.success(\"Channel Created with id \" + rand);\n          // });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"CreateChannel\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"request.name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"request.address\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"request.category\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"request.listen\"));\n    }\n  }));\n}\n\nfunction RenderSubscribedDetails(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"value\"))), React.createElement(RenderObject, {\n    details: props.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}\n\nexport default RenderSubscribedDetails;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/SocketApi/RenderSubscribedDetails.js"],"names":["React","toast","RenderObject","props","Object","keys","details","map","request","Number","isInteger","parseInt","min","max","rand","Math","floor","random","console","log","RenderSubscribedDetails"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,OAAlB,EAA2BC,GAA3B,CAA+BC,OAAO,IAAI;AACtC,QAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACH,OAAD,EAAU,EAAV,CAAzB,CAAL,EAA8C;AAC1C,aACI;AAAI,QAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,OAAP,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,gBAAMI,GAAG,GAAG,IAAZ;AACA,gBAAMC,GAAG,GAAG,SAAZ;AACA,gBAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAGG,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAjB,CAAb;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJW,CAKX;AACA;AACA;AACA;AACA;AACA;AACH,SAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAPJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA3BJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA5BJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA7BJ,CADJ;AAkCH;AACJ,GArCD,CAFR,CADJ;AA6CH;;AAED,SAASM,uBAAT,CAAiCjB,KAAjC,EAAwC;AAEpC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ,CADJ,EAOI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,KAAK,CAACG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAaH;;AAED,eAAec,uBAAf","sourcesContent":["import React from \"react\"\nimport './RenderSubscribedDetails.css'\nimport { toast } from \"react-toastify\";\n\nfunction RenderObject(props) {\n    return (\n        <tbody>\n            {\n                Object.keys(props.details).map(request => {\n                    if (!Number.isInteger(parseInt(request, 10))) {\n                        return (\n                            <tr key={request}>\n                                <td >\n                                    <span>{request}</span>\n                                </td>\n                                <td>\n                                    <span>props.details[request]</span>\n                                </td>\n                                <td>\n                                    <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 1000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            // props.createNewChannel(rand, request.address).then(() => {\n                                            //     // Add Channel Id in List\n                                            //     // set default state as an last state\n                                            //     // set listening socket from UserList \n                                            //     toast.success(\"Channel Created with id \" + rand);\n                                            // });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button>\n                                </td>\n                                <td>request.name</td>\n                                <td>request.address</td>\n                                <td>request.category</td>\n                                <td>request.listen</td>\n                            </tr>\n                        )\n\n                    }\n                }\n                )\n            }\n        </tbody>\n    )\n}\n\nfunction RenderSubscribedDetails(props) {\n\n    return (\n        <div>\n            <table id=\"table\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>value</th>\n                    </tr>\n                </thead>\n                <RenderObject details={props.details} />\n            </table>\n        </div>\n    )\n}\n\nexport default RenderSubscribedDetails;\n"]},"metadata":{},"sourceType":"module"}