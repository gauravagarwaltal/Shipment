{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass ActiveChannelPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: \"\",\n      offChainState: \"\",\n      value: \"\",\n      operation: \"\",\n      sender: \"\",\n      channels: [],\n      action: ''\n    };\n\n    this.onActionChange = async event => this.setState({\n      'action': event.target.value\n    });\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      } else {\n        this.setState({\n          'errors': false\n        });\n        console.log(\"this.state.action\", this.state.action);\n\n        if (this.state.action === 'select action' || this.state.action === '') {\n          this.setState({\n            'errors': \"Please select action from drop down\"\n          });\n        } else {\n          if (this.state.action === 'New Transaction') {\n            this.props.history.push({\n              pathname: '/newtransaction',\n              search: '?query=' + this.state.channelId,\n              state: {\n                channelId: this.state.channelId,\n                action: this.state.action\n              }\n            });\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        this.setState({\n          'channels': JSON.parse(localStorage.getItem(key) || \"[]\")\n        });\n        this.setState({\n          'channelId': this.props.match.params.channel_id\n        });\n        console.log(\"channel Id\", this.state.channelId);\n        GetChannelDetails(this.state.channelId).then(onChainState => {\n          this.setState({\n            'onChainState': onChainState\n          });\n        }).catch(err => {\n          alert(\"on chain state issue\");\n          console.log(err);\n        });\n        let offChainState = FetchOffChainDetails(this.state.sender, this.state.channelId);\n        this.setState({\n          'offChainState': offChainState\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(OffChainStateView, {\n      details: this.state.offChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"form\",\n      onSubmit: this.actionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ActionList, {\n      onChange: this.onActionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"button\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Apply Action\"))));\n  }\n\n}\n\n;\nexport default ActiveChannelPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ActiveChannelPage.js"],"names":["React","GetChannelDetails","FetchAccount","ActionList","OnChainStateView","OffChainStateView","FetchOffChainDetails","ActiveChannelPage","Component","state","errors","channelId","onChainState","offChainState","value","operation","sender","channels","action","onActionChange","event","setState","target","actionHandler","preventDefault","undefined","alert","console","log","props","history","push","pathname","search","componentDidMount","then","key","JSON","parse","localStorage","getItem","match","params","channel_id","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass ActiveChannelPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: \"\",\n        offChainState: \"\",\n        value: \"\",\n        operation: \"\",\n        sender: \"\",\n        channels: [],\n        action: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                this.setState({ 'channels': JSON.parse(localStorage.getItem(key) || \"[]\") })\n                this.setState({ 'channelId': this.props.match.params.channel_id })\n                console.log(\"channel Id\", this.state.channelId);\n                GetChannelDetails(this.state.channelId).then(onChainState => {\n                    this.setState({ 'onChainState': onChainState })\n                }).catch(err => {\n                    alert(\"on chain state issue\")\n                    console.log(err)\n                })\n                let offChainState = FetchOffChainDetails(this.state.sender, this.state.channelId)\n                this.setState({ 'offChainState': offChainState })\n            }\n\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    onActionChange = async (event) => this.setState({ 'action': event.target.value });\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        else {\n            this.setState({ 'errors': false });\n            console.log(\"this.state.action\", this.state.action)\n            if (this.state.action === 'select action' || this.state.action === '') {\n                this.setState({ 'errors': \"Please select action from drop down\" })\n            }\n            else {\n                if (this.state.action === 'New Transaction') {\n                    this.props.history.push({\n                        pathname: '/newtransaction',\n                        search: '?query=' + this.state.channelId,\n                        state: {\n                            channelId: this.state.channelId,\n                            action: this.state.action\n                        }\n                    })\n                }\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        <OnChainStateView details={this.state.onChainState} />\n                    </div>\n                    <div>\n                        <OffChainStateView details={this.state.offChainState} />\n                    </div>\n                    <form id=\"form\" onSubmit={this.actionHandler}>\n                        <ActionList onChange={this.onActionChange} />\n                        {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        <button id=\"button\">Apply Action</button>\n                    </form>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default ActiveChannelPage;\n"]},"metadata":{},"sourceType":"module"}