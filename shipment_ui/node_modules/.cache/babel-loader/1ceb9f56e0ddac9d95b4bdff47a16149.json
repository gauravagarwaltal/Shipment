{"ast":null,"code":"import Web3 from 'web3';\nimport { Web3_Provider } from \"./contract_config\";\nconst web3 = new Web3(Web3.givenProvider || Web3_Provider);\n\nconst FetchAccount = async () => {\n  // console.log(await window.ethereum.enable())\n  let accounts = await web3.eth.getAccounts();\n  const account = accounts[0];\n\n  if (web3.utils.toChecksumAddress(account)) {\n    return account;\n  } else {\n    this.props.history.push({\n      pathname: '/metamaskIssue'\n    });\n    toast.error(\"check metamask connectivity\");\n    return null;\n  }\n};\n\nexport { web3, FetchAccount };","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/contract/MetaMaskFetch.js"],"names":["Web3","Web3_Provider","web3","givenProvider","FetchAccount","accounts","eth","getAccounts","account","utils","toChecksumAddress","props","history","push","pathname","toast","error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,CAASA,IAAI,CAACG,aAAL,IAAsBF,aAA/B,CAAb;;AAEA,MAAMG,YAAY,GAAG,YAAY;AAC7B;AACA,MAAIC,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAArB;AACA,QAAMC,OAAO,GAAGH,QAAQ,CAAC,CAAD,CAAxB;;AACA,MAAIH,IAAI,CAACO,KAAL,CAAWC,iBAAX,CAA6BF,OAA7B,CAAJ,EAA2C;AACvC,WAAOA,OAAP;AACH,GAFD,MAGK;AACD,SAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,MAAAA,QAAQ,EAAE;AADU,KAAxB;AAGAC,IAAAA,KAAK,CAACC,KAAN,CAAY,6BAAZ;AACA,WAAO,IAAP;AACH;AACJ,CAdD;;AAgBA,SAASd,IAAT,EAAeE,YAAf","sourcesContent":["import Web3 from 'web3'\nimport { Web3_Provider } from \"./contract_config\";\nconst web3 = new Web3(Web3.givenProvider || Web3_Provider)\n\nconst FetchAccount = async () => {\n    // console.log(await window.ethereum.enable())\n    let accounts = await web3.eth.getAccounts()\n    const account = accounts[0]\n    if (web3.utils.toChecksumAddress(account)) {\n        return account\n    }\n    else {\n        this.props.history.push({\n            pathname: '/metamaskIssue',\n        })\n        toast.error(\"check metamask connectivity\")\n        return null\n    }\n}\n\nexport { web3, FetchAccount };"]},"metadata":{},"sourceType":"module"}