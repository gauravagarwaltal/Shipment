{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js\";\nimport React, { useState } from \"react\"; // import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport { fetchLastState } from \"../Api/FetchBrowserData\";\n\nconst ChannelDetailsPage = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        details = _useState6[0],\n        setDetails = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n  const _React$useState = React.useState(JSON.parse(localStorage.getItem(\"Tempchannels\") || \"[]\")),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        channels = _React$useState2[0],\n        setChannels = _React$useState2[1]; // const [course, setCourse] = useState({\n  //     id: null,\n  //     slug: \"\",\n  //     title: \"\",\n  //     authorId: null,\n  //     category: \"\"\n  // });\n\n\n  async function onChange(event) {\n    event.preventDefault();\n    setChannels([...channels, value]);\n    localStorage.setItem('Tempchannels', JSON.stringify(channels)); // localStorage.removeItem('Tempchannels')\n  }\n\n  const onValueChange = event => setValue(event.target.value);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setErrors(\"\");\n\n    if (Number.isNaN(parseInt(channelId, 10))) {\n      setErrors(\"Enter Interger channel Id\");\n    } else {\n      let value = await GetChannelDetails(channelId);\n      setDetails(value);\n    }\n\n    setChannelId(\"\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(\"form\", {\n    onSubmit: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    type: \"text\",\n    onChange: onValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, value), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Add Channel Id\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"channel -> '\", channels, \"'\")), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"channelId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Channel Id\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"channelId\",\n    name: \"channelId\",\n    type: \"text\",\n    placeholder: \"channel id(integer value)\",\n    className: \"form-control\",\n    value: channelId,\n    onChange: event => setChannelId(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), errors && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors)), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Get Channel Details\")), errors === '' && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Channel Details of channel id -> \", channelId), React.createElement(ManageDetailsView, {\n    details: details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: fetchLastState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Fetch Last State\")));\n};\n\nexport default ChannelDetailsPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js"],"names":["React","useState","GetChannelDetails","ManageDetailsView","fetchLastState","ChannelDetailsPage","props","errors","setErrors","channelId","setChannelId","details","setDetails","value","setValue","JSON","parse","localStorage","getItem","channels","setChannels","onChange","event","preventDefault","setItem","stringify","onValueChange","target","handleSubmit","Number","isNaN","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport { fetchLastState } from \"../Api/FetchBrowserData\";\n\nconst ChannelDetailsPage = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const [channels, setChannels] = React.useState(JSON.parse(localStorage.getItem(\"Tempchannels\") || \"[]\"));\n    // const [course, setCourse] = useState({\n    //     id: null,\n    //     slug: \"\",\n    //     title: \"\",\n    //     authorId: null,\n    //     category: \"\"\n    // });\n\n    async function onChange(event) {\n        event.preventDefault();\n        setChannels([...channels, value])\n        localStorage.setItem('Tempchannels', JSON.stringify(channels));\n        // localStorage.removeItem('Tempchannels')\n    }\n    const onValueChange = event => setValue(event.target.value);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setErrors(\"\");\n        if (Number.isNaN(parseInt(channelId, 10))) {\n            setErrors(\"Enter Interger channel Id\")\n        }\n        else {\n            let value = await GetChannelDetails(channelId)\n            setDetails(value);\n        }\n        setChannelId(\"\")\n    }\n\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <form onSubmit={onChange}>\n                        <input value={value} type=\"text\" onChange={onValueChange} />\n                        <p>{value}</p>\n                        <button >Add Channel Id</button>\n                    </form>\n                    <p>channel -> '{channels}'</p>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <input id=\"channelId\" name=\"channelId\"\n                                type=\"text\"\n                                placeholder=\"channel id(integer value)\"\n                                className=\"form-control\"\n                                value={channelId}\n                                onChange={event => setChannelId(event.target.value)} />\n                        </div>\n                        {errors && <div className=\"alert alert-danger\">{errors}</div>}\n                    </div>\n                    <button>Get Channel Details</button>\n                </form>\n                {(errors === '') && (\n                    <div >\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        <ManageDetailsView details={details} />\n                    </div>\n                )}\n                <button onClick={fetchLastState}>Fetch Last State</button>\n            </div>\n        </>\n    );\n};\n\nexport default ChannelDetailsPage;\n"]},"metadata":{},"sourceType":"module"}