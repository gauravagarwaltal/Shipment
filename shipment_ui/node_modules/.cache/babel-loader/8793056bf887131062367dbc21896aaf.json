{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\nimport { FetchRequests } from \"../redisApi/GetSetData\";\n\nasync function FetchPendingState(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"User DataBase\"), React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Listening On\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"user.id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-danger\",\n    onClick: async () => {\n      const min = 1000;\n      const max = 100000000;\n      const rand = Math.floor(min + Math.random() * (max - min));\n      console.log(rand);\n      let response = await props.fetchPendingState(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1);\n      Object.keys(response).map(priKey => {\n        if (!Number.isInteger(parseInt(priKey, 10))) {\n          return React.createElement(\"tr\", {\n            key: priKey,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, priKey)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, props.details[priKey])));\n        }\n      });\n      toast.success(\"Channel Created with id \" + \"request\" + \"d\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"CreateChannel\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"user.name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"user.address}\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"user.category}\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"user.listen}\")))));\n} // UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\n\nconst PendingState = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Pending States\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Hello React with Local Storage!\"), React.createElement(FetchPendingState, {\n    fetchPendingState: FetchRequests,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nexport default PendingState;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","toast","FetchRequests","FetchPendingState","props","min","max","rand","Math","floor","random","console","log","response","fetchPendingState","Object","keys","map","priKey","Number","isInteger","parseInt","details","success","PendingState"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests } from \"../redisApi/GetSetData\";\nasync function FetchPendingState(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    <tr key=\"user.id\">\n                        <td>\n                            <button\n                                className=\"btn btn-outline-danger\"\n                                onClick={async () => {\n                                    const min = 1000;\n                                    const max = 100000000;\n                                    const rand = Math.floor(min + Math.random() * (max - min));\n                                    console.log(rand)\n                                    let response = await props.fetchPendingState(1, \"0x19DbcfB1E970EB0ac300936824de350EE248e803\", 1)\n                                    Object.keys(response).map(priKey => {\n                                        if (!Number.isInteger(parseInt(priKey, 10))) {\n                                            return (\n                                                <tr key={priKey}>\n                                                    <td >\n                                                        <span>{priKey}</span>\n                                                    </td>\n                                                    <td>\n                                                        <span>{props.details[priKey]}</span>\n                                                    </td>\n                                                </tr>\n                                            )\n\n                                        }\n                                    }\n                                    )\n                                    toast.success(\"Channel Created with id \" + \"request\" + \"d\");\n\n                                }}\n                            >\n                                CreateChannel\n                                </button>\n                        </td>\n                        <td>user.name</td>\n                        <td>user.address}</td>\n                        <td>user.category}</td>\n                        <td>user.listen}</td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nconst PendingState = props => {\n    return (\n        <>\n            <h2>Pending States</h2>\n            <div>\n                <h1>Hello React with Local Storage!</h1>\n                <FetchPendingState fetchPendingState={FetchRequests} />\n            </div>\n        </>\n    );\n};\nexport default PendingState;\n"]},"metadata":{},"sourceType":"module"}