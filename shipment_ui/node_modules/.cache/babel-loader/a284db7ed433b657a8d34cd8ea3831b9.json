{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css';\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { MakeStringState } from \"../LocalStorage/local_storage_api\";\n\nasync function onDeleteClick(sender, index, request_type) {\n  let response = await DeleteRequest(sender, request_type, index);\n  console.log(response);\n}\n\nasync function onShowLastState(sender, request) {\n  let channel_id = request.split('_')[0];\n  let key = sender + channel_id + \"_last_signed_state\";\n  alert(localStorage.getItem(key) || \"No Signed State Defined\");\n}\n\nasync function onAcceptClick(sender, request, index, request_type) {\n  let splitstate = request.split(\"_\");\n  let state_obj = {\n    'channel_id': Number.parseInt(splitstate[0]),\n    'count': Number.parseInt(splitstate[1]),\n    'alice_cash': Number.parseInt(splitstate[2]),\n    'bob_cash': Number.parseInt(splitstate[3]),\n    'sig': splitstate[4]\n  };\n  console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n  const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender);\n  let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n\n  if (checkSig === true) {\n    let signature = await GenerateSignatures(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash);\n    let key = sender + state_obj.channel_id + \"_last_signed_state\";\n    request = request.replace('\"', '');\n    localStorage.setItem(key, request);\n    let lastState = MakeStringState(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, signature);\n\n    let _ref = await SetRequest(TheOtherParty, request_type, lastState),\n        _ref2 = _slicedToArray(_ref, 2),\n        status = _ref2[0],\n        response = _ref2[1];\n\n    if (status === 200) {\n      toast.success(\"Transaction Accepted\");\n      console.log(\"hello \", response);\n    } else {\n      toast.error(\"Transaction Failed \");\n    }\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nasync function onAcceptClickResponse(sender, request, index) {\n  let splitstate = request.split(\"_\");\n  let state_obj = {\n    'channel_id': Number.parseInt(splitstate[0]),\n    'count': Number.parseInt(splitstate[1]),\n    'alice_cash': Number.parseInt(splitstate[2]),\n    'bob_cash': Number.parseInt(splitstate[3]),\n    'sig': splitstate[4]\n  };\n  console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n  const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender);\n  let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig);\n\n  if (checkSig === true) {\n    let key = sender + state_obj.channel_id + \"_last_signed_state\";\n    request = request.replace('\"', '');\n    localStorage.setItem(key, request);\n    alert(\"valid signature\");\n  } else {\n    alert(\"invalid signature\");\n  }\n}\n\nclass PendingStates extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingStateRequests: false,\n      pendingStateResponse: false,\n      sender: false\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        FetchRequests(this.state.sender, STATE_TYPE.Request).then(request => {\n          if (request !== undefined && request !== null) {\n            this.setState({\n              pendingStateRequests: request\n            });\n          }\n\n          console.log(this.state.pendingStateRequests);\n        }).catch(err => {\n          alert(\"error occured while fetching pending requests\");\n          console.log(err);\n        });\n        FetchRequests(this.state.sender, STATE_TYPE.Response).then(response => {\n          if (response !== undefined && response !== null) {\n            this.setState({\n              pendingStateResponse: response\n            });\n          }\n        }).catch(err => {\n          alert(\"error occured while fetching pending response\");\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"New State Requests\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Decline State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"State Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(this.state.sender, request, STATE_TYPE.Request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClick(this.state.sender, this.state.pendingStateRequests[request], request, STATE_TYPE.Response),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, STATE_TYPE.Request)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[0])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[1])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[2])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.pendingStateRequests[request].split('_')[3])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.sender, this.state.pendingStateRequests[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    }), this.state.pendingStateResponse && Object.keys(this.state.pendingStateResponse).map(request => {\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onDeleteClick(this.state.sender, request, STATE_TYPE.Response),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Delete Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onAcceptClickResponse(this.state.sender, this.state.pendingStateResponse[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, STATE_TYPE.Response)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.state.pendingStateResponse[request].split('_')[0])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.pendingStateResponse[request].split('_')[1])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.pendingStateResponse[request].split('_')[2])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.pendingStateResponse[request].split('_')[3])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => onShowLastState(this.state.sender, this.state.pendingStateResponse[request]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    })))));\n  }\n\n}\n\n;\nexport default PendingStates;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/PendingStates.js"],"names":["React","toast","FetchRequests","DeleteRequest","SetRequest","FetchAccount","FetchOtherParty","IsValidSignature","STATE_TYPE","GenerateSignatures","MakeStringState","onDeleteClick","sender","index","request_type","response","console","log","onShowLastState","request","channel_id","split","key","alert","localStorage","getItem","onAcceptClick","splitstate","state_obj","Number","parseInt","count","alice_cash","bob_cash","sig","TheOtherParty","checkSig","signature","replace","setItem","lastState","status","success","error","onAcceptClickResponse","PendingStates","Component","state","pendingStateRequests","pendingStateResponse","componentDidMount","then","setState","Request","undefined","catch","err","Response","render","Object","keys","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,UAAvC,QAAyD,wBAAzD;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kCAAlD;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,SAASC,eAAT,QAAgC,mCAAhC;;AAGA,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,YAA5C,EAA0D;AACtD,MAAIC,QAAQ,GAAG,MAAMZ,aAAa,CAACS,MAAD,EAASE,YAAT,EAAuBD,KAAvB,CAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH;;AAED,eAAeG,eAAf,CAA+BN,MAA/B,EAAuCO,OAAvC,EAAgD;AAC5C,MAAIC,UAAU,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAjB;AACA,MAAIC,GAAG,GAAGV,MAAM,GAAGQ,UAAT,GAAsB,oBAAhC;AACAG,EAAAA,KAAK,CAACC,YAAY,CAACC,OAAb,CAAqBH,GAArB,KAA6B,yBAA9B,CAAL;AACH;;AAED,eAAeI,aAAf,CAA6Bd,MAA7B,EAAqCO,OAArC,EAA8CN,KAA9C,EAAqDC,YAArD,EAAmE;AAC/D,MAAIa,UAAU,GAAGR,OAAO,CAACE,KAAR,CAAc,GAAd,CAAjB;AACA,MAAIO,SAAS,GAAG;AACZ,kBAAcC,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CADF;AAEZ,aAASE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAFG;AAGZ,kBAAcE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAHF;AAIZ,gBAAYE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAJA;AAKZ,WAAOA,UAAU,CAAC,CAAD;AALL,GAAhB;AAOAX,EAAAA,OAAO,CAACC,GAAR,CAAYW,SAAS,CAACR,UAAtB,EAAkCQ,SAAS,CAACG,KAA5C,EAAmDH,SAAS,CAACI,UAA7D,EAAyEJ,SAAS,CAACK,QAAnF,EAA6FL,SAAS,CAACM,GAAvG;AACA,QAAMC,aAAa,GAAG,MAAM7B,eAAe,CAACsB,SAAS,CAACR,UAAX,EAAuBR,MAAvB,CAA3C;AACA,MAAIwB,QAAQ,GAAG,MAAM7B,gBAAgB,CAAC4B,aAAD,EAAgBP,SAAS,CAACR,UAA1B,EAAsCQ,SAAS,CAACG,KAAhD,EAAuDH,SAAS,CAACI,UAAjE,EAA6EJ,SAAS,CAACK,QAAvF,EAAiGL,SAAS,CAACM,GAA3G,CAArC;;AAEA,MAAIE,QAAQ,KAAK,IAAjB,EAAuB;AACnB,QAAIC,SAAS,GAAG,MAAM5B,kBAAkB,CAACmB,SAAS,CAACR,UAAX,EAAuBQ,SAAS,CAACG,KAAjC,EAAwCH,SAAS,CAACI,UAAlD,EAA8DJ,SAAS,CAACK,QAAxE,CAAxC;AACA,QAAIX,GAAG,GAAGV,MAAM,GAAGgB,SAAS,CAACR,UAAnB,GAAgC,oBAA1C;AACAD,IAAAA,OAAO,GAAGA,OAAO,CAACmB,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAAV;AACAd,IAAAA,YAAY,CAACe,OAAb,CAAqBjB,GAArB,EAA0BH,OAA1B;AACA,QAAIqB,SAAS,GAAG9B,eAAe,CAACkB,SAAS,CAACR,UAAX,EAAuBQ,SAAS,CAACG,KAAjC,EAAwCH,SAAS,CAACI,UAAlD,EAA8DJ,SAAS,CAACK,QAAxE,EAAkFI,SAAlF,CAA/B;;AALmB,eAOM,MAAMjC,UAAU,CAAC+B,aAAD,EAAgBrB,YAAhB,EAA8B0B,SAA9B,CAPtB;AAAA;AAAA,QAOdC,MAPc;AAAA,QAON1B,QAPM;;AAQnB,QAAI0B,MAAM,KAAK,GAAf,EAAoB;AAChBxC,MAAAA,KAAK,CAACyC,OAAN,CAAc,sBAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;AACH,KAHD,MAIK;AACDd,MAAAA,KAAK,CAAC0C,KAAN,CAAY,qBAAZ;AACH;AACJ,GAfD,MAgBK;AACDpB,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ;;AAED,eAAeqB,qBAAf,CAAqChC,MAArC,EAA6CO,OAA7C,EAAsDN,KAAtD,EAA6D;AACzD,MAAIc,UAAU,GAAGR,OAAO,CAACE,KAAR,CAAc,GAAd,CAAjB;AACA,MAAIO,SAAS,GAAG;AACZ,kBAAcC,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CADF;AAEZ,aAASE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAFG;AAGZ,kBAAcE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAHF;AAIZ,gBAAYE,MAAM,CAACC,QAAP,CAAgBH,UAAU,CAAC,CAAD,CAA1B,CAJA;AAKZ,WAAOA,UAAU,CAAC,CAAD;AALL,GAAhB;AAOAX,EAAAA,OAAO,CAACC,GAAR,CAAYW,SAAS,CAACR,UAAtB,EAAkCQ,SAAS,CAACG,KAA5C,EAAmDH,SAAS,CAACI,UAA7D,EAAyEJ,SAAS,CAACK,QAAnF,EAA6FL,SAAS,CAACM,GAAvG;AACA,QAAMC,aAAa,GAAG,MAAM7B,eAAe,CAACsB,SAAS,CAACR,UAAX,EAAuBR,MAAvB,CAA3C;AACA,MAAIwB,QAAQ,GAAG,MAAM7B,gBAAgB,CAAC4B,aAAD,EAAgBP,SAAS,CAACR,UAA1B,EAAsCQ,SAAS,CAACG,KAAhD,EAAuDH,SAAS,CAACI,UAAjE,EAA6EJ,SAAS,CAACK,QAAvF,EAAiGL,SAAS,CAACM,GAA3G,CAArC;;AAEA,MAAIE,QAAQ,KAAK,IAAjB,EAAuB;AACnB,QAAId,GAAG,GAAGV,MAAM,GAAGgB,SAAS,CAACR,UAAnB,GAAgC,oBAA1C;AACAD,IAAAA,OAAO,GAAGA,OAAO,CAACmB,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAAV;AACAd,IAAAA,YAAY,CAACe,OAAb,CAAqBjB,GAArB,EAA0BH,OAA1B;AACAI,IAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,GALD,MAMK;AACDA,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ;;AACD,MAAMsB,aAAN,SAA4B7C,KAAK,CAAC8C,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,oBAAoB,EAAE,KADlB;AAEJC,MAAAA,oBAAoB,EAAE,KAFlB;AAGJrC,MAAAA,MAAM,EAAE;AAHJ,KADgC;AAAA;;AAOxCsC,EAAAA,iBAAiB,GAAG;AAChB7C,IAAAA,YAAY,GACP8C,IADL,CACUvC,MAAM,IAAI;AACZ,UAAIA,MAAJ,EAAY;AACR,aAAKwC,QAAL,CAAc;AAAE,oBAAUxC;AAAZ,SAAd;AACAV,QAAAA,aAAa,CAAC,KAAK6C,KAAL,CAAWnC,MAAZ,EAAoBJ,UAAU,CAAC6C,OAA/B,CAAb,CACKF,IADL,CACUhC,OAAO,IAAI;AACb,cAAIA,OAAO,KAAKmC,SAAZ,IAAyBnC,OAAO,KAAK,IAAzC,EAA+C;AAC3C,iBAAKiC,QAAL,CAAc;AAAEJ,cAAAA,oBAAoB,EAAE7B;AAAxB,aAAd;AACH;;AACDH,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK8B,KAAL,CAAWC,oBAAvB;AACH,SANL,EAOKO,KAPL,CAOWC,GAAG,IAAI;AACVjC,UAAAA,KAAK,CAAC,+CAAD,CAAL;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAZ;AACH,SAVL;AAWAtD,QAAAA,aAAa,CAAC,KAAK6C,KAAL,CAAWnC,MAAZ,EAAoBJ,UAAU,CAACiD,QAA/B,CAAb,CACKN,IADL,CACUpC,QAAQ,IAAI;AACd,cAAIA,QAAQ,KAAKuC,SAAb,IAA0BvC,QAAQ,KAAK,IAA3C,EAAiD;AAC7C,iBAAKqC,QAAL,CAAc;AAAEH,cAAAA,oBAAoB,EAAElC;AAAxB,aAAd;AACH;AACJ,SALL,EAMKwC,KANL,CAMWC,GAAG,IAAI;AACVjC,UAAAA,KAAK,CAAC,+CAAD,CAAL;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAZ;AACH,SATL;AAUH;AAEJ,KA3BL,EA4BKD,KA5BL,CA4BWC,GAAG,IAAI;AACVjC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAZ;AACH,KA/BL;AAgCH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,CADJ,CADJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKX,KAAL,CAAWC,oBAAX,IAAmCW,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWC,oBAAvB,EAA6Ca,GAA7C,CAAiD1C,OAAO,IAAI;AAC3F,aACI;AAAI,QAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAMR,aAAa,CAAC,KAAKoC,KAAL,CAAWnC,MAAZ,EAAoBO,OAApB,EAA6BX,UAAU,CAAC6C,OAAxC,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAM3B,aAAa,CAAC,KAAKqB,KAAL,CAAWnC,MAAZ,EAAoB,KAAKmC,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,CAApB,EAA8DA,OAA9D,EAAuEX,UAAU,CAACiD,QAAlF,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOjD,UAAU,CAAC6C,OAAlB,CAAJ,CAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKN,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAZJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAbJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAdJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAMH,eAAe,CAAC,KAAK6B,KAAL,CAAWnC,MAAZ,EAAoB,KAAKmC,KAAL,CAAWC,oBAAX,CAAgC7B,OAAhC,CAApB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAhBJ,CADJ;AAwBH,KAzBkC,CAF3C,EA+BQ,KAAK4B,KAAL,CAAWE,oBAAX,IAAmCU,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWE,oBAAvB,EAA6CY,GAA7C,CAAiD1C,OAAO,IAAI;AAC3F,aACI;AAAI,QAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAMR,aAAa,CAAC,KAAKoC,KAAL,CAAWnC,MAAZ,EAAoBO,OAApB,EAA6BX,UAAU,CAACiD,QAAxC,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAMb,qBAAqB,CAAC,KAAKG,KAAL,CAAWnC,MAAZ,EAAoB,KAAKmC,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,CAApB,EAA8DA,OAA9D,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOX,UAAU,CAACiD,QAAlB,CAAJ,CAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKV,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAZJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAbJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAdJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK0B,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,EAAyCE,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CAAP,CAAJ,CAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAMH,eAAe,CAAC,KAAK6B,KAAL,CAAWnC,MAAZ,EAAoB,KAAKmC,KAAL,CAAWE,oBAAX,CAAgC9B,OAAhC,CAApB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAhBJ,CADJ;AAwBH,KAzBkC,CA/B3C,CAbJ,CADJ,CAFJ,CADJ;AAiFH;;AA5HuC;;AA6H3C;AACD,eAAe0B,aAAf","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nimport { FetchRequests, DeleteRequest, SetRequest } from \"../redisApi/GetSetData\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport { FetchOtherParty, IsValidSignature } from \"../contract/contract_transaction\";\nimport STATE_TYPE from \"../RequestType\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { MakeStringState } from \"../LocalStorage/local_storage_api\";\n\n\nasync function onDeleteClick(sender, index, request_type) {\n    let response = await DeleteRequest(sender, request_type, index)\n    console.log(response)\n}\n\nasync function onShowLastState(sender, request) {\n    let channel_id = request.split('_')[0]\n    let key = sender + channel_id + \"_last_signed_state\"\n    alert(localStorage.getItem(key) || \"No Signed State Defined\")\n}\n\nasync function onAcceptClick(sender, request, index, request_type) {\n    let splitstate = request.split(\"_\");\n    let state_obj = {\n        'channel_id': Number.parseInt(splitstate[0]),\n        'count': Number.parseInt(splitstate[1]),\n        'alice_cash': Number.parseInt(splitstate[2]),\n        'bob_cash': Number.parseInt(splitstate[3]),\n        'sig': splitstate[4],\n    }\n    console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n    const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender)\n    let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n\n    if (checkSig === true) {\n        let signature = await GenerateSignatures(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash)\n        let key = sender + state_obj.channel_id + \"_last_signed_state\"\n        request = request.replace('\"', '')\n        localStorage.setItem(key, request);\n        let lastState = MakeStringState(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, signature)\n\n        let [status, response] = await SetRequest(TheOtherParty, request_type, lastState)\n        if (status === 200) {\n            toast.success(\"Transaction Accepted\");\n            console.log(\"hello \", response)\n        }\n        else {\n            toast.error(\"Transaction Failed \");\n        }\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\n\nasync function onAcceptClickResponse(sender, request, index) {\n    let splitstate = request.split(\"_\");\n    let state_obj = {\n        'channel_id': Number.parseInt(splitstate[0]),\n        'count': Number.parseInt(splitstate[1]),\n        'alice_cash': Number.parseInt(splitstate[2]),\n        'bob_cash': Number.parseInt(splitstate[3]),\n        'sig': splitstate[4],\n    }\n    console.log(state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n    const TheOtherParty = await FetchOtherParty(state_obj.channel_id, sender)\n    let checkSig = await IsValidSignature(TheOtherParty, state_obj.channel_id, state_obj.count, state_obj.alice_cash, state_obj.bob_cash, state_obj.sig)\n\n    if (checkSig === true) {\n        let key = sender + state_obj.channel_id + \"_last_signed_state\"\n        request = request.replace('\"', '')\n        localStorage.setItem(key, request);\n        alert(\"valid signature\")\n    }\n    else {\n        alert(\"invalid signature\")\n    }\n}\nclass PendingStates extends React.Component {\n    state = {\n        pendingStateRequests: false,\n        pendingStateResponse: false,\n        sender: false,\n    };\n\n    componentDidMount() {\n        FetchAccount()\n            .then(sender => {\n                if (sender) {\n                    this.setState({ 'sender': sender })\n                    FetchRequests(this.state.sender, STATE_TYPE.Request)\n                        .then(request => {\n                            if (request !== undefined && request !== null) {\n                                this.setState({ pendingStateRequests: request })\n                            }\n                            console.log(this.state.pendingStateRequests)\n                        })\n                        .catch(err => {\n                            alert(\"error occured while fetching pending requests\")\n                            console.log(err)\n                        })\n                    FetchRequests(this.state.sender, STATE_TYPE.Response)\n                        .then(response => {\n                            if (response !== undefined && response !== null) {\n                                this.setState({ pendingStateResponse: response })\n                            }\n                        })\n                        .catch(err => {\n                            alert(\"error occured while fetching pending response\")\n                            console.log(err)\n                        })\n                }\n\n            })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>New State Requests</h2>\n                <div>\n                    <table id=\"table\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Decline State</th>\n                                <th>Accept State</th>\n                                <th>State Type</th>\n                                <th>Channel Id</th>\n                                <th>Count</th>\n                                <th>Alice Cash</th>\n                                <th>Bob Cash</th>\n                                <th>Last Signed State</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.pendingStateRequests && Object.keys(this.state.pendingStateRequests).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(this.state.sender, request, STATE_TYPE.Request)} >\n                                                    Delete Request\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onAcceptClick(this.state.sender, this.state.pendingStateRequests[request], request, STATE_TYPE.Response)} >\n                                                    Accept Request\n                                                </button>\n                                            </td>\n                                            <td><span>{STATE_TYPE.Request}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[0]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[1]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[2]}</span></td>\n                                            <td><span>{this.state.pendingStateRequests[request].split('_')[3]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.sender, this.state.pendingStateRequests[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                )\n                            }\n                            {\n                                this.state.pendingStateResponse && Object.keys(this.state.pendingStateResponse).map(request => {\n                                    return (\n                                        <tr key={request}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(this.state.sender, request, STATE_TYPE.Response)} >\n                                                    Delete Request\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onAcceptClickResponse(this.state.sender, this.state.pendingStateResponse[request], request)} >\n                                                    Accept Request\n                                                </button>\n                                            </td>\n                                            <td><span>{STATE_TYPE.Response}</span></td>\n                                            <td><span>{this.state.pendingStateResponse[request].split('_')[0]}</span></td>\n                                            <td><span>{this.state.pendingStateResponse[request].split('_')[1]}</span></td>\n                                            <td><span>{this.state.pendingStateResponse[request].split('_')[2]}</span></td>\n                                            <td><span>{this.state.pendingStateResponse[request].split('_')[3]}</span></td>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => onShowLastState(this.state.sender, this.state.pendingStateResponse[request])} >\n                                                    Show Last Signed State\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n};\nexport default PendingStates;\n"]},"metadata":{},"sourceType":"module"}