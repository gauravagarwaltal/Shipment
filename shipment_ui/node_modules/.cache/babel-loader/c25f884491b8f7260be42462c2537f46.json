{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js\";\nimport React from \"react\"; // import GenerateSignatures from \"../contract/CreateSignature\";\n\nimport { IsValidSignature } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport './Form.css'; // import { toast } from \"react-toastify\";\n\nconst axios = require('axios');\n\nfunction ShowState(props) {\n  return React.createElement(\"table\", {\n    id: \"table\",\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"value\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"Channel Id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Channel Id\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.state[0]))), React.createElement(\"tr\", {\n    key: \"Transaction Count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Transaction Count\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.state[1]))), React.createElement(\"tr\", {\n    key: \"Alice Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Alice Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.state[2]))), React.createElement(\"tr\", {\n    key: \"Bob Cash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Bob Cash\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.state[3])))));\n}\n\nclass CreateTransaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: '',\n      channelId: '',\n      count: '',\n      aliceCash: '',\n      bobCash: '',\n      lastState: localStorage.getItem(this.props.channelId + 'lastState') || null\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c';\n        let sender = await FetchAccount();\n        console.log((await IsValidSignature(sender, 0, 1, 1, sig)));\n        const resp1 = await axios.get('localhost:3000/signature/', {\n          params: {\n            signature: sig\n          }\n        });\n        console.log(resp1.data); // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n        // ChannelConfirm(this.state.channelId, this.state.amount)\n      }\n\n      this.setState({\n        'aliceCash': \"\"\n      });\n      this.setState({\n        'bobCash': \"\"\n      });\n    };\n\n    this.handleLastChannelState = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c';\n        let sender = await FetchAccount();\n        console.log((await IsValidSignature(sender, 0, 1, 1, sig)));\n        const resp1 = await axios.get('localhost:3000/signature/', {\n          params: {\n            signature: sig\n          }\n        });\n        console.log(resp1.data); // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n        // ChannelConfirm(this.state.channelId, this.state.amount)\n      }\n\n      this.setState({\n        'aliceCash': \"\"\n      });\n      this.setState({\n        'bobCash': \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Fetch Last Signed state \"), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"channel_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Channel Id\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"channel_id\",\n      onChange: event => this.setState({\n        channelId: event.target.value\n      }),\n      type: \"text\",\n      name: \"channel_id\",\n      className: \"form-control\",\n      value: this.state.channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Fetch Last Signed State\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), this.state.lastState && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(ShowState, {\n      state: this.state.lastState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Count\",\n      readOnly: true,\n      type: \"text\",\n      name: \"Count\",\n      className: \"form-control\",\n      value: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"aliceCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"aliceCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        aliceCash: event.target.value\n      }),\n      name: \"aliceCash\",\n      className: \"form-control\",\n      value: this.state.aliceCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"bobCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"bobCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        bobCash: event.target.value\n      }),\n      name: \"bobCash\",\n      className: \"form-control\",\n      value: this.state.bobCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Transaction\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default CreateTransaction;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js"],"names":["React","IsValidSignature","FetchAccount","axios","require","ShowState","props","state","CreateTransaction","Component","errors","channelId","count","aliceCash","bobCash","lastState","localStorage","getItem","onChange","event","setState","target","value","handleConfirmChannel","preventDefault","Number","isNaN","parseInt","sig","sender","console","log","resp1","get","params","signature","data","handleLastChannelState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import GenerateSignatures from \"../contract/CreateSignature\";\nimport { IsValidSignature } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport './Form.css'\n// import { toast } from \"react-toastify\";\nconst axios = require('axios');\n\nfunction ShowState(props) {\n    return (\n        <table id=\"table\" className=\"table\">\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr key=\"Channel Id\">\n                    <td><span>Channel Id</span></td>\n                    <td><span>{props.state[0]}</span></td>\n                </tr>\n                <tr key=\"Transaction Count\">\n                    <td ><span>Transaction Count</span></td>\n                    <td><span>{props.state[1]}</span></td>\n                </tr>\n                <tr key=\"Alice Cash\">\n                    <td ><span>Alice Cash</span></td>\n                    <td><span>{props.state[2]}</span></td>\n                </tr>\n                <tr key=\"Bob Cash\">\n                    <td ><span>Bob Cash</span></td>\n                    <td><span>{props.state[3]}</span></td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nclass CreateTransaction extends React.Component {\n    state = {\n        errors: '',\n        channelId: '',\n        count: '',\n        aliceCash: '',\n        bobCash: '',\n        lastState: localStorage.getItem(this.props.channelId + 'lastState') || null\n    }\n    // [\n    //     \"channelId\",\n    //     \"0\",\n    //     \"AliceCash\",\n    //     \"BobCash\",\n    //     \"Signature\"\n    // ]\n    // const [course, setCourse] = useState({\n    //     channelId: \"\",\n    //     count: \"\",\n    //     AliceCash: \"\",\n    //     BobCash: \"\",\n    //     Signature: \"\"\n    // });\n    // localStorage.setItem(props.channelId + 'lastState', lastState);\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n            console.log(await IsValidSignature(sender, 0, 1, 1, sig))\n            const resp1 = await axios.get('localhost:3000/signature/', {\n                params: {\n                    signature: sig,\n                }\n            });\n            console.log(resp1.data)\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    handleLastChannelState = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n            console.log(await IsValidSignature(sender, 0, 1, 1, sig))\n            const resp1 = await axios.get('localhost:3000/signature/', {\n                params: {\n                    signature: sig,\n                }\n            });\n            console.log(resp1.data)\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h3>Fetch Last Signed state </h3>\n                        <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"channel_id\">Channel Id</label>\n                                <div className=\"field\">\n                                    <input\n                                        id=\"channel_id\"\n                                        onChange={event => this.setState({ channelId: event.target.value })}\n                                        type=\"text\"\n                                        name=\"channel_id\"\n                                        className=\"form-control\"\n                                        value={this.state.channelId}\n                                    />\n                                </div>\n                            </div>\n                            <input type=\"submit\" value=\"Fetch Last Signed State\" className=\"btn btn-primary\" />\n                        </form>\n                        {this.state.lastState && <div className=\"alert alert-danger\"><ShowState state={this.state.lastState} /></div>}\n\n                    </div>\n                    <div className=\"mt-2\" ></div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Count\">Count</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Count\"\n                                    readOnly\n                                    type=\"text\"\n                                    name=\"Count\"\n                                    className=\"form-control\"\n                                    value={this.state.count}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"aliceCash\">Alice Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"aliceCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ aliceCash: event.target.value })}\n                                    name=\"aliceCash\"\n                                    className=\"form-control\"\n                                    value={this.state.aliceCash}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"bobCash\">Bob Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"bobCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ bobCash: event.target.value })}\n                                    name=\"bobCash\"\n                                    className=\"form-control\"\n                                    value={this.state.bobCash}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}