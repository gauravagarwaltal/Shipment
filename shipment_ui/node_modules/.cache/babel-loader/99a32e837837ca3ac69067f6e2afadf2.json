{"ast":null,"code":"import React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\n\nclass ActionConfirmationPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: \"\",\n      offChainState: \"\",\n      value: \"\",\n      operation: \"\",\n      sender: \"\",\n      channels: [],\n      action: ''\n    };\n\n    this.fetchOnChainDetails = async event => {\n      let value = await GetChannelDetails(this.state.channelId);\n      return value;\n    };\n\n    this.fetchOffChainDetails = async event => {\n      let key = this.state.sender + this.state.channelId + '_last_signed_state';\n      let value = localStorage.getItem(key);\n\n      if (value !== null && value !== undefined) {\n        let splitstate = value.split(\"_\");\n        let state_obj = {\n          'Channel Id': splitstate[0],\n          'count': splitstate[1],\n          'Alice Cash': splitstate[2],\n          'Bob Cash': splitstate[3]\n        };\n        console.log(state_obj);\n        return state_obj;\n      }\n\n      return \"No off chain state Found\";\n    };\n\n    this.onActionChange = async event => this.setState({\n      'action': event.target.value\n    });\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': false\n      });\n      console.log(\"this.state.action\", this.state.action);\n\n      if (this.state.action === 'select action' || this.state.action === '') {\n        this.setState({\n          'errors': \"Please select action from drop down\"\n        });\n      } else {\n        let url = \"/waitingChannel/\" + this.state.waitingChannelId;\n        console.log(url); // console.log(this.props);\n\n        this.props.history.push(url);\n        this.props.history.push({\n          pathname: '/actionconfirmation',\n          search: '?query=' + this.state.channelId,\n          state: {\n            channelId: this.state.channelId,\n            action: this.state.action\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        this.setState({\n          'sender': sender\n        });\n        console.log(this.state.sender);\n        let key = this.state.sender + 'active_channel_ids';\n        console.log(this.props.location.state);\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\n;\nexport default ActionConfirmationPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ActionConfirmationPage.js"],"names":["React","GetChannelDetails","IsMyChannel","ManageDetailsView","ChannelList","FetchAccount","ActionList","OnChainStateView","OffChainStateView","ActionConfirmationPage","Component","state","errors","channelId","onChainState","offChainState","value","operation","sender","channels","action","fetchOnChainDetails","event","fetchOffChainDetails","key","localStorage","getItem","undefined","splitstate","split","state_obj","console","log","onActionChange","setState","target","actionHandler","preventDefault","alert","url","waitingChannelId","props","history","push","pathname","search","componentDidMount","then","location","catch","err","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,kCAA/C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;;AAEA,MAAMC,sBAAN,SAAqCT,KAAK,CAACU,SAA3C,CAAqD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,aAAa,EAAE,EAJX;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,SAAS,EAAE,EANP;AAOJC,MAAAA,MAAM,EAAE,EAPJ;AAQJC,MAAAA,QAAQ,EAAE,EARN;AASJC,MAAAA,MAAM,EAAE;AATJ,KADyC;;AAAA,SA4BjDC,mBA5BiD,GA4B3B,MAAOC,KAAP,IAAiB;AACnC,UAAIN,KAAK,GAAG,MAAMf,iBAAiB,CAAC,KAAKU,KAAL,CAAWE,SAAZ,CAAnC;AACA,aAAOG,KAAP;AACH,KA/BgD;;AAAA,SAiCjDO,oBAjCiD,GAiC1B,MAAOD,KAAP,IAAiB;AACpC,UAAIE,GAAG,GAAG,KAAKb,KAAL,CAAWO,MAAX,GAAoB,KAAKP,KAAL,CAAWE,SAA/B,GAA2C,oBAArD;AACA,UAAIG,KAAK,GAAGS,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAZ;;AACA,UAAIR,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKW,SAAhC,EAA2C;AACvC,YAAIC,UAAU,GAAGZ,KAAK,CAACa,KAAN,CAAY,GAAZ,CAAjB;AACA,YAAIC,SAAS,GAAG;AACZ,wBAAcF,UAAU,CAAC,CAAD,CADZ;AAEZ,mBAASA,UAAU,CAAC,CAAD,CAFP;AAGZ,wBAAcA,UAAU,CAAC,CAAD,CAHZ;AAIZ,sBAAYA,UAAU,CAAC,CAAD;AAJV,SAAhB;AAMAG,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,eAAOA,SAAP;AACH;;AACD,aAAO,0BAAP;AACH,KAhDgD;;AAAA,SAkDjDG,cAlDiD,GAkDhC,MAAOX,KAAP,IAAiB,KAAKY,QAAL,CAAc;AAAE,gBAAUZ,KAAK,CAACa,MAAN,CAAanB;AAAzB,KAAd,CAlDe;;AAAA,SAoDjDoB,aApDiD,GAoDjC,MAAOd,KAAP,IAAiB;AAC7BA,MAAAA,KAAK,CAACe,cAAN;;AACA,UAAI,KAAK1B,KAAL,CAAWO,MAAX,KAAsBS,SAAtB,IAAmC,KAAKhB,KAAL,CAAWO,MAAX,KAAsB,IAA7D,EAAmE;AAC/DoB,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;;AACD,WAAKJ,QAAL,CAAc;AAAE,kBAAU;AAAZ,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKrB,KAAL,CAAWS,MAA5C;;AACA,UAAI,KAAKT,KAAL,CAAWS,MAAX,KAAsB,eAAtB,IAAyC,KAAKT,KAAL,CAAWS,MAAX,KAAsB,EAAnE,EAAuE;AACnE,aAAKc,QAAL,CAAc;AAAE,oBAAU;AAAZ,SAAd;AACH,OAFD,MAGK;AACD,YAAIK,GAAG,GAAG,qBAAqB,KAAK5B,KAAL,CAAW6B,gBAA1C;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAFC,CAGD;;AACA,aAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBJ,GAAxB;AACA,aAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAE,qBADU;AAEpBC,UAAAA,MAAM,EAAE,YAAY,KAAKlC,KAAL,CAAWE,SAFX;AAGpBF,UAAAA,KAAK,EAAE;AACHE,YAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SADnB;AAEHO,YAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWS;AAFhB;AAHa,SAAxB;AAQH;AACJ,KA5EgD;AAAA;;AAajD0B,EAAAA,iBAAiB,GAAG;AAChBzC,IAAAA,YAAY,GAAG0C,IAAf,CAAoB7B,MAAM,IAAI;AAC1B,UAAIA,MAAJ,EAAY;AACR,aAAKgB,QAAL,CAAc;AAAE,oBAAUhB;AAAZ,SAAd;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWO,MAAvB;AACA,YAAIM,GAAG,GAAG,KAAKb,KAAL,CAAWO,MAAX,GAAoB,oBAA9B;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWO,QAAX,CAAoBrC,KAAhC;AACH;AAEJ,KARD,EAQGsC,KARH,CAQSC,GAAG,IAAI;AACZZ,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,KAXD;AAYH;;AAqDDC,EAAAA,MAAM,GAAG;AACL,WACI,yCADJ;AAmBH;;AAnGgD;;AAoGpD;AAED,eAAe1C,sBAAf","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { GetChannelDetails, IsMyChannel } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport ChannelList from \"./ChannelList\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport ActionList from \"./ActionList\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\n\nclass ActionConfirmationPage extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: \"\",\n        offChainState: \"\",\n        value: \"\",\n        operation: \"\",\n        sender: \"\",\n        channels: [],\n        action: '',\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n                this.setState({ 'sender': sender })\n                console.log(this.state.sender)\n                let key = this.state.sender + 'active_channel_ids'\n                console.log(this.props.location.state)\n            }\n\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    fetchOnChainDetails = async (event) => {\n        let value = await GetChannelDetails(this.state.channelId)\n        return value;\n    }\n\n    fetchOffChainDetails = async (event) => {\n        let key = this.state.sender + this.state.channelId + '_last_signed_state'\n        let value = localStorage.getItem(key)\n        if (value !== null && value !== undefined) {\n            let splitstate = value.split(\"_\");\n            let state_obj = {\n                'Channel Id': splitstate[0],\n                'count': splitstate[1],\n                'Alice Cash': splitstate[2],\n                'Bob Cash': splitstate[3],\n            }\n            console.log(state_obj)\n            return state_obj\n        }\n        return \"No off chain state Found\"\n    }\n\n    onActionChange = async (event) => this.setState({ 'action': event.target.value });\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': false });\n        console.log(\"this.state.action\", this.state.action)\n        if (this.state.action === 'select action' || this.state.action === '') {\n            this.setState({ 'errors': \"Please select action from drop down\" })\n        }\n        else {\n            let url = \"/waitingChannel/\" + this.state.waitingChannelId\n            console.log(url)\n            // console.log(this.props);\n            this.props.history.push(url);\n            this.props.history.push({\n                pathname: '/actionconfirmation',\n                search: '?query=' + this.state.channelId,\n                state: {\n                    channelId: this.state.channelId,\n                    action: this.state.action\n                }\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                {/* <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        <OnChainStateView details={this.state.onChainState} />\n                    </div>\n                    <div>\n                        <OffChainStateView details={this.state.offChainState} />\n                    </div>\n                    <form id=\"form\" onSubmit={this.actionHandler}>\n                        <ActionList onChange={this.onActionChange} />\n                        {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        <button id=\"button\">check Active Channel Status</button>\n                    </form>\n                </div> */}\n\n            </>\n        );\n    }\n};\n\nexport default ActionConfirmationPage;\n"]},"metadata":{},"sourceType":"module"}