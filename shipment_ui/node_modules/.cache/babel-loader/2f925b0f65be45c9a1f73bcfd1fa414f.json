{"ast":null,"code":"import _slicedToArray from\"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import bg from'./BG.jpeg';import'./App.css';import{BrowserRouter as Router,Route,Switch,Redirect}from\"react-router-dom\";import ConfirmDeposit from'./components/ConfirmDeposit';import ChannelDetailsPage from'./components/ChannelDetailsPage';import{ToastContainer}from'react-toastify';import Header from'./Header';import AboutPage from'./AboutPage';import HomePage from'./HomePage';import NotFoundPage from'./NotFoundPage';import CreateTransaction from'./components/CreateTransaction';var App=function App(){var _useState=useState(window.innerWidth),_useState2=_slicedToArray(_useState,2),windowWidth=_useState2[0],setWindowWidth=_useState2[1];var imageUrl=windowWidth>=650?bg:bg;var handleWindowResize=function handleWindowResize(){setWindowWidth(window.innerWidth);};useEffect(function(){window.addEventListener('resize',handleWindowResize);return function(){window.removeEventListener('resize',handleWindowResize);};});return React.createElement(\"div\",{className:\"container-fluid\",style:{height:window.innerWidth,backgroundImage:\"url(\".concat(imageUrl,\")\")}},React.createElement(ToastContainer,{autoClose:3000,hideProgressBar:true}),React.createElement(Router,null,React.createElement(Header,null),React.createElement(Switch,null,React.createElement(Route,{path:\"/\",exact:true,component:HomePage}),React.createElement(Route,{path:\"/about\",component:AboutPage}),React.createElement(Route,{path:\"/channeldetails\",component:ChannelDetailsPage}),React.createElement(Route,{path:\"/transaction\",component:CreateTransaction}),React.createElement(Redirect,{from:\"/about-page\",to:\"about\"}),React.createElement(Route,{path:\"/confirmdeposit\",component:ConfirmDeposit}),React.createElement(Route,{component:NotFoundPage}))));};export default App;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/App.js"],"names":["React","useEffect","useState","bg","BrowserRouter","Router","Route","Switch","Redirect","ConfirmDeposit","ChannelDetailsPage","ToastContainer","Header","AboutPage","HomePage","NotFoundPage","CreateTransaction","App","window","innerWidth","windowWidth","setWindowWidth","imageUrl","handleWindowResize","addEventListener","removeEventListener","height","backgroundImage"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,EAAP,KAAe,WAAf,CACA,MAAO,WAAP,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,CAAiDC,QAAjD,KAAiE,kBAAjE,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,iCAA/B,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gCAA9B,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACsBf,QAAQ,CAACgB,MAAM,CAACC,UAAR,CAD9B,wCACTC,WADS,eACIC,cADJ,eAEhB,GAAMC,CAAAA,QAAQ,CAAGF,WAAW,EAAI,GAAf,CAAqBjB,EAArB,CAA0BA,EAA3C,CAEA,GAAMoB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BF,cAAc,CAACH,MAAM,CAACC,UAAR,CAAd,CACD,CAFD,CAIAlB,SAAS,CAAC,UAAM,CACdiB,MAAM,CAACM,gBAAP,CAAwB,QAAxB,CAAkCD,kBAAlC,EAEA,MAAO,WAAM,CACXL,MAAM,CAACO,mBAAP,CAA2B,QAA3B,CAAqCF,kBAArC,EACD,CAFD,CAGD,CANQ,CAAT,CAQA,MACE,4BAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAE,CAAEG,MAAM,CAAER,MAAM,CAACC,UAAjB,CAA6BQ,eAAe,eAASL,QAAT,KAA5C,CAAxC,EACE,oBAAC,cAAD,EAAgB,SAAS,CAAE,IAA3B,CAAiC,eAAe,KAAhD,EADF,CAEE,oBAAC,MAAD,MACE,oBAAC,MAAD,MADF,CAEE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAER,QAAjC,EADF,CAGE,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAED,SAAhC,EAHF,CAKE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,SAAS,CAAEH,kBAAzC,EALF,CAME,oBAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,CAA2B,SAAS,CAAEM,iBAAtC,EANF,CAOE,oBAAC,QAAD,EAAU,IAAI,CAAC,aAAf,CAA6B,EAAE,CAAC,OAAhC,EAPF,CAQE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,SAAS,CAAEP,cAAzC,EARF,CAWE,oBAAC,KAAD,EAAO,SAAS,CAAEM,YAAlB,EAXF,CAFF,CAFF,CADF,CAuBD,CAvCD,CAyCA,cAAeE,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport bg from './BG.jpeg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ConfirmDeposit from './components/ConfirmDeposit';\nimport ChannelDetailsPage from './components/ChannelDetailsPage';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './Header';\nimport AboutPage from './AboutPage';\nimport HomePage from './HomePage';\nimport NotFoundPage from './NotFoundPage';\nimport CreateTransaction from './components/CreateTransaction';\n\nconst App = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const imageUrl = windowWidth >= 650 ? bg : bg;\n\n  const handleWindowResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    }\n  });\n\n  return (\n    <div className=\"container-fluid\" style={{ height: window.innerWidth, backgroundImage: `url(${imageUrl})` }}>\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          {/* <Route path=\"/courses\" component={CoursesPage} /> */}\n          <Route path=\"/about\" component={AboutPage} />\n          {/* <Route path=\"/course/:slug\" component={ManageCoursePage} /> */}\n          <Route path=\"/channeldetails\" component={ChannelDetailsPage} />\n          <Route path=\"/transaction\" component={CreateTransaction} />\n          <Redirect from=\"/about-page\" to=\"about\" />\n          <Route path=\"/confirmdeposit\" component={ConfirmDeposit} />\n          {/* <Route path=\"/pending_request\" component={PendingState} /> */}\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n\n    </div>\n  );\n\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}