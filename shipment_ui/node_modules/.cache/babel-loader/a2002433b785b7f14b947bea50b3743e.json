{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CloseChannel.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { IsValidSignature, FetchOtherParty, GetChannelDetails, ChannelClose } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass CloseChannel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      channelId: \"\",\n      onChainState: false,\n      offChainState: false,\n      formFlag: false,\n      sender: \"\"\n    };\n\n    this.handleCloseChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (!this.state.offChainState || this.state.offChainState === 'No off chain state Found') {\n        alert(\"Close Channel needs Off Chain State\", this.state.offChainState);\n      } else {\n        console.log(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig']);\n        let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender);\n        console.log(TheOtherParty);\n        let sig_check = await IsValidSignature(TheOtherParty, this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig']);\n        console.log(sig_check);\n\n        if (sig_check) {\n          console.log(this.state.offChainState['sig']);\n          await ChannelClose(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'], this.state.sender);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender) {\n        if (this.props.location.state.action === 'Close') {\n          GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n            let offChainState = FetchOffChainDetails(sender, this.props.location.state.channelId);\n            this.setState({\n              'sender': sender,\n              'channelId': this.props.location.state.channelId,\n              'offChainState': offChainState,\n              'onChainState': onChainState,\n              'formFlag': true\n            });\n          }).catch(err => {\n            toast.error(\"on chain state issue\");\n            console.log(err);\n          });\n        } else {\n          toast.error(\"go back \");\n        }\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Channel Id: \", this.state.channelId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.onChainState && React.createElement(OnChainStateView, {\n      details: this.state.onChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.offChainState && React.createElement(OffChainStateView, {\n      details: this.state.offChainState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.formFlag && React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleCloseChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Close Channel\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default CloseChannel;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CloseChannel.js"],"names":["React","toast","IsValidSignature","FetchOtherParty","GetChannelDetails","ChannelClose","FetchAccount","OnChainStateView","OffChainStateView","FetchOffChainDetails","CloseChannel","Component","state","errors","channelId","onChainState","offChainState","formFlag","sender","handleCloseChannel","event","preventDefault","setState","alert","console","log","parseInt","TheOtherParty","sig_check","componentDidMount","then","props","location","action","catch","err","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { IsValidSignature, FetchOtherParty, GetChannelDetails, ChannelClose } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"../contract/MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails } from \"../LocalStorage/local_storage_api\";\n\nclass CloseChannel extends React.Component {\n    state = {\n        errors: false,\n        channelId: \"\",\n        onChainState: false,\n        offChainState: false,\n        formFlag: false,\n        sender: \"\",\n    }\n\n    componentDidMount() {\n        FetchAccount().then(sender => {\n            if (sender) {\n\n                if (this.props.location.state.action === 'Close') {\n                    GetChannelDetails(this.props.location.state.channelId).then(onChainState => {\n                        let offChainState = FetchOffChainDetails(sender, this.props.location.state.channelId)\n                        this.setState({\n                            'sender': sender,\n                            'channelId': this.props.location.state.channelId,\n                            'offChainState': offChainState,\n                            'onChainState': onChainState,\n                            'formFlag': true,\n                        })\n                    }).catch(err => {\n                        toast.error(\"on chain state issue\")\n                        console.log(err)\n                    })\n                }\n                else {\n                    toast.error(\"go back \")\n                }\n            }\n        }).catch(err => {\n            alert(\"check metamask connectivity\")\n            console.log(err)\n        })\n    }\n\n    handleCloseChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (!this.state.offChainState || this.state.offChainState === 'No off chain state Found') {\n            alert(\"Close Channel needs Off Chain State\", this.state.offChainState)\n        }\n        else {\n            console.log(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']), parseInt(this.state.offChainState['Bob Cash']),\n                this.state.offChainState['sig'])\n\n            let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender)\n            console.log(TheOtherParty)\n            let sig_check = await IsValidSignature(TheOtherParty, this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']),\n                parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'])\n            console.log(sig_check)\n            if (sig_check) {\n                console.log(this.state.offChainState['sig'])\n                await ChannelClose(this.state.channelId, parseInt(this.state.offChainState['count']), parseInt(this.state.offChainState['Alice Cash']),\n                    parseInt(this.state.offChainState['Bob Cash']), this.state.offChainState['sig'], this.state.sender)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Channel Id: {this.state.channelId}</h2>\n                <div>\n                    <div>\n                        {this.state.onChainState && <OnChainStateView details={this.state.onChainState} />}\n                    </div>\n                    <div>\n                        {this.state.offChainState && <OffChainStateView details={this.state.offChainState} />}\n                    </div>\n                    <div>\n                        {\n                            this.state.formFlag &&\n                            <form id=\"form\" className=\"mt-2\" onSubmit={this.handleCloseChannel}>\n                                {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                                <input type=\"submit\" value=\"Close Channel\" className=\"btn btn-primary\" />\n                            </form>\n                        }\n                    </div>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default CloseChannel;\n"]},"metadata":{},"sourceType":"module"}