{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js\";\nimport React, { useState, useEffect } from \"react\"; // import courseStore from \"../stores/courseStore\";\n\nimport { toast } from \"react-toastify\"; // import * as courseActions from \"../actions/courseActions\";\n\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { ManageDetailsView, RenderObj } from \"./ManageDetailsView\";\n\nconst ChannelDetailsPage = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        details = _useState6[0],\n        setDetails = _useState6[1]; // const [course, setCourse] = useState({\n  //     id: null,\n  //     slug: \"\",\n  //     title: \"\",\n  //     authorId: null,\n  //     category: \"\"\n  // });\n\n\n  function formIsValid() {\n    let _errors = '';\n    if (channelId < 0) _errors = \"Provide Positive Interger Value\";\n    if (channelId === '') _errors = \"Provide Positive Interger Value\";\n    setErrors(_errors); // Form is valid if the errors object has no properties\n\n    return _errors === '';\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    let value = await GetChannelDetails(channelId);\n    setDetails(value);\n    console.log(\"after click \", value);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"channelId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Channel Id\"), React.createElement(\"input\", {\n    id: \"channelId\",\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"channel id(integer value)\",\n    value: channelId,\n    onChange: event => setChannelId(event.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Get Channel Details\")), errors && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, errors), errors === '' && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(RenderObj, {\n    details: details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nexport default ChannelDetailsPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js"],"names":["React","useState","useEffect","toast","GetChannelDetails","ManageDetailsView","RenderObj","ChannelDetailsPage","props","errors","setErrors","channelId","setChannelId","details","setDetails","formIsValid","_errors","handleSubmit","event","preventDefault","value","console","log","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,qBAA7C;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA,oBACJP,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QACzBQ,MADyB;AAAA,QACjBC,SADiB;;AAAA,qBAEET,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEzBU,SAFyB;AAAA,QAEdC,YAFc;;AAAA,qBAGFX,QAAQ,CAAC,EAAD,CAHN;AAAA;AAAA,QAGzBY,OAHyB;AAAA,QAGhBC,UAHgB,kBAIhC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,WAASC,WAAT,GAAuB;AACnB,QAAIC,OAAO,GAAG,EAAd;AAEA,QAAIL,SAAS,GAAG,CAAhB,EAAmBK,OAAO,GAAG,iCAAV;AACnB,QAAIL,SAAS,KAAK,EAAlB,EAAsBK,OAAO,GAAG,iCAAV;AAEtBN,IAAAA,SAAS,CAACM,OAAD,CAAT,CANmB,CAOnB;;AACA,WAAOA,OAAO,KAAK,EAAnB;AACH;;AAED,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAI,CAACJ,WAAW,EAAhB,EAAoB;AACpB,QAAIK,KAAK,GAAG,MAAMhB,iBAAiB,CAACO,SAAD,CAAnC;AACAG,IAAAA,UAAU,CAACM,KAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACH;;AAED,SACI,0CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,EAAE,EAAC,WAAV;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,2BAHhB;AAG4C,IAAA,KAAK,EAAEN,SAHnD;AAII,IAAA,QAAQ,EAAEO,KAAK,IAAIN,YAAY,CAACM,KAAK,CAACK,MAAN,CAAaH,KAAd,CAJnC;AAIyD,IAAA,QAAQ,MAJjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPJ,CADJ,EAUKX,MAAM,IACH;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,MAArC,CAXR,EAaMA,MAAM,KAAK,EAAZ,IACG;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdR,CAHJ,CADJ;AAyBH,CAzDD;;AA2DA,eAAeN,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport { ManageDetailsView, RenderObj } from \"./ManageDetailsView\";\n\nconst ChannelDetailsPage = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    // const [course, setCourse] = useState({\n    //     id: null,\n    //     slug: \"\",\n    //     title: \"\",\n    //     authorId: null,\n    //     category: \"\"\n    // });\n\n\n    function formIsValid() {\n        let _errors = '';\n\n        if (channelId < 0) _errors = \"Provide Positive Interger Value\";\n        if (channelId === '') _errors = \"Provide Positive Interger Value\";\n\n        setErrors(_errors);\n        // Form is valid if the errors object has no properties\n        return _errors === '';\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!formIsValid()) return;\n        let value = await GetChannelDetails(channelId)\n        setDetails(value);\n        console.log(\"after click \", value)\n    }\n\n    return (\n        <>\n\n            <h2>Channel Details</h2>\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"channelId\">Channel Id</label>\n                    <input id=\"channelId\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"channel id(integer value)\" value={channelId}\n                        onChange={event => setChannelId(event.target.value)} required />\n                    <button>Get Channel Details</button>\n                </form>\n                {errors && (\n                    <div className=\"alert alert-danger\">{errors}</div>\n                )}\n                {(errors === '') && (\n                    <div className=\"alert alert-danger\">\n                        <RenderObj details={details} />\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default ChannelDetailsPage;\n"]},"metadata":{},"sourceType":"module"}