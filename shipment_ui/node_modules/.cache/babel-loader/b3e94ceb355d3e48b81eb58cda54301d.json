{"ast":null,"code":"import _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js\";\nimport React, { useState } from \"react\"; // import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\n\nimport { GetChannelDetails, GetReceipt } from \"../contract/contract_transaction\"; // import ManageDetailsView from \"./ManageDetailsView\";\n// import { fetchLastState } from \"../Api/FetchBrowserData\";\n// import ChannelList from \"./ChannelList\";\n\nimport FetchListeningAddr from \"../Api/FetchListeningAddr\"; // import EditFiles from \"../redisApi/PubSub\";\n// import testJSON from \"../redisApi/nodecheck\";\n// import RedisConnection from \"../redisApi/nodecheck\";\n\nconst RedisFunctionalTesting = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        details = _useState6[0],\n        setDetails = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n  const _React$useState = React.useState(JSON.parse(localStorage.getItem(\"PayMentChannels\") || \"[]\")),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        channels = _React$useState2[0],\n        setChannels = _React$useState2[1]; // const [course, setCourse] = useState({\n  //     id: null,\n  //     slug: \"\",\n  //     title: \"\",\n  //     authorId: null,\n  //     category: \"\"\n  // });\n\n\n  async function onChange(event) {\n    event.preventDefault(); // channels.push(value)\n    // alert(channels)\n    // localStorage.setItem('PayMentChannels', JSON.stringify(channels));\n\n    await GetReceipt();\n    await FetchListeningAddr(value); // localStorage.removeItem('Tempchannels')\n  }\n\n  const onValueChange = event => setValue(event.target.value);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setErrors(\"\");\n\n    if (Number.isNaN(parseInt(channelId, 10))) {\n      setErrors(\"Enter Interger channel Id\");\n    } else {\n      let value = await GetChannelDetails(channelId);\n      setDetails(value);\n    }\n  }\n\n  handleConfirmChannel = async event => {\n    event.preventDefault();\n    this.setState({\n      'errors': \"\"\n    });\n\n    if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n      this.setState({\n        'errors': \"Enter Integer amount(in wei unit)\"\n      });\n    } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n      this.setState({\n        'errors': \"Enter Integer amount(in wei unit)\"\n      });\n    } else {\n      let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c';\n      let sender = await FetchAccount();\n      console.log((await IsValidSignature(sender, 0, 1, 1, sig)));\n      const resp1 = await axios.get('localhost:3000/signature/', {\n        params: {\n          signature: sig\n        }\n      });\n      console.log(resp1.data); // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n      // ChannelConfirm(this.state.channelId, this.state.amount)\n    }\n\n    this.setState({\n      'aliceCash': \"\"\n    });\n    this.setState({\n      'bobCash': \"\"\n    });\n  };\n\n  const onOptionChange = event => setChannelId(event.target.value);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Redis functional Testing\")), React.createElement(\"form\", {\n    id: \"form\",\n    className: \"mt-2\",\n    onSubmit: this.handleConfirmChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Count\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"Count\",\n    readOnly: true,\n    type: \"text\",\n    name: \"Count\",\n    className: \"form-control\",\n    value: this.state.lastState[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"aliceCash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Alice Cash\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"aliceCash\",\n    type: \"text\",\n    onChange: event => this.setState({\n      aliceCash: event.target.value\n    }),\n    name: \"aliceCash\",\n    className: \"form-control\",\n    value: this.state.aliceCash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"bobCash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Bob Cash\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"bobCash\",\n    type: \"text\",\n    onChange: event => this.setState({\n      bobCash: event.target.value\n    }),\n    name: \"bobCash\",\n    className: \"form-control\",\n    value: this.state.bobCash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), this.state.errors && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, this.state.errors)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit Transaction\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), errors === '' && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Channel Details of channel id -> \", channelId))));\n};\n\nexport default RedisFunctionalTesting;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/redisApi/RedisFunctionalTesting.js"],"names":["React","useState","GetChannelDetails","GetReceipt","FetchListeningAddr","RedisFunctionalTesting","props","errors","setErrors","channelId","setChannelId","details","setDetails","value","setValue","JSON","parse","localStorage","getItem","channels","setChannels","onChange","event","preventDefault","onValueChange","target","handleSubmit","Number","isNaN","parseInt","handleConfirmChannel","setState","state","aliceCash","bobCash","sig","sender","FetchAccount","console","log","IsValidSignature","resp1","axios","get","params","signature","data","onOptionChange","lastState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails, GetReceipt } from \"../contract/contract_transaction\";\n// import ManageDetailsView from \"./ManageDetailsView\";\n// import { fetchLastState } from \"../Api/FetchBrowserData\";\n// import ChannelList from \"./ChannelList\";\nimport FetchListeningAddr from \"../Api/FetchListeningAddr\";\n// import EditFiles from \"../redisApi/PubSub\";\n// import testJSON from \"../redisApi/nodecheck\";\n// import RedisConnection from \"../redisApi/nodecheck\";\n\nconst RedisFunctionalTesting = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const [channels, setChannels] = React.useState(JSON.parse(localStorage.getItem(\"PayMentChannels\") || \"[]\"));\n    // const [course, setCourse] = useState({\n    //     id: null,\n    //     slug: \"\",\n    //     title: \"\",\n    //     authorId: null,\n    //     category: \"\"\n    // });\n\n    async function onChange(event) {\n        event.preventDefault();\n        // channels.push(value)\n        // alert(channels)\n        // localStorage.setItem('PayMentChannels', JSON.stringify(channels));\n        await GetReceipt()\n        await FetchListeningAddr(value)\n        // localStorage.removeItem('Tempchannels')\n    }\n    const onValueChange = event => setValue(event.target.value);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setErrors(\"\");\n        if (Number.isNaN(parseInt(channelId, 10))) {\n            setErrors(\"Enter Interger channel Id\")\n        }\n        else {\n            let value = await GetChannelDetails(channelId)\n            setDetails(value);\n        }\n    }\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n            console.log(await IsValidSignature(sender, 0, 1, 1, sig))\n            const resp1 = await axios.get('localhost:3000/signature/', {\n                params: {\n                    signature: sig,\n                }\n            });\n            console.log(resp1.data)\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    const onOptionChange = event => setChannelId(event.target.value)\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <div>\n                    <h1>Redis functional Testing</h1>\n                </div>\n                <form id=\"form\" className=\"mt-2\" onSubmit={this.handleConfirmChannel}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"Count\">Count</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"Count\"\n                                readOnly\n                                type=\"text\"\n                                name=\"Count\"\n                                className=\"form-control\"\n                                value={this.state.lastState[1]}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"aliceCash\">Alice Cash</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"aliceCash\"\n                                type=\"text\"\n                                onChange={event => this.setState({ aliceCash: event.target.value })}\n                                name=\"aliceCash\"\n                                className=\"form-control\"\n                                value={this.state.aliceCash}\n                            />\n                        </div>\n                        {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"bobCash\">Bob Cash</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"bobCash\"\n                                type=\"text\"\n                                onChange={event => this.setState({ bobCash: event.target.value })}\n                                name=\"bobCash\"\n                                className=\"form-control\"\n                                value={this.state.bobCash}\n                            />\n                        </div>\n                        {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                    </div>\n                    <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                </form>\n                {(errors === '') && (\n                    <div >\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        {/* <ManageDetailsView details={details} /> */}\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default RedisFunctionalTesting;\n"]},"metadata":{},"sourceType":"module"}