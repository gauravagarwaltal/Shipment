{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js\";\nimport React from \"react\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport FilterEvents from \"../contract/CreateInstance\";\n\nclass FetchContractTxn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sender: \"\",\n      key: '',\n      fetchedEvent: null\n    };\n\n    this.fetchEventFilter = async event => {\n      event.preventDefault();\n      let events = await FilterEvents(this.state.sender);\n      localStorage.setItem(this.state.key, JSON.stringify(events));\n      this.setState({\n        'fetchedEvent': []\n      });\n      events.forEach(element => {\n        console.log(element.event);\n        console.log(element.returnValues);\n        this.state.fetchedEvent.push(element);\n      });\n    };\n\n    this.handlerEvents = async event => {\n      event.preventDefault();\n      /*\n          add handler for each event and add respected click handler with possible cases\n              event EventChannelInitializing(address libSig);\n              event EventInitializing(address addressAlice, address addressBob, uint channel_id);\n              event EventInitialized(uint cashAlice, uint cashBob, uint channel_id);\n              event EventRefunded(uint channel_id);\n              event EventClosing(uint channel_id);\n              event EventClosed(uint channel_id);\n              event EventNotClosed(uint channel_id);\n          */\n    };\n  }\n\n  componentDidMount() {\n    FetchAccount().then(sender => {\n      if (sender !== null || sender !== undefined) {\n        this.setState({\n          'sender': sender\n        });\n        this.setState({\n          'key': this.state.sender + 'contract_events'\n        });\n      }\n    }).catch(err => {\n      alert(\"check metamask connectivity\");\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Event Filter Outcome\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.fetchEventFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Apply Event Filter \")), React.createElement(\"table\", {\n      id: \"table\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Accept State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"State Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Last Signed State\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, JSON.parse(localStorage.getItem(this.state.key)) && Object.keys(JSON.parse(localStorage.getItem(this.state.key))).map(request => {\n      console.log(\"Hello11\", request, this.state.fetchedEvent);\n      return React.createElement(\"tr\", {\n        key: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        onClick: () => this.handlerEvents(this.state.fetchedEvent[request], request),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Accept Request\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, JSON.parse(localStorage.getItem(this.state.key))[request])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Show Last Signed State\")));\n    }))), console.log(\"hello\", this.state.fetchedEvent))));\n  }\n\n}\n\n;\nexport default FetchContractTxn;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/FetchContractTxns.js"],"names":["React","FetchAccount","FilterEvents","FetchContractTxn","Component","state","sender","key","fetchedEvent","fetchEventFilter","event","preventDefault","events","localStorage","setItem","JSON","stringify","setState","forEach","element","console","log","returnValues","push","handlerEvents","componentDidMount","then","undefined","catch","err","alert","render","parse","getItem","Object","keys","map","request"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\nimport FilterEvents from \"../contract/CreateInstance\";\n\n\nclass FetchContractTxn extends React.Component {\n    state = {\n        sender: \"\",\n        key: '',\n        fetchedEvent: null,\n    }\n\n    componentDidMount() {\n\n        FetchAccount().then(sender => {\n            if (sender !== null || sender !== undefined) {\n                this.setState({ 'sender': sender })\n                this.setState({ 'key': this.state.sender + 'contract_events' })\n            }\n\n        })\n            .catch(err => {\n                alert(\"check metamask connectivity\")\n                console.log(err)\n            })\n    }\n\n    fetchEventFilter = async (event) => {\n        event.preventDefault();\n        let events = await FilterEvents(this.state.sender)\n\n        localStorage.setItem(this.state.key, JSON.stringify(events));\n        this.setState({ 'fetchedEvent': [] })\n        events.forEach(element => {\n            console.log(element.event)\n            console.log(element.returnValues)\n            this.state.fetchedEvent.push(element)\n\n        });\n    }\n\n    handlerEvents = async (event) => {\n        event.preventDefault();\n        /*\n            add handler for each event and add respected click handler with possible cases\n                event EventChannelInitializing(address libSig);\n                event EventInitializing(address addressAlice, address addressBob, uint channel_id);\n                event EventInitialized(uint cashAlice, uint cashBob, uint channel_id);\n                event EventRefunded(uint channel_id);\n                event EventClosing(uint channel_id);\n                event EventClosed(uint channel_id);\n                event EventNotClosed(uint channel_id);\n            */\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Event Filter Outcome</h2>\n                <div>\n                    <div>\n                        <p><button onClick={this.fetchEventFilter}>Apply Event Filter </button></p>\n                        <table id=\"table\" className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Accept State</th>\n                                    <th>State Details</th>\n                                    <th>Last Signed State</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n\n                                    JSON.parse(localStorage.getItem(this.state.key)) && Object.keys(JSON.parse(localStorage.getItem(this.state.key))).map(request => {\n                                        console.log(\"Hello11\", request, this.state.fetchedEvent)\n                                        return (\n\n                                            <tr key={request}>\n                                                <td>\n                                                    <button\n                                                        className=\"btn btn-outline-danger\"\n                                                        onClick={() => this.handlerEvents(this.state.fetchedEvent[request], request)}\n                                                    >\n                                                        Accept Request\n                                            </button>\n                                                </td>\n                                                <td><span>{JSON.parse(localStorage.getItem(this.state.key))[request]}</span></td>\n                                                <td>\n                                                    <button className=\"btn btn-outline-danger\"  >\n                                                        Show Last Signed State\n                                                </button>\n                                                </td>\n                                            </tr>\n                                        )\n\n                                    }\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                        {console.log(\"hello\", this.state.fetchedEvent)}\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default FetchContractTxn;\n"]},"metadata":{},"sourceType":"module"}