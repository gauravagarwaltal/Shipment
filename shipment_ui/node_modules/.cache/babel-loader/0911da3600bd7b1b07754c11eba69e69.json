{"ast":null,"code":"import _defineProperty from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gaurava/work/learning/react/shipment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\n\nconst ChannelDetailsPage = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(-1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelId = _useState4[0],\n        setChannelId = _useState4[1];\n\n  const _useState5 = useState(courseStore.getCourses()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        courses = _useState6[0],\n        setCourses = _useState6[1];\n\n  const _useState7 = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        course = _useState8[0],\n        setCourse = _useState8[1]; // useEffect(() => {\n  //     courseStore.addChangeListener(onChange);\n  //     const slug = props.match.params.slug; // from the path `/courses/:slug`\n  //     if (courses.length === 0) {\n  //         courseActions.loadCourses();\n  //     } else if (slug) {\n  //         setCourse(courseStore.getCourseBySlug(slug));\n  //     }\n  //     return () => courseStore.removeChangeListener(onChange);\n  // }, [courses.length, props.match.params.slug]);\n\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({\n    target\n  }) {\n    setCourse(_objectSpread({}, course, {\n      [target.name]: target.value\n    }));\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n    setErrors(_errors); // Form is valid if the errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    GetChannelDetails(channelId); // courseActions.saveCourse(course).then(() => {\n    //     props.history.push(\"/courses\");\n    //     toast.success(\"Course saved.\");\n    // });\n  } // <input\n  //     id={props.id}\n  //     type=\"text\"\n  //     onChange={props.onChange}\n  //     name={props.name}\n  //     className=\"form-control\"\n  //     value={props.value}\n  // />\n\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Channel Details\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"channelId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Channel Id\"), React.createElement(\"input\", {\n    id: \"channelId\",\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"channel id(integer value)\",\n    value: this.state.count,\n    onChange: event => this.setState({\n      count: event.target.value\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Get Channel Details\")), props.errors.authorId && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.errors.authorId)));\n};\n\nexport default ChannelDetailsPage;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/ChannelDetailsPage.js"],"names":["React","useState","useEffect","courseStore","toast","courseActions","GetChannelDetails","ChannelDetailsPage","props","errors","setErrors","channelId","setChannelId","getCourses","courses","setCourses","id","slug","title","authorId","category","course","setCourse","onChange","handleChange","target","name","value","formIsValid","_errors","Object","keys","length","handleSubmit","event","preventDefault","state","count","setState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\n\nconst ChannelDetailsPage = props => {\n    const [errors, setErrors] = useState({});\n    const [channelId, setChannelId] = useState(-1);\n    const [courses, setCourses] = useState(courseStore.getCourses());\n    const [course, setCourse] = useState({\n        id: null,\n        slug: \"\",\n        title: \"\",\n        authorId: null,\n        category: \"\"\n    });\n\n    // useEffect(() => {\n    //     courseStore.addChangeListener(onChange);\n    //     const slug = props.match.params.slug; // from the path `/courses/:slug`\n    //     if (courses.length === 0) {\n    //         courseActions.loadCourses();\n    //     } else if (slug) {\n    //         setCourse(courseStore.getCourseBySlug(slug));\n    //     }\n    //     return () => courseStore.removeChangeListener(onChange);\n    // }, [courses.length, props.match.params.slug]);\n\n    function onChange() {\n        setCourses(courseStore.getCourses());\n    }\n\n    function handleChange({ target }) {\n        setCourse({\n            ...course,\n            [target.name]: target.value\n        });\n    }\n\n    function formIsValid() {\n        const _errors = {};\n\n        if (!course.title) _errors.title = \"Title is required\";\n        if (!course.authorId) _errors.authorId = \"Author ID is required\";\n        if (!course.category) _errors.category = \"Category is required\";\n\n        setErrors(_errors);\n        // Form is valid if the errors object has no properties\n        return Object.keys(_errors).length === 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (!formIsValid()) return;\n        GetChannelDetails(channelId);\n        // courseActions.saveCourse(course).then(() => {\n        //     props.history.push(\"/courses\");\n        //     toast.success(\"Course saved.\");\n        // });\n    }\n\n    // <input\n    //     id={props.id}\n    //     type=\"text\"\n    //     onChange={props.onChange}\n    //     name={props.name}\n    //     className=\"form-control\"\n    //     value={props.value}\n    // />\n\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"channelId\">Channel Id</label>\n                    <input id=\"channelId\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"channel id(integer value)\" value={this.state.count}\n                        onChange={event => this.setState({ count: event.target.value })} required />\n                    <button>Get Channel Details</button>\n                </form>\n                {props.errors.authorId && (\n                    <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default ChannelDetailsPage;\n"]},"metadata":{},"sourceType":"module"}