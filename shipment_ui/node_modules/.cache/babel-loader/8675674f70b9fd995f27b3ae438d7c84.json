{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/AddNewUser.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { web3 } from \"../contract/MetaMaskFetch\";\n\nclass AddNewUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      name: '',\n      address: '',\n      category: 'default'\n    };\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': false\n      });\n      console.log(\"this.state.action\", this.state.action);\n\n      if (this.state.action === 'select action' || this.state.action === '') {\n        this.setState({\n          'errors': \"Please select action from drop down\"\n        });\n      } else {\n        let url = \"/waitingChannel/\" + this.state.waitingChannelId;\n        console.log(url); // console.log(this.props);\n\n        this.props.history.push(url);\n        this.props.history.push({\n          pathname: '/actionconfirmation',\n          search: '?query=' + this.state.channelId,\n          state: {\n            channelId: this.state.channelId,\n            action: this.state.action\n          }\n        });\n      }\n    };\n\n    this.handleAddNewUser = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (!web3.utils.checkAddressChecksum(this.state.address)) {\n        this.setState({\n          'errors': \"provide checksum Address\"\n        });\n      } else if (this.state.sender === '') {\n        this.setState({\n          'errors': \"Enter user name\"\n        });\n      } else {\n        let key = 'user_accounts';\n        let user_accounts = JSON.parse(localStorage.getItem(key) || \"{}\");\n\n        if (this.state.address in user_accounts) {\n          this.setState({\n            'errors': \"name already exists in database\"\n          });\n          toast.error(\"Address Already exists\");\n          this.props.navigation();\n        } else {\n          let value = [this.state.name, this.state.category];\n          user_accounts[this.state.address] = value;\n          toast.success(\"account added\");\n          localStorage.setItem(key, JSON.stringify(user_accounts));\n          this.props.navigation();\n        }\n      }\n\n      this.setState({\n        'name': \"\",\n        'address': \"\",\n        'category': \"default\"\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleAddNewUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Name\",\n      type: \"text\",\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      name: \"Name\",\n      className: \"form-control\",\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"address\",\n      type: \"text\",\n      onChange: event => this.setState({\n        address: event.target.value\n      }),\n      name: \"address\",\n      className: \"form-control\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"category\",\n      type: \"text\",\n      onChange: event => this.setState({\n        category: event.target.value\n      }),\n      name: \"category\",\n      className: \"form-control\",\n      value: this.state.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add User\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default AddNewUser;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/AddNewUser.js"],"names":["React","toast","web3","AddNewUser","Component","state","errors","name","address","category","actionHandler","event","preventDefault","sender","undefined","alert","setState","console","log","action","url","waitingChannelId","props","history","push","pathname","search","channelId","handleAddNewUser","utils","checkAddressChecksum","key","user_accounts","JSON","parse","localStorage","getItem","error","navigation","value","success","setItem","stringify","componentDidMount","render","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { web3 } from \"../contract/MetaMaskFetch\";\n\nclass AddNewUser extends React.Component {\n    state = {\n        errors: false,\n        name: '',\n        address: '',\n        category: 'default',\n    }\n\n    componentDidMount() {\n    }\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': false });\n        console.log(\"this.state.action\", this.state.action)\n        if (this.state.action === 'select action' || this.state.action === '') {\n            this.setState({ 'errors': \"Please select action from drop down\" })\n        }\n        else {\n            let url = \"/waitingChannel/\" + this.state.waitingChannelId\n            console.log(url)\n            // console.log(this.props);\n            this.props.history.push(url);\n            this.props.history.push({\n                pathname: '/actionconfirmation',\n                search: '?query=' + this.state.channelId,\n                state: {\n                    channelId: this.state.channelId,\n                    action: this.state.action\n                }\n            })\n        }\n    }\n\n    handleAddNewUser = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (!web3.utils.checkAddressChecksum(this.state.address)) {\n            this.setState({ 'errors': \"provide checksum Address\" })\n        }\n        else if (this.state.sender === '') {\n            this.setState({ 'errors': \"Enter user name\" })\n        }\n        else {\n            let key = 'user_accounts'\n            let user_accounts = JSON.parse(localStorage.getItem(key) || \"{}\")\n            if (this.state.address in user_accounts) {\n                this.setState({ 'errors': \"name already exists in database\" })\n                toast.error(\"Address Already exists\")\n                this.props.navigation();\n            }\n            else {\n                let value = [this.state.name, this.state.category]\n                user_accounts[this.state.address] = value\n                toast.success(\"account added\")\n                localStorage.setItem(key, JSON.stringify(user_accounts))\n                this.props.navigation();\n            }\n        }\n        this.setState({\n            'name': \"\",\n            'address': \"\",\n            'category': \"default\",\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleAddNewUser}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Name\">Name</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Name\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ name: event.target.value })}\n                                    name=\"Name\"\n                                    className=\"form-control\"\n                                    value={this.state.name}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">Address</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"address\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ address: event.target.value })}\n                                    name=\"address\"\n                                    className=\"form-control\"\n                                    value={this.state.address}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"category\">Category</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"category\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ category: event.target.value })}\n                                    name=\"category\"\n                                    className=\"form-control\"\n                                    value={this.state.category}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Add User\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default AddNewUser;\n"]},"metadata":{},"sourceType":"module"}