{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nclass CreateTransaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: '',\n      channelId: '',\n      aliceCash: '',\n      bobCash: '',\n      lastState: localStorage.getItem(this.props.channelId + 'lastState') || [\"channelId\", \"count\", \"AliceCash\", \"BobCash\", \"Signature\"]\n    };\n\n    this.onChange = async event => this.setState({\n      'lastState': event.target.value\n    });\n\n    this.handleConfirmChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': \"\"\n      });\n\n      if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n        this.setState({\n          'channelIdError': \"Enter Interger channel Id\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'amountError': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        alert(\"all good\"); // ChannelConfirm(this.state.channelId, this.state.amount)\n      }\n\n      this.setState({\n        'channelId': \"\"\n      });\n      this.setState({\n        'amount': \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Channel Details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Hello React with Local Storage!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.lastState)), React.createElement(\"form\", {\n      onSubmit: this.handleConfirmChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Count\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Count\",\n      type: \"text\",\n      name: \"Count\",\n      className: \"form-control\",\n      value: this.state.lastState[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"aliceCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Alice Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"aliceCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        aliceCash: event.target.value\n      }),\n      name: \"aliceCash\",\n      className: \"form-control\",\n      value: this.state.aliceCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"bobCash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Bob Cash\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"bobCash\",\n      type: \"text\",\n      onChange: event => this.setState({\n        bobCash: event.target.value\n      }),\n      name: \"bobCash\",\n      className: \"form-control\",\n      value: this.state.bobCash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Deposit Amount\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default CreateTransaction;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/CreateTransaction.js"],"names":["React","CreateTransaction","Component","state","errors","channelId","aliceCash","bobCash","lastState","localStorage","getItem","props","onChange","event","setState","target","value","handleConfirmChannel","preventDefault","Number","isNaN","parseInt","alert","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\n\nclass CreateTransaction extends React.Component {\n    state = {\n        errors: '',\n        channelId: '',\n        aliceCash: '',\n        bobCash: '',\n        lastState: localStorage.getItem(this.props.channelId + 'lastState') || [\n            \"channelId\",\n            \"count\",\n            \"AliceCash\",\n            \"BobCash\",\n            \"Signature\"\n        ]\n    }\n\n    // const [course, setCourse] = useState({\n    //     channelId: \"\",\n    //     count: \"\",\n    //     AliceCash: \"\",\n    //     BobCash: \"\",\n    //     Signature: \"\"\n    // });\n    // localStorage.setItem(props.channelId + 'lastState', lastState);\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            alert(\"all good\")\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'channelId': \"\" })\n        this.setState({ 'amount': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h1>Hello React with Local Storage!</h1>\n                        <p>{this.state.lastState}</p>\n                    </div>\n                    <form onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Count\">Count</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Count\"\n                                    type=\"text\"\n                                    name=\"Count\"\n                                    className=\"form-control\"\n                                    value={this.state.lastState[1]}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"aliceCash\">Alice Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"aliceCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ aliceCash: event.target.value })}\n                                    name=\"aliceCash\"\n                                    className=\"form-control\"\n                                    value={this.state.aliceCash}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"bobCash\">Bob Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"bobCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ bobCash: event.target.value })}\n                                    name=\"bobCash\"\n                                    className=\"form-control\"\n                                    value={this.state.bobCash}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                    </form>\n\n\n\n                    {/* <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"channelId\">Channel Id</label>\n                    <input id=\"channelId\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"channel id(integer value)\" value={channelId}\n                        onChange={event => setChannelId(event.target.value)} required />\n                    <button>Get Channel Details</button>\n                </form>\n                {errors && (\n                    <div className=\"alert alert-danger\">{errors}</div>\n                )}\n                {(errors === '') && (\n                    <div className=\"alert alert-danger\">\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        <ManageDetailsView details={details} />\n                    </div>\n                )} */}\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}