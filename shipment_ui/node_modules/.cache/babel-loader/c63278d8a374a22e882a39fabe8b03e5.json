{"ast":null,"code":"var _jsxFileName = \"/home/gaurava/work/learning/react/shipment/src/components/AddNewUser.js\";\nimport React from \"react\"; // import { toast } from \"react-toastify\";\n\nimport { IsValidSignature, FetchOtherParty } from \"../contract/contract_transaction\";\nimport { web3 } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails, MakeStringState } from \"../LocalStorage/local_storage_api\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { SetRequest } from \"../redisApi/GetSetData\";\nimport STATE_TYPE from \"../RequestType\";\n\nclass AddNewUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: false,\n      name: '',\n      address: '',\n      category: 'default'\n    };\n\n    this.actionHandler = async event => {\n      event.preventDefault();\n\n      if (this.state.sender === undefined || this.state.sender === null) {\n        alert(\"Check MetaMask Connectivity\");\n      }\n\n      this.setState({\n        'errors': false\n      });\n      console.log(\"this.state.action\", this.state.action);\n\n      if (this.state.action === 'select action' || this.state.action === '') {\n        this.setState({\n          'errors': \"Please select action from drop down\"\n        });\n      } else {\n        let url = \"/waitingChannel/\" + this.state.waitingChannelId;\n        console.log(url); // console.log(this.props);\n\n        this.props.history.push(url);\n        this.props.history.push({\n          pathname: '/actionconfirmation',\n          search: '?query=' + this.state.channelId,\n          state: {\n            channelId: this.state.channelId,\n            action: this.state.action\n          }\n        });\n      }\n    };\n\n    this.handleAddNewUser = async event => {\n      event.preventDefault();\n      this.setState({\n        'errors': false\n      });\n\n      if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n        this.setState({\n          'errors': \"Enter Integer amount(in wei unit)\"\n        });\n      } else {\n        let total_money = parseInt(this.state.offChainState['Alice Cash']) + parseInt(this.state.offChainState['Bob Cash']);\n\n        if (total_money === parseInt(this.state.aliceCash) + parseInt(this.state.bobCash)) {\n          let sig = await GenerateSignatures(this.state.channelId, parseInt(this.state.offChainState['count']) + 1, parseInt(this.state.aliceCash), parseInt(this.state.bobCash)); // console.log(sig)\n          // let sender = await FetchAccount()\n\n          await IsValidSignature(this.state.sender, this.state.channelId, parseInt(this.state.offChainState['count']) + 1, parseInt(this.state.aliceCash), parseInt(this.state.bobCash), sig); // localStorage.setItem(sender + this.state.channelId + 'lastState', JSON.stringify(this.state.lastState));\n\n          let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender);\n          let stringifyState = MakeStringState(this.state.channelId, parseInt(this.state.offChainState['count']) + 1, this.state.aliceCash, this.state.bobCash, sig);\n          let response = await SetRequest(TheOtherParty, STATE_TYPE.Request, stringifyState);\n          console.log(\"hello \", response);\n        } else {\n          this.setState({\n            'errors': \"total money is not equals to channel locked money\"\n          });\n        }\n      }\n\n      this.setState({\n        'aliceCash': \"\"\n      });\n      this.setState({\n        'bobCash': \"\"\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      className: \"mt-2\",\n      onSubmit: this.handleAddNewUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Name\",\n      type: \"text\",\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      name: \"Name\",\n      className: \"form-control\",\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"address\",\n      type: \"text\",\n      onChange: event => this.setState({\n        address: event.target.value\n      }),\n      name: \"address\",\n      className: \"form-control\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"category\",\n      type: \"text\",\n      onChange: event => this.setState({\n        category: event.target.value\n      }),\n      name: \"category\",\n      className: \"form-control\",\n      value: this.state.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.errors)), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add User\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default AddNewUser;","map":{"version":3,"sources":["/home/gaurava/work/learning/react/shipment/src/components/AddNewUser.js"],"names":["React","IsValidSignature","FetchOtherParty","web3","OnChainStateView","OffChainStateView","FetchOffChainDetails","MakeStringState","GenerateSignatures","SetRequest","STATE_TYPE","AddNewUser","Component","state","errors","name","address","category","actionHandler","event","preventDefault","sender","undefined","alert","setState","console","log","action","url","waitingChannelId","props","history","push","pathname","search","channelId","handleAddNewUser","Number","isNaN","parseInt","aliceCash","bobCash","total_money","offChainState","sig","TheOtherParty","stringifyState","response","Request","componentDidMount","render","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { toast } from \"react-toastify\";\nimport { IsValidSignature, FetchOtherParty } from \"../contract/contract_transaction\";\nimport { web3 } from \"./MetaMaskFetch\";\nimport OnChainStateView from \"./OnChainStateView\";\nimport OffChainStateView from \"./OffChainState\";\nimport { FetchOffChainDetails, MakeStringState } from \"../LocalStorage/local_storage_api\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { SetRequest } from \"../redisApi/GetSetData\";\nimport STATE_TYPE from \"../RequestType\";\n\nclass AddNewUser extends React.Component {\n    state = {\n        errors: false,\n        name: '',\n        address: '',\n        category: 'default',\n    }\n\n    componentDidMount() {\n    }\n\n    actionHandler = async (event) => {\n        event.preventDefault();\n        if (this.state.sender === undefined || this.state.sender === null) {\n            alert(\"Check MetaMask Connectivity\")\n        }\n        this.setState({ 'errors': false });\n        console.log(\"this.state.action\", this.state.action)\n        if (this.state.action === 'select action' || this.state.action === '') {\n            this.setState({ 'errors': \"Please select action from drop down\" })\n        }\n        else {\n            let url = \"/waitingChannel/\" + this.state.waitingChannelId\n            console.log(url)\n            // console.log(this.props);\n            this.props.history.push(url);\n            this.props.history.push({\n                pathname: '/actionconfirmation',\n                search: '?query=' + this.state.channelId,\n                state: {\n                    channelId: this.state.channelId,\n                    action: this.state.action\n                }\n            })\n        }\n    }\n\n    handleAddNewUser = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': false })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let total_money = parseInt(this.state.offChainState['Alice Cash']) + parseInt(this.state.offChainState['Bob Cash'])\n            if (total_money === (parseInt(this.state.aliceCash) + parseInt(this.state.bobCash))) {\n                let sig = await GenerateSignatures(this.state.channelId, parseInt(this.state.offChainState['count']) + 1, parseInt(this.state.aliceCash), parseInt(this.state.bobCash))\n                // console.log(sig)\n                // let sender = await FetchAccount()\n                await IsValidSignature(this.state.sender, this.state.channelId, parseInt(this.state.offChainState['count']) + 1, parseInt(this.state.aliceCash), parseInt(this.state.bobCash), sig)\n\n                // localStorage.setItem(sender + this.state.channelId + 'lastState', JSON.stringify(this.state.lastState));\n                let TheOtherParty = await FetchOtherParty(this.state.channelId, this.state.sender)\n                let stringifyState = MakeStringState(this.state.channelId, parseInt(this.state.offChainState['count']) + 1, this.state.aliceCash, this.state.bobCash, sig)\n                let response = await SetRequest(TheOtherParty, STATE_TYPE.Request, stringifyState)\n                console.log(\"hello \", response)\n\n            }\n            else {\n                this.setState({ 'errors': \"total money is not equals to channel locked money\" })\n            }\n\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <form id=\"form\" className=\"mt-2\" onSubmit={this.handleAddNewUser}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Name\">Name</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Name\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ name: event.target.value })}\n                                    name=\"Name\"\n                                    className=\"form-control\"\n                                    value={this.state.name}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">Address</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"address\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ address: event.target.value })}\n                                    name=\"address\"\n                                    className=\"form-control\"\n                                    value={this.state.address}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"category\">Category</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"category\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ category: event.target.value })}\n                                    name=\"category\"\n                                    className=\"form-control\"\n                                    value={this.state.category}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Add User\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n\n            </>\n        );\n    }\n};\n\nexport default AddNewUser;\n"]},"metadata":{},"sourceType":"module"}