{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","components/MetaMaskFetch.js","contract/contract_transaction.js","components/ConfirmDeposit.js","components/ManageDetailsView.js","Api/FetchBrowserData.js","components/ChannelList.js","Api/FetchListeningAddr.js","components/ChannelDetailsPage.js","Header.js","AboutPage.js","components/UserList.js","HomePage.js","NotFoundPage.js","contract/CreateSignature.js","components/CreateTransaction.js","App.js","serviceWorker.js","index.js","mockData/mockUsers.js","BG.jpeg","contract/contract_config.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","web3","Web3","givenProvider","FetchAccount","a","eth","getAccounts","accounts","console","log","require","sideChainContract","Contract","contract_abi","contract_address","GetChannelDetails","channelId","methods","getChannel","call","details","details_div","String","ChannelExists","test","CreateNewChannel","theOtherParty","sender","utils","checkAddressChecksum","openChannel","toChecksumAddress","send","from","gas","txHash","transactionHash","ChannelConfirm","cash","toast","error","confirm","value","toHex","toWei","success","IsValidSignature","addr","count","sender_balance","recipient_balance","signature","isValidSignature","flag","ConfirmDeposit","state","channelIdError","amount","amountError","handleConfirmChannel","event","preventDefault","setState","Number","isNaN","parseInt","onSubmit","this","className","htmlFor","type","onChange","target","name","React","Component","RenderObj","props","Object","map","priKey","isInteger","key","ManageDetailsView","fetchLastState","localStorage","getItem","ChannelList","countries","JSON","parse","countriesList","length","item","pub_addr","Users","each","address","listen","FetchListeningAddr","ChannelDetailsPage","useState","errors","setErrors","setChannelId","setDetails","setValue","channels","onClick","Header","activeStyle","color","exact","to","AboutPage","UserList","users","user","rand","Math","floor","random","createNewChannel","then","category","HomePage","NotFoundPage","GenerateSignatures","axios","CreateTransaction","aliceCash","bobCash","lastState","sig","get","params","resp1","data","readOnly","App","window","innerWidth","setWindowWidth","imageUrl","bg","handleWindowResize","useEffect","addEventListener","removeEventListener","style","height","backgroundImage","autoClose","hideProgressBar","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PrivateKey"],"mappings":"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","file":"static/js/main.ec1cefcc.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 339;","// import React, { Component } from 'react'\nimport Web3 from 'web3'\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\nconst FetchAccount = async () => {\n    let accounts = await web3.eth.getAccounts()\n    console.log(accounts[0])\n    return accounts[0]\n}\n\n// class MetaMaskFetch extends Component {\n//     componentWillMount() {\n//         this.loadBlockchainData()\n//     }\n\n//     async loadBlockchainData() {\n//         const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n//         const accounts = await web3.eth.getAccounts()\n//         this.setState({ account: accounts[0] })\n//     }\n\n//     constructor(props) {\n//         super(props)\n//         this.state = { account: '' }\n//     }\n\n//     render() {\n//         return (\n//             <div className=\"container\">\n//                 <h1>Hello, World!</h1>\n//                 <p>Your account: {this.state.account}</p>\n//             </div>\n//         );\n//     }\n// }\n\nexport { web3, FetchAccount };","import { contract_address, contract_abi } from \"./contract_config\";\n// import { Web3 } from \"web3\";\n// import { aliceAddress } from \"./wallet\";\nimport { FetchAccount } from '../components/MetaMaskFetch';\nimport { toast } from 'react-toastify';\n\nconst Web3 = require('web3')\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\nconst sideChainContract = new web3.eth.Contract(contract_abi, contract_address)\n\nconst GetChannelDetails = async (channelId) => {\n    try {\n        var details = await sideChainContract.methods.getChannel(channelId).call()\n        let details_div = {\n            'Alice Id': details['alice']['id'],\n            'Alice Cash': details['alice']['cash'],\n            'Alice Input Flag': String(details['alice']['waitForInput']),\n            'Bob Id': details['bob']['id'],\n            'Bob Cash': details['bob']['cash'],\n            'Bob Input Flag': String(details['bob']['waitForInput']),\n            'Timeout': details['timeout'],\n            'Status': details['status'],\n            'Published Tx Count': details['publish_tx_count'],\n            'Money': details['money']\n        }\n        return details_div;\n    } catch (error) {\n        console.log(\"contract details are tempered or connectivity issue\")\n        console.log(error)\n    }\n}\n\nconst ChannelExists = async (channelId) => {\n    let details = await GetChannelDetails(channelId)\n    return /^0x0+$/.test(details['Alice Id']);\n}\n\nconst CreateNewChannel = async (channelId, theOtherParty) => {\n    const sender = await FetchAccount()\n    console.log(sender, web3.utils.checkAddressChecksum(sender))\n    try {\n        var txHash = await sideChainContract.methods.openChannel(channelId, web3.utils.toChecksumAddress(theOtherParty))\n            .send({ from: web3.utils.toChecksumAddress(sender), gas: 200000 })\n        console.log('new channel created, txHash->', txHash.transactionHash);\n    } catch (error) {\n        console.log(\"Open Channel request reverted\")\n        console.log(error)\n    }\n}\n\nconst ChannelConfirm = async (channelId, cash) => {\n    try {\n        const sender = await FetchAccount()\n        let flag = await ChannelExists(channelId)\n        if (flag) {\n            toast.error(`Channel with ${channelId} doesn't exists`)\n        } else {\n            var txHash = await sideChainContract.methods.confirm(channelId)\n                .send({ from: web3.utils.toChecksumAddress(sender), value: web3.utils.toHex(web3.utils.toWei(cash, 'gwei')), gas: 200000 })\n            console.log('Channel Deposit Confirmed. txHash-> ', txHash.transactionHash);\n            toast.success(\"Deposit confirmed\")\n        }\n    } catch (error) {\n        console.log(\"Channel Deposit request reverted\")\n        console.log(error)\n        toast.error(`Deposit Declined for Channel Id ${channelId}`)\n    }\n}\n\nconst ChannelRefund = async (channelId, self) => {\n    try {\n        var txHash = await sideChainContract.methods.refund(channelId)\n            .send({ from: web3.utils.toChecksumAddress(self), gas: 200000 })\n        console.log('Channel Refund Confirmed. txHash-> ', txHash.transactionHash);\n    } catch (error) {\n        console.log(\"Channel Refund request reverted\")\n        console.log(error)\n    }\n}\n\nconst IsValidSignature = async (addr, count, sender_balance, recipient_balance, signature) => {\n    try {\n        addr = web3.utils.toChecksumAddress(addr)\n        var flag = await sideChainContract.methods.isValidSignature(addr, count, sender_balance, recipient_balance, signature).call()\n        console.log('isValidSignature ', flag);\n    } catch (error) {\n        console.log(\"contract details are tempered or connectivity issue or invalid arguments passed\")\n        console.log(error)\n    }\n}\n\nconst ChannelFinalizeClose = async (channelId, self) => {\n    try {\n        var txHash = await sideChainContract.methods.finalizeClose(channelId)\n            .send({ from: web3.utils.toChecksumAddress(self), gas: 200000 })\n        console.log('Channel Closed. txHash-> ', txHash.transactionHash);\n    } catch (error) {\n        console.log(\"Channel finalizeClose request reverted\")\n        console.log(error)\n    }\n}\n\nconst ChannelClose = async (channel_id, count, sender_balance, recipient_balance, signature, self) => {\n    try {\n        var txHash = await sideChainContract.methods.close(channel_id, count, sender_balance, recipient_balance, signature)\n            .send({ from: web3.utils.toChecksumAddress(self), gas: 200000 })\n        console.log('Channel Close request proceed. txHash-> ', txHash.transactionHash);\n    } catch (error) {\n        console.log(\"Channel Closed request reverted\")\n        console.log(error)\n    }\n}\n\n\nexport { GetChannelDetails, ChannelExists, CreateNewChannel, ChannelConfirm, ChannelRefund, IsValidSignature, ChannelFinalizeClose, ChannelClose }","import React from 'react';\nimport { ChannelConfirm } from '../contract/contract_transaction';\n// import { toast } from 'react-toastify'\n\nclass ConfirmDeposit extends React.Component {\n    state = {\n        channelId: \"\",\n        channelIdError: \"\",\n        amount: '',\n        amountError: \"\",\n    };\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'channelIdError': \"\" })\n        this.setState({ 'amountError': \"\" })\n        if (Number.isNaN(parseInt(this.state.channelId, 10))) {\n            this.setState({ 'channelIdError': \"Enter Interger channel Id\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.amount, 10))) {\n            this.setState({ 'amountError': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'channelId': \"\" })\n        this.setState({ 'amount': \"\" })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleConfirmChannel}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"channelId\"\n                                type=\"text\"\n                                onChange={event => this.setState({ channelId: event.target.value })}\n                                name=\"channelId\"\n                                className=\"form-control\"\n                                value={this.state.channelId}\n                            />\n                        </div>\n                        {this.state.channelIdError && <div className=\"alert alert-danger\">{this.state.channelIdError}</div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <div className=\"field\">\n                            <input\n                                id=\"amount\"\n                                type=\"text\"\n                                onChange={event => this.setState({ amount: event.target.value })}\n                                name=\"amount\"\n                                className=\"form-control\"\n                                value={this.state.amount}\n                            />\n                        </div>\n                        {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>}\n                    </div>\n                    <input type=\"submit\" value=\"Deposit Amount\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default ConfirmDeposit;","import React from \"react\"\nimport './ManageDetailsView.css'\nfunction RenderObj(props) {\n    return (\n        <tbody>\n            {\n                Object.keys(props.details).map(priKey => {\n                    if (!Number.isInteger(parseInt(priKey, 10))) {\n                        return (\n                            <tr key={priKey}>\n                                <td >\n                                    <span>{priKey}</span>\n                                </td>\n                                <td>\n                                    <span>{props.details[priKey]}</span>\n                                </td>\n                            </tr>\n                        )\n\n                    }\n                }\n                )\n            }\n        </tbody>\n    )\n}\n\nfunction ManageDetailsView(props) {\n\n    return (\n        <div>\n            <table id=\"table\" className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>value</th>\n                    </tr>\n                </thead>\n                <RenderObj details={props.details} />\n            </table>\n        </div>\n    )\n}\n\nexport default ManageDetailsView;\n\n// if (!Number.isInteger(parseInt(priKey, 10))) {\n//     if (typeof props.details[priKey] === 'object') {\n//         Object.keys(props.details[priKey]).forEach(secKey => {\n//             if (!Number.isInteger(parseInt(secKey, 10))) {\n//                 console.log(`key: ${secKey}, value: ${props.details[priKey][secKey]}`)\n//             }\n//         }\n//         )\n//     }\n//     else {\n//         console.log(`key: ${priKey}, value: ${props.details[priKey]}`)\n//     }\n// }","const fetchLastState = async (channelId) => {\n    try {\n        console.log(localStorage.getItem(channelId))\n    } catch (error) {\n        console.log(\"contract details are tempered or connectivity issue\")\n        console.log(error)\n    }\n}\n\n\n\nexport { fetchLastState };","import React from 'react';\n\nclass ChannelList extends React.Component {\n    render() {\n        const countries = JSON.parse(localStorage.getItem(\"PayMentChannels\") || \"[]\")\n        console.log(countries)\n        let countriesList = countries.length > 0\n            && countries.map((item) => {\n                return (\n                    <option key={item} value={item}>{item}</option>\n                )\n            }, this);\n\n        return (\n            <div>\n                <select id=\"channelId\" onChange={this.props.onChange}>\n                    {countriesList}\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default ChannelList;","import { Users } from \"../mockData/mockUsers\";\n\nasync function FetchListeningAddr(pub_addr) {\n\n    Users.map(each => {\n        if (each.address === pub_addr) {\n            // console.log(each)\n            return each.listen\n        }\n    })\n    return null\n}\n\nexport default FetchListeningAddr; ","import React, { useState } from \"react\";\n// import courseStore from \"../stores/courseStore\";\n// import { toast } from \"react-toastify\";\n// import * as courseActions from \"../actions/courseActions\";\nimport { GetChannelDetails } from \"../contract/contract_transaction\";\nimport ManageDetailsView from \"./ManageDetailsView\";\nimport { fetchLastState } from \"../Api/FetchBrowserData\";\nimport ChannelList from \"./ChannelList\";\nimport FetchListeningAddr from \"../Api/FetchListeningAddr\";\n\nconst ChannelDetailsPage = props => {\n    const [errors, setErrors] = useState(false);\n    const [channelId, setChannelId] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const [channels, setChannels] = React.useState(JSON.parse(localStorage.getItem(\"PayMentChannels\") || \"[]\"));\n    // const [course, setCourse] = useState({\n    //     id: null,\n    //     slug: \"\",\n    //     title: \"\",\n    //     authorId: null,\n    //     category: \"\"\n    // });\n\n    async function onChange(event) {\n        event.preventDefault();\n        // channels.push(value)\n        // alert(channels)\n        // localStorage.setItem('PayMentChannels', JSON.stringify(channels));\n        await FetchListeningAddr(value)\n        // localStorage.removeItem('Tempchannels')\n    }\n    const onValueChange = event => setValue(event.target.value);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setErrors(\"\");\n        if (Number.isNaN(parseInt(channelId, 10))) {\n            setErrors(\"Enter Interger channel Id\")\n        }\n        else {\n            let value = await GetChannelDetails(channelId)\n            setDetails(value);\n        }\n    }\n\n    const onOptionChange = event => setChannelId(event.target.value)\n    return (\n        <>\n            <h2>Channel Details</h2>\n            <div>\n                <div>\n                    <h1>Hello React with Local Storage!</h1>\n                    <form onSubmit={onChange}>\n                        <input value={value} type=\"text\" onChange={onValueChange} />\n                        <p>{value}</p>\n                        <button >Add Channel Id</button>\n                    </form>\n                    <p>channel -> '{channels}'</p>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"channelId\">Channel Id</label>\n                        <div className=\"field\">\n                            <ChannelList onChange={onOptionChange} />\n                        </div>\n                        {errors && <div className=\"alert alert-danger\">{errors}</div>}\n                    </div>\n                    <button>Get Channel Details</button>\n                </form>\n                {(errors === '') && (\n                    <div >\n                        <h2>Channel Details of channel id -> {channelId}</h2>\n                        <ManageDetailsView details={details} />\n                    </div>\n                )}\n                <button onClick={fetchLastState}>Fetch Last State</button>\n            </div>\n        </>\n    );\n};\n\nexport default ChannelDetailsPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n    const activeStyle = { color: \"grey\" };\n    return (\n        <h2>\n            <nav>\n                <NavLink activeStyle={activeStyle} exact to=\"/\">\n                    Home\n                </NavLink>\n                {\" | \"}\n                <NavLink activeStyle={activeStyle} to=\"/channeldetails\">\n                    Channel Details\n                </NavLink>\n                {\" | \"}\n                <NavLink activeStyle={activeStyle} to=\"/confirmdeposit\">\n                    Channel Deposit\n                </NavLink>\n                {\" | \"}\n                <NavLink activeStyle={activeStyle} to=\"/transaction\">\n                    Transaction\n                </NavLink>\n                {\" | \"}\n                <NavLink activeStyle={activeStyle} to=\"/about\">\n                    About\n                </NavLink>\n            </nav>\n        </h2>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n      </>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport './UserList.css'\nfunction UserList(props) {\n    return (\n        <div>\n            <h2>User DataBase</h2>\n            <table id='table' className=\"table\">\n                <thead>\n                    <tr>\n                        <th>&nbsp;</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Category</th>\n                        <th>Listening On</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map(user => {\n                        return (\n                            <tr key={user.id}>\n                                <td>\n                                    <button\n                                        className=\"btn btn-outline-danger\"\n                                        onClick={() => {\n                                            const min = 1000;\n                                            const max = 100000000;\n                                            const rand = Math.floor(min + Math.random() * (max - min));\n                                            console.log(rand)\n                                            props.createNewChannel(rand, user.address).then(() => {\n                                                // Add Channel Id in List\n                                                // set default state as an last state\n                                                // set listening socket from UserList \n                                                toast.success(\"Channel Created with id \" + rand);\n                                            });\n                                        }}\n                                    >\n                                        CreateChannel\n                                </button>\n                                </td>\n                                <td>{user.name}</td>\n                                <td>{user.address}</td>\n                                <td>{user.category}</td>\n                                <td>{user.listen}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n// UserList.propTypes = {\n//     deleteCourse: PropTypes.func.isRequired,\n//     courses: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.number.isRequired,\n//             title: PropTypes.string.isRequired,\n//             authorId: PropTypes.number.isRequired,\n//             category: PropTypes.string.isRequired\n//         })\n//     ).isRequired\n// };\n\nexport default UserList;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport UserList from './components/UserList';\nimport { CreateNewChannel } from './contract/contract_transaction';\nimport { Users } from \"./mockData/mockUsers\";\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Shipment Application</h1>\n      <p>React, Flux, and React Router for ultra-responsive web apps.</p>\n      {/* <Link to=\"plasmacash\" className=\"btn btn-primary\">\n        Plasma Cash\n      </Link>\n      {\"  \"}\n      <Link to=\"multichannel\" className=\"btn btn-primary\">\n        Payment Channel\n      </Link> */}\n      <UserList users={Users} createNewChannel={CreateNewChannel} />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <h2>Page Not Found</h2>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import { FetchAccount } from '../components/MetaMaskFetch';\nconst Web3 = require('web3')\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n\nasync function GenerateSignatures(count, aliceCash, bobCash) {\n\n    // const hash = await web3.utils.soliditySha3(\n    //     {type: 'address', value: vpc.options.address},\n    //     {type: 'uint', value: sid},\n    //     {type: 'uint', value: blockedAlice},\n    //     {type: 'uint', value: blockedBob},\n    //     {type: 'uint', value: version});\n\n    const hash = await web3.utils.soliditySha3(\n        { type: 'uint', value: count },\n        { type: 'uint', value: aliceCash },\n        { type: 'uint', value: bobCash });\n\n    let sender = await FetchAccount()\n    sender = web3.utils.toChecksumAddress(sender)\n    console.log(sender)\n    const sigAlice = await web3.eth.personal.sign(hash, sender, \"\");\n    //web3.eth.sign(hash,aliceAddr);\n    //web3.eth.sign(hash,bobAddr);\n    return {\n        alice: sigAlice\n    };\n}\n\n\nexport default GenerateSignatures;","import React from \"react\";\nimport GenerateSignatures from \"../contract/CreateSignature\";\nimport { IsValidSignature } from \"../contract/contract_transaction\";\nimport { FetchAccount } from \"./MetaMaskFetch\";\n// import { toast } from \"react-toastify\";\nconst axios = require('axios');\n\nclass CreateTransaction extends React.Component {\n    state = {\n        errors: '',\n        channelId: '',\n        aliceCash: '',\n        bobCash: '',\n        lastState: localStorage.getItem(this.props.channelId + 'lastState') || [\n            \"channelId\",\n            \"0\",\n            \"AliceCash\",\n            \"BobCash\",\n            \"Signature\"\n        ]\n    }\n\n    // const [course, setCourse] = useState({\n    //     channelId: \"\",\n    //     count: \"\",\n    //     AliceCash: \"\",\n    //     BobCash: \"\",\n    //     Signature: \"\"\n    // });\n    // localStorage.setItem(props.channelId + 'lastState', lastState);\n\n    onChange = async (event) => this.setState({ 'lastState': event.target.value });\n\n    handleConfirmChannel = async (event) => {\n        event.preventDefault();\n        this.setState({ 'errors': \"\" })\n        if (Number.isNaN(parseInt(this.state.aliceCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else if (Number.isNaN(parseInt(this.state.bobCash, 10))) {\n            this.setState({ 'errors': \"Enter Integer amount(in wei unit)\" })\n        }\n        else {\n            let sig = '0x0c588045f26dfa608d405ee0511dd3877800fd60933f87767c6906d37cad13786afd90b9df4d8b07d448c7b599c1e47a41ed1c12c01c4a57cbedb15cdc42a0791c'\n            let sender = await FetchAccount()\n            console.log(await IsValidSignature(sender, 0, 1, 1, sig))\n            const resp1 = await axios.get('localhost:3000/signature/', {\n                params: {\n                    signature: sig,\n                }\n            });\n            console.log(resp1.data)\n            // console.log(await GenerateSignatures(this.state.lastState[1], this.state.aliceCash, this.state.bobCash))\n            // ChannelConfirm(this.state.channelId, this.state.amount)\n        }\n        this.setState({ 'aliceCash': \"\" })\n        this.setState({ 'bobCash': \"\" })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Channel Details</h2>\n                <div>\n                    <div>\n                        <h1>Hello React with Local Storage!</h1>\n                        <p>{this.state.lastState}</p>\n                    </div>\n                    <form onSubmit={this.handleConfirmChannel}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Count\">Count</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"Count\"\n                                    readOnly\n                                    type=\"text\"\n                                    name=\"Count\"\n                                    className=\"form-control\"\n                                    value={this.state.lastState[1]}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"aliceCash\">Alice Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"aliceCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ aliceCash: event.target.value })}\n                                    name=\"aliceCash\"\n                                    className=\"form-control\"\n                                    value={this.state.aliceCash}\n                                />\n                            </div>\n                            {/* {this.state.amountError && <div className=\"alert alert-danger\">{this.state.amountError}</div>} */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"bobCash\">Bob Cash</label>\n                            <div className=\"field\">\n                                <input\n                                    id=\"bobCash\"\n                                    type=\"text\"\n                                    onChange={event => this.setState({ bobCash: event.target.value })}\n                                    name=\"bobCash\"\n                                    className=\"form-control\"\n                                    value={this.state.bobCash}\n                                />\n                            </div>\n                            {this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div>}\n                        </div>\n                        <input type=\"submit\" value=\"Submit Transaction\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default CreateTransaction;\n","import React, { useEffect, useState } from 'react';\nimport bg from './BG.jpeg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ConfirmDeposit from './components/ConfirmDeposit';\nimport ChannelDetailsPage from './components/ChannelDetailsPage';\nimport { ToastContainer } from 'react-toastify';\nimport Header from './Header';\nimport AboutPage from './AboutPage';\nimport HomePage from './HomePage';\nimport NotFoundPage from './NotFoundPage';\nimport CreateTransaction from './components/CreateTransaction';\n\nconst App = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const imageUrl = windowWidth >= 650 ? bg : bg;\n\n  const handleWindowResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    }\n  });\n\n  return (\n    <div className=\"container-fluid\" style={{ height: window.innerWidth, backgroundImage: `url(${imageUrl})` }}>\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          {/* <Route path=\"/courses\" component={CoursesPage} /> */}\n          <Route path=\"/about\" component={AboutPage} />\n          {/* <Route path=\"/course/:slug\" component={ManageCoursePage} /> */}\n          <Route path=\"/channeldetails\" component={ChannelDetailsPage} />\n          <Route path=\"/transaction\" component={CreateTransaction} />\n          <Redirect from=\"/about-page\" to=\"about\" />\n          <Route path=\"/confirmdeposit\" component={ConfirmDeposit} />\n          {/* <Route path=\"/pending_request\" component={PendingState} /> */}\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n\n    </div>\n  );\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const Users = [\n\n    { id: 0, name: \"Daenerys Targaryen\", address: \"0xd7b02e3bdf2eddbb5793d4728eafa83ec8c07d0b\", category: \"default\", listen: 'http://localhost:3000' },\n    { id: 1, name: \"John Snow\", address: \"0xa5547c75b3c989a4fcd6f0456f5aa6e91e3734cf\", category: \"default\", listen: 'http://localhost:3001' },\n    { id: 2, name: \"Cersei Lannister\", address: \"0x1260e43bd7a796f8da0d8af1c545bdc0e11aa000\", category: \"default\", listen: 'http://localhost:3002' },\n    { id: 3, name: \"Tyrion Lannister\", address: \"0x88736c5fda264b5ce5a40d68a306cfb287d93109\", category: \"default\", listen: 'http://localhost:3003' },\n    { id: 4, name: \"Arya Stark\", address: \"0x52b112ceedc6a020ff755bb2be68796cd45bae3e\", category: \"default\", listen: 'http://localhost:3004' },\n    { id: 5, name: \"Jaime Lannister\", address: \"0x1398dcd86b31651a05c74a743aae9ff083cb22fa\", category: \"default\", listen: 'http://localhost:3005' },\n    { id: 6, name: \"Catelyn Stark\", address: \"0x817c74d480eb3b3244eb249c5851ad3eb43db3a5\", category: \"default\", listen: 'http://localhost:3006' },\n    { id: 7, name: \"Jorah Mormont\", address: \"0xe5830e52551a636bc2a68a11b1b03330c3ef1096\", category: \"default\", listen: 'http://localhost:3007' },\n    { id: 8, name: \"Sansa Stark\", address: \"0xb4fb0a5bfaf31f18e09f42731ab98a03d8054c97\", category: \"default\", listen: 'http://localhost:3008' },\n    { id: 9, name: \"Margaery Tyrell\", address: \"0x07e5f25c3d55c9dc556aece12335a982b8796225\", category: \"default\", listen: 'http://localhost:3009' }\n];\n\n\nconst PrivateKey = [\n    { id: 0, key: 0x740b220f156da692ead7d9e7a1b281534cb90f6821f36628485f1d5a05056be9 },\n    { id: 1, key: 0x1bb00ed95652a818ff64043d9f098bbd637c5c90aae597eac4ea8f9f089e7c99 },\n    { id: 2, key: 0xd0237288eb37f958c75ff28f7e111e983a91b31a6b13ddd28d318fb0bb1d77d4 },\n    { id: 3, key: 0xebeb0979c3b0b62bf8bea7922296cc0353412d01453165d79b393b56ba7c0522 },\n    { id: 4, key: 0x29baf81d12a4cdde750487db7475ffb9df69f232088569ac09c56377b0bceac2 },\n    { id: 5, key: 0xecc2d5097e6fe2f42e77ffa61c885314f790955299b50b3156c8178e6005946d },\n    { id: 6, key: 0xc3f9e39a853fa7b4455e21a77f942734fad1c99f03e37ee0bf6f01c73581f099 },\n    { id: 7, key: 0xdb1f48f1b39abe6b62112d6778ec3f204b9c91b30ce9fcc2df4b6281e8ff4505 },\n    { id: 8, key: 0x8b32b1b8b64a2a6e6bfb22605ebc3b53e98a97d5fd282c3c9c6fc3c6e1099ae1 },\n    { id: 9, key: 0xdeabb45af6db1db4d0d68783aaa7bbd481eca5256c60af82cb030da20cf20abf },\n];\n\nmodule.exports = {\n    Users,\n    PrivateKey\n};","module.exports = __webpack_public_path__ + \"static/media/BG.385e9ae2.jpeg\";","module.exports.contract_address = \"0xbA886b598e75CD3526F789c8D58B95464e778387\";\n\nmodule.exports.contract_abi = [\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"sender_balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"recipient_balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"signature\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"close\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"confirm\",\n        \"outputs\": [],\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"name\": \"libSig\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"EventChannelInitializing\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"name\": \"addressAlice\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"addressBob\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"EventInitializing\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"name\": \"cashAlice\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"cashBob\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EventInitialized\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [],\n        \"name\": \"EventRefunded\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [],\n        \"name\": \"EventClosing\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [],\n        \"name\": \"EventClosed\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [],\n        \"name\": \"EventNotClosed\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"finalizeClose\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"_addressBob\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"openChannel\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"refund\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"channel_id\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getChannel\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"components\": [\n                            {\n                                \"name\": \"id\",\n                                \"type\": \"address\"\n                            },\n                            {\n                                \"name\": \"cash\",\n                                \"type\": \"uint256\"\n                            },\n                            {\n                                \"name\": \"waitForInput\",\n                                \"type\": \"bool\"\n                            }\n                        ],\n                        \"name\": \"alice\",\n                        \"type\": \"tuple\"\n                    },\n                    {\n                        \"components\": [\n                            {\n                                \"name\": \"id\",\n                                \"type\": \"address\"\n                            },\n                            {\n                                \"name\": \"cash\",\n                                \"type\": \"uint256\"\n                            },\n                            {\n                                \"name\": \"waitForInput\",\n                                \"type\": \"bool\"\n                            }\n                        ],\n                        \"name\": \"bob\",\n                        \"type\": \"tuple\"\n                    },\n                    {\n                        \"name\": \"timeout\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"name\": \"status\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"name\": \"publish_tx_count\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"name\": \"money\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"addr\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"sender_balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"recipient_balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"signature\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"isValidSignature\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];"],"sourceRoot":""}